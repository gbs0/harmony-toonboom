%!PS-Adobe-3.1 EPSF-3.0
%ADO_DSC_Encoding: Windows Cyrillic
%%Title: Animals_8.eps
%%Creator: Adobe Illustrator(R) 18.0
%%For: Alexutemov
%%CreationDate: 4/4/2015
%%BoundingBox: 0 0 4000 4000
%%HiResBoundingBox: 0 0 4000 4000
%%CropBox: 0 0 4000 4000
%%LanguageLevel: 2
%%DocumentData: Clean7Bit
%ADOBeginClientInjection: DocumentHeader "AI11EPS"
%%AI8_CreatorVersion: 18.0.0%AI9_PrintingDataBegin%ADO_BuildNumber: Adobe Illustrator(R) 18.0.0 x18 R agm 4.7713 ct 5.3840%ADO_ContainsXMP: MainFirst
%ADOEndClientInjection: DocumentHeader "AI11EPS"
%%Pages: 1
%%DocumentNeededResources: 
%%DocumentSuppliedResources: procset Adobe_AGM_Image 1.0 0
%%+ procset Adobe_CoolType_Utility_T42 1.0 0
%%+ procset Adobe_CoolType_Utility_MAKEOCF 1.23 0
%%+ procset Adobe_CoolType_Core 2.31 0
%%+ procset Adobe_AGM_Core 2.0 0
%%+ procset Adobe_AGM_Utils 1.0 0
%%DocumentFonts: 
%%DocumentNeededFonts: 
%%DocumentNeededFeatures: 
%%DocumentSuppliedFeatures: 
%%DocumentCustomColors: 
%%CMYKCustomColor: 
%%RGBCustomColor: 
%%EndComments
         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
%%BeginDefaults
%%ViewingOrientation: 1 0 0 1
%%EndDefaults
%%BeginProlog
%%BeginResource: procset Adobe_AGM_Utils 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2006 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{currentpacking	true setpacking}if
userdict/Adobe_AGM_Utils 75 dict dup begin put
/bdf
{bind def}bind def
/nd{null def}bdf
/xdf
{exch def}bdf
/ldf 
{load def}bdf
/ddf
{put}bdf	
/xddf
{3 -1 roll put}bdf	
/xpt
{exch put}bdf
/ndf
{
	exch dup where{
		pop pop pop
	}{
		xdf
	}ifelse
}def
/cdndf
{
	exch dup currentdict exch known{
		pop pop
	}{
		exch def
	}ifelse
}def
/gx
{get exec}bdf
/ps_level
	/languagelevel where{
		pop systemdict/languagelevel gx
	}{
		1
	}ifelse
def
/level2 
	ps_level 2 ge
def
/level3 
	ps_level 3 ge
def
/ps_version
	{version cvr}stopped{-1}if
def
/set_gvm
{currentglobal exch setglobal}bdf
/reset_gvm
{setglobal}bdf
/makereadonlyarray
{
	/packedarray where{pop packedarray
	}{
		array astore readonly}ifelse
}bdf
/map_reserved_ink_name
{
	dup type/stringtype eq{
		dup/Red eq{
			pop(_Red_)
		}{
			dup/Green eq{
				pop(_Green_)
			}{
				dup/Blue eq{
					pop(_Blue_)
				}{
					dup()cvn eq{
						pop(Process)
					}if
				}ifelse
			}ifelse
		}ifelse
	}if
}bdf
/AGMUTIL_GSTATE 22 dict def
/get_gstate
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_clr_spc currentcolorspace def
	/AGMUTIL_GSTATE_clr_indx 0 def
	/AGMUTIL_GSTATE_clr_comps 12 array def
	mark currentcolor counttomark
		{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 3 -1 roll put
		/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 add def}repeat pop
	/AGMUTIL_GSTATE_fnt rootfont def
	/AGMUTIL_GSTATE_lw currentlinewidth def
	/AGMUTIL_GSTATE_lc currentlinecap def
	/AGMUTIL_GSTATE_lj currentlinejoin def
	/AGMUTIL_GSTATE_ml currentmiterlimit def
	currentdash/AGMUTIL_GSTATE_do xdf/AGMUTIL_GSTATE_da xdf
	/AGMUTIL_GSTATE_sa currentstrokeadjust def
	/AGMUTIL_GSTATE_clr_rnd currentcolorrendering def
	/AGMUTIL_GSTATE_op currentoverprint def
	/AGMUTIL_GSTATE_bg currentblackgeneration cvlit def
	/AGMUTIL_GSTATE_ucr currentundercolorremoval cvlit def
	currentcolortransfer cvlit/AGMUTIL_GSTATE_gy_xfer xdf cvlit/AGMUTIL_GSTATE_b_xfer xdf
		cvlit/AGMUTIL_GSTATE_g_xfer xdf cvlit/AGMUTIL_GSTATE_r_xfer xdf
	/AGMUTIL_GSTATE_ht currenthalftone def
	/AGMUTIL_GSTATE_flt currentflat def
	end
}def
/set_gstate
{
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_clr_spc setcolorspace
	AGMUTIL_GSTATE_clr_indx{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 1 sub get
	/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 sub def}repeat setcolor
	AGMUTIL_GSTATE_fnt setfont
	AGMUTIL_GSTATE_lw setlinewidth
	AGMUTIL_GSTATE_lc setlinecap
	AGMUTIL_GSTATE_lj setlinejoin
	AGMUTIL_GSTATE_ml setmiterlimit
	AGMUTIL_GSTATE_da AGMUTIL_GSTATE_do setdash
	AGMUTIL_GSTATE_sa setstrokeadjust
	AGMUTIL_GSTATE_clr_rnd setcolorrendering
	AGMUTIL_GSTATE_op setoverprint
	AGMUTIL_GSTATE_bg cvx setblackgeneration
	AGMUTIL_GSTATE_ucr cvx setundercolorremoval
	AGMUTIL_GSTATE_r_xfer cvx AGMUTIL_GSTATE_g_xfer cvx AGMUTIL_GSTATE_b_xfer cvx
		AGMUTIL_GSTATE_gy_xfer cvx setcolortransfer
	AGMUTIL_GSTATE_ht/HalftoneType get dup 9 eq exch 100 eq or
		{
		currenthalftone/HalftoneType get AGMUTIL_GSTATE_ht/HalftoneType get ne
			{
			 mark AGMUTIL_GSTATE_ht{sethalftone}stopped cleartomark
			}if
		}{
		AGMUTIL_GSTATE_ht sethalftone
		}ifelse
	AGMUTIL_GSTATE_flt setflat
	end
}def
/get_gstate_and_matrix
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_ctm matrix currentmatrix def
	end
	get_gstate
}def
/set_gstate_and_matrix
{
	set_gstate
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_ctm setmatrix
	end
}def
/AGMUTIL_str256 256 string def
/AGMUTIL_src256 256 string def
/AGMUTIL_dst64 64 string def
/AGMUTIL_srcLen nd
/AGMUTIL_ndx nd
/AGMUTIL_cpd nd
/capture_cpd{
	//Adobe_AGM_Utils/AGMUTIL_cpd currentpagedevice ddf
}def
/thold_halftone
{
	level3
		{sethalftone currenthalftone}
		{
			dup/HalftoneType get 3 eq
			{
				sethalftone currenthalftone
			}{
				begin
				Width Height mul{
					Thresholds read{pop}if
				}repeat
				end
				currenthalftone
			}ifelse
		}ifelse
}def 
/rdcmntline
{
	currentfile AGMUTIL_str256 readline pop
	(%)anchorsearch{pop}if
}bdf
/filter_cmyk
{	
	dup type/filetype ne{
		exch()/SubFileDecode filter
	}{
		exch pop
	}
	ifelse
	[
	exch
	{
		AGMUTIL_src256 readstring pop
		dup length/AGMUTIL_srcLen exch def
		/AGMUTIL_ndx 0 def
		AGMCORE_plate_ndx 4 AGMUTIL_srcLen 1 sub{
			1 index exch get
			AGMUTIL_dst64 AGMUTIL_ndx 3 -1 roll put
			/AGMUTIL_ndx AGMUTIL_ndx 1 add def
		}for
		pop
		AGMUTIL_dst64 0 AGMUTIL_ndx getinterval
	}
	bind
	/exec cvx
	]cvx
}bdf
/filter_indexed_devn
{
	cvi Names length mul names_index add Lookup exch get
}bdf
/filter_devn
{	
	4 dict begin
	/srcStr xdf
	/dstStr xdf
	dup type/filetype ne{
		0()/SubFileDecode filter
	}if
	[
	exch
		[
			/devicen_colorspace_dict/AGMCORE_gget cvx/begin cvx
			currentdict/srcStr get/readstring cvx/pop cvx
			/dup cvx/length cvx 0/gt cvx[
				Adobe_AGM_Utils/AGMUTIL_ndx 0/ddf cvx
				names_index Names length currentdict/srcStr get length 1 sub{
					1/index cvx/exch cvx/get cvx
					currentdict/dstStr get/AGMUTIL_ndx/load cvx 3 -1/roll cvx/put cvx
					Adobe_AGM_Utils/AGMUTIL_ndx/AGMUTIL_ndx/load cvx 1/add cvx/ddf cvx
				}for
				currentdict/dstStr get 0/AGMUTIL_ndx/load cvx/getinterval cvx
			]cvx/if cvx
			/end cvx
		]cvx
		bind
		/exec cvx
	]cvx
	end
}bdf
/AGMUTIL_imagefile nd
/read_image_file
{
	AGMUTIL_imagefile 0 setfileposition
	10 dict begin
	/imageDict xdf
	/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
	/imbufIdx 0 def
	/origDataSource imageDict/DataSource get def
	/origMultipleDataSources imageDict/MultipleDataSources get def
	/origDecode imageDict/Decode get def
	/dstDataStr imageDict/Width get colorSpaceElemCnt mul string def
	imageDict/MultipleDataSources known{MultipleDataSources}{false}ifelse
	{
		/imbufCnt imageDict/DataSource get length def
		/imbufs imbufCnt array def
		0 1 imbufCnt 1 sub{
			/imbufIdx xdf
			imbufs imbufIdx imbufLen string put
			imageDict/DataSource get imbufIdx[AGMUTIL_imagefile imbufs imbufIdx get/readstring cvx/pop cvx]cvx put
		}for
		DeviceN_PS2{
			imageDict begin
		 	/DataSource[DataSource/devn_sep_datasource cvx]cvx def
			/MultipleDataSources false def
			/Decode[0 1]def
			end
		}if
	}{
		/imbuf imbufLen string def
		Indexed_DeviceN level3 not and DeviceN_NoneName or{
			/srcDataStrs[imageDict begin
				currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
				{
					Width Decode length 2 div mul cvi string
				}repeat
				end]def		
			imageDict begin
		 	/DataSource[AGMUTIL_imagefile Decode BitsPerComponent false 1/filter_indexed_devn load dstDataStr srcDataStrs devn_alt_datasource/exec cvx]cvx def
			/Decode[0 1]def
			end
		}{
			imageDict/DataSource[1 string dup 0 AGMUTIL_imagefile Decode length 2 idiv string/readstring cvx/pop cvx names_index/get cvx/put cvx]cvx put
			imageDict/Decode[0 1]put
		}ifelse
	}ifelse
	imageDict exch
	load exec
	imageDict/DataSource origDataSource put
	imageDict/MultipleDataSources origMultipleDataSources put
	imageDict/Decode origDecode put	
	end
}bdf
/write_image_file
{
	begin
	{(AGMUTIL_imagefile)(w+)file}stopped{
		false
	}{
		Adobe_AGM_Utils/AGMUTIL_imagefile xddf 
		2 dict begin
		/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
		MultipleDataSources{DataSource 0 get}{DataSource}ifelse type/filetype eq{
			/imbuf imbufLen string def
		}if
		1 1 Height MultipleDataSources not{Decode length 2 idiv mul}if{
			pop
			MultipleDataSources{
			 	0 1 DataSource length 1 sub{
					DataSource type dup
					/arraytype eq{
						pop DataSource exch gx
					}{
						/filetype eq{
							DataSource exch get imbuf readstring pop
						}{
							DataSource exch get
						}ifelse
					}ifelse
					AGMUTIL_imagefile exch writestring
				}for
			}{
				DataSource type dup
				/arraytype eq{
					pop DataSource exec
				}{
					/filetype eq{
						DataSource imbuf readstring pop
					}{
						DataSource
					}ifelse
				}ifelse
				AGMUTIL_imagefile exch writestring
			}ifelse
		}for
		end
		true
	}ifelse
	end
}bdf
/close_image_file
{
	AGMUTIL_imagefile closefile(AGMUTIL_imagefile)deletefile
}def
statusdict/product known userdict/AGMP_current_show known not and{
	/pstr statusdict/product get def
	pstr(HP LaserJet 2200)eq 	
	pstr(HP LaserJet 4000 Series)eq or
	pstr(HP LaserJet 4050 Series )eq or
	pstr(HP LaserJet 8000 Series)eq or
	pstr(HP LaserJet 8100 Series)eq or
	pstr(HP LaserJet 8150 Series)eq or
	pstr(HP LaserJet 5000 Series)eq or
	pstr(HP LaserJet 5100 Series)eq or
	pstr(HP Color LaserJet 4500)eq or
	pstr(HP Color LaserJet 4600)eq or
	pstr(HP LaserJet 5Si)eq or
	pstr(HP LaserJet 1200 Series)eq or
	pstr(HP LaserJet 1300 Series)eq or
	pstr(HP LaserJet 4100 Series)eq or 
	{
 		userdict/AGMP_current_show/show load put
		userdict/show{
		 currentcolorspace 0 get
		 /Pattern eq
		 {false charpath f}
		 {AGMP_current_show}ifelse
		}put
	}if
	currentdict/pstr undef
}if
/consumeimagedata
{
	begin
	AGMIMG_init_common
	currentdict/MultipleDataSources known not
		{/MultipleDataSources false def}if
	MultipleDataSources
		{
		DataSource 0 get type
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width cvi string def
			1 1 Height cvi
				{
				pop
				0 1 DataSource length 1 sub
					{
					DataSource exch get
					flushbuffer readstring pop pop
					}for
				}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or DataSource 0 get xcheck and
			{
			Width Height mul cvi
				{
				0 1 DataSource length 1 sub
					{dup DataSource exch gx length exch 0 ne{pop}if}for
				dup 0 eq
					{pop exit}if
				sub dup 0 le
					{exit}if
				}loop
			pop
			}if		
		}
		{
		/DataSource load type 
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width Decode length 2 idiv mul cvi string def
			1 1 Height{pop DataSource flushbuffer readstring pop pop}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or/DataSource load xcheck and
			{
				Height Width BitsPerComponent mul 8 BitsPerComponent sub add 8 idiv Decode length 2 idiv mul mul
					{
					DataSource length dup 0 eq
						{pop exit}if
					sub dup 0 le
						{exit}if
					}loop
				pop
			}if
		}ifelse
	end
}bdf
/addprocs
{
	 2{/exec load}repeat
	 3 1 roll
	 [5 1 roll]bind cvx
}def
/modify_halftone_xfer
{
	currenthalftone dup length dict copy begin
	 currentdict 2 index known{
	 	1 index load dup length dict copy begin
		currentdict/TransferFunction known{
			/TransferFunction load
		}{
			currenttransfer
		}ifelse
		 addprocs/TransferFunction xdf 
		 currentdict end def
		currentdict end sethalftone
	}{
		currentdict/TransferFunction known{
			/TransferFunction load 
		}{
			currenttransfer
		}ifelse
		addprocs/TransferFunction xdf
		currentdict end sethalftone		
		pop
	}ifelse
}def
/clonearray
{
	dup xcheck exch
	dup length array exch
	Adobe_AGM_Core/AGMCORE_tmp -1 ddf 
	{
	Adobe_AGM_Core/AGMCORE_tmp 2 copy get 1 add ddf 
	dup type/dicttype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get
			exch
			clonedict
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	dup type/arraytype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get exch
			clonearray
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	exch dup
	Adobe_AGM_Core/AGMCORE_tmp get 4 -1 roll put
	}forall
	exch{cvx}if
}bdf
/clonedict
{
	dup length dict
	begin
	{
		dup type/dicttype eq
			{clonedict}if
		dup type/arraytype eq
			{clonearray}if
		def
	}forall
	currentdict
	end
}bdf
/DeviceN_PS2
{
	/currentcolorspace AGMCORE_gget 0 get/DeviceN eq level3 not and
}bdf
/Indexed_DeviceN
{
	/indexed_colorspace_dict AGMCORE_gget dup null ne{
		dup/CSDBase known{
			/CSDBase get/CSD get_res/Names known 
		}{
			pop false
		}ifelse
	}{
		pop false
	}ifelse
}bdf
/DeviceN_NoneName
{	
	/Names where{
		pop
		false Names
		{
			(None)eq or
		}forall
	}{
		false
	}ifelse
}bdf
/DeviceN_PS2_inRip_seps
{
	/AGMCORE_in_rip_sep where
	{
		pop dup type dup/arraytype eq exch/packedarraytype eq or
		{
			dup 0 get/DeviceN eq level3 not and AGMCORE_in_rip_sep and
			{
				/currentcolorspace exch AGMCORE_gput
				false
			}{
				true
			}ifelse
		}{
			true
		}ifelse
	}{
		true
	}ifelse
}bdf
/base_colorspace_type
{
	dup type/arraytype eq{0 get}if
}bdf
/currentdistillerparams where{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
{
	/pdfmark_5{cleartomark}bind def
}{
	/pdfmark_5{pdfmark}bind def
}ifelse
/ReadBypdfmark_5
{
	currentfile exch 0 exch/SubFileDecode filter
	/currentdistillerparams where 
	{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
	{flushfile cleartomark}
	{/PUT pdfmark}ifelse 	
}bdf
/ReadBypdfmark_5_string
{
	2 dict begin
	/makerString exch def string/tmpString exch def
	{
		currentfile tmpString readline not{pop exit}if
		makerString anchorsearch
		{
			pop pop cleartomark exit
		}{
			3 copy/PUT pdfmark_5 pop 2 copy(\n)/PUT pdfmark_5
		}ifelse
	}loop
	end
}bdf
/xpdfm
{
	{
		dup 0 get/Label eq
		{
			aload length[exch 1 add 1 roll/PAGELABEL
		}{
			aload pop
			[{ThisPage}<<5 -2 roll>>/PUT
		}ifelse
		pdfmark_5
	}forall
}bdf
/lmt{
	dup 2 index le{exch}if pop dup 2 index ge{exch}if pop
}bdf
/int{
	dup 2 index sub 3 index 5 index sub div 6 -2 roll sub mul exch pop add exch pop
}bdf
/ds{
	Adobe_AGM_Utils begin
}bdf
/dt{
	currentdict Adobe_AGM_Utils eq{
		end
	}if
}bdf
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_AGM_Core 2.0 0
%%Version: 2.0 0
%%Copyright: Copyright(C)1997-2007 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Core 209 dict dup begin put
/Adobe_AGM_Core_Id/Adobe_AGM_Core_2.0_0 def
/AGMCORE_str256 256 string def
/AGMCORE_save nd
/AGMCORE_graphicsave nd
/AGMCORE_c 0 def
/AGMCORE_m 0 def
/AGMCORE_y 0 def
/AGMCORE_k 0 def
/AGMCORE_cmykbuf 4 array def
/AGMCORE_screen[currentscreen]cvx def
/AGMCORE_tmp 0 def
/AGMCORE_&setgray nd
/AGMCORE_&setcolor nd
/AGMCORE_&setcolorspace nd
/AGMCORE_&setcmykcolor nd
/AGMCORE_cyan_plate nd
/AGMCORE_magenta_plate nd
/AGMCORE_yellow_plate nd
/AGMCORE_black_plate nd
/AGMCORE_plate_ndx nd
/AGMCORE_get_ink_data nd
/AGMCORE_is_cmyk_sep nd
/AGMCORE_host_sep nd
/AGMCORE_avoid_L2_sep_space nd
/AGMCORE_distilling nd
/AGMCORE_composite_job nd
/AGMCORE_producing_seps nd
/AGMCORE_ps_level -1 def
/AGMCORE_ps_version -1 def
/AGMCORE_environ_ok nd
/AGMCORE_CSD_cache 0 dict def
/AGMCORE_currentoverprint false def
/AGMCORE_deltaX nd
/AGMCORE_deltaY nd
/AGMCORE_name nd
/AGMCORE_sep_special nd
/AGMCORE_err_strings 4 dict def
/AGMCORE_cur_err nd
/AGMCORE_current_spot_alias false def
/AGMCORE_inverting false def
/AGMCORE_feature_dictCount nd
/AGMCORE_feature_opCount nd
/AGMCORE_feature_ctm nd
/AGMCORE_ConvertToProcess false def
/AGMCORE_Default_CTM matrix def
/AGMCORE_Default_PageSize nd
/AGMCORE_Default_flatness nd
/AGMCORE_currentbg nd
/AGMCORE_currentucr nd
/AGMCORE_pattern_paint_type 0 def
/knockout_unitsq nd
currentglobal true setglobal
[/CSA/Gradient/Procedure]
{
	/Generic/Category findresource dup length dict copy/Category defineresource pop
}forall
setglobal
/AGMCORE_key_known
{
	where{
		/Adobe_AGM_Core_Id known
	}{
		false
	}ifelse
}ndf
/flushinput
{
	save
	2 dict begin
	/CompareBuffer 3 -1 roll def
	/readbuffer 256 string def
	mark
	{
	currentfile readbuffer{readline}stopped
		{cleartomark mark}
		{
		not
			{pop exit}
		if
		CompareBuffer eq
			{exit}
		if
		}ifelse
	}loop
	cleartomark
	end
	restore
}bdf
/getspotfunction
{
	AGMCORE_screen exch pop exch pop
	dup type/dicttype eq{
		dup/HalftoneType get 1 eq{
			/SpotFunction get
		}{
			dup/HalftoneType get 2 eq{
				/GraySpotFunction get
			}{
				pop
				{
					abs exch abs 2 copy add 1 gt{
						1 sub dup mul exch 1 sub dup mul add 1 sub
					}{
						dup mul exch dup mul add 1 exch sub
					}ifelse
				}bind
			}ifelse
		}ifelse
	}if
}def
/np
{newpath}bdf
/clp_npth
{clip np}def
/eoclp_npth
{eoclip np}def
/npth_clp
{np clip}def
/graphic_setup
{
	/AGMCORE_graphicsave save store
	concat
	0 setgray
	0 setlinecap
	0 setlinejoin
	1 setlinewidth
	[]0 setdash
	10 setmiterlimit
	np
	false setoverprint
	false setstrokeadjust
	//Adobe_AGM_Core/spot_alias gx
	/Adobe_AGM_Image where{
		pop
		Adobe_AGM_Image/spot_alias 2 copy known{
			gx
		}{
			pop pop
		}ifelse
	}if
	/sep_colorspace_dict null AGMCORE_gput
	100 dict begin
	/dictstackcount countdictstack def
	/showpage{}def
	mark
}def
/graphic_cleanup
{
	cleartomark
	dictstackcount 1 countdictstack 1 sub{end}for
	end
	AGMCORE_graphicsave restore
}def
/compose_error_msg
{
	grestoreall initgraphics	
	/Helvetica findfont 10 scalefont setfont
	/AGMCORE_deltaY 100 def
	/AGMCORE_deltaX 310 def
	clippath pathbbox np pop pop 36 add exch 36 add exch moveto
	0 AGMCORE_deltaY rlineto AGMCORE_deltaX 0 rlineto
	0 AGMCORE_deltaY neg rlineto AGMCORE_deltaX neg 0 rlineto closepath
	0 AGMCORE_&setgray
	gsave 1 AGMCORE_&setgray fill grestore 
	1 setlinewidth gsave stroke grestore
	currentpoint AGMCORE_deltaY 15 sub add exch 8 add exch moveto
	/AGMCORE_deltaY 12 def
	/AGMCORE_tmp 0 def
	AGMCORE_err_strings exch get
		{
		dup 32 eq
			{
			pop
			AGMCORE_str256 0 AGMCORE_tmp getinterval
			stringwidth pop currentpoint pop add AGMCORE_deltaX 28 add gt
				{
				currentpoint AGMCORE_deltaY sub exch pop
				clippath pathbbox pop pop pop 44 add exch moveto
				}if
			AGMCORE_str256 0 AGMCORE_tmp getinterval show( )show
			0 1 AGMCORE_str256 length 1 sub
				{
				AGMCORE_str256 exch 0 put
				}for
			/AGMCORE_tmp 0 def
			}{
				AGMCORE_str256 exch AGMCORE_tmp xpt
				/AGMCORE_tmp AGMCORE_tmp 1 add def
			}ifelse
		}forall
}bdf
/AGMCORE_CMYKDeviceNColorspaces[
	[/Separation/None/DeviceCMYK{0 0 0}]
	[/Separation(Black)/DeviceCMYK{0 0 0 4 -1 roll}bind]
	[/Separation(Yellow)/DeviceCMYK{0 0 3 -1 roll 0}bind]
	[/DeviceN[(Yellow)(Black)]/DeviceCMYK{0 0 4 2 roll}bind]
	[/Separation(Magenta)/DeviceCMYK{0 exch 0 0}bind]
	[/DeviceN[(Magenta)(Black)]/DeviceCMYK{0 3 1 roll 0 exch}bind]
	[/DeviceN[(Magenta)(Yellow)]/DeviceCMYK{0 3 1 roll 0}bind]
	[/DeviceN[(Magenta)(Yellow)(Black)]/DeviceCMYK{0 4 1 roll}bind]
	[/Separation(Cyan)/DeviceCMYK{0 0 0}]
	[/DeviceN[(Cyan)(Black)]/DeviceCMYK{0 0 3 -1 roll}bind]
	[/DeviceN[(Cyan)(Yellow)]/DeviceCMYK{0 exch 0}bind]
	[/DeviceN[(Cyan)(Yellow)(Black)]/DeviceCMYK{0 3 1 roll}bind]
	[/DeviceN[(Cyan)(Magenta)]/DeviceCMYK{0 0}]
	[/DeviceN[(Cyan)(Magenta)(Black)]/DeviceCMYK{0 exch}bind]
	[/DeviceN[(Cyan)(Magenta)(Yellow)]/DeviceCMYK{0}]
	[/DeviceCMYK]
]def
/ds{
	Adobe_AGM_Core begin
	/currentdistillerparams where
		{
		pop currentdistillerparams/CoreDistVersion get 5000 lt
			{<</DetectBlends false>>setdistillerparams}if
		}if	
	/AGMCORE_ps_version xdf
	/AGMCORE_ps_level xdf
	errordict/AGM_handleerror known not{
		errordict/AGM_handleerror errordict/handleerror get put
		errordict/handleerror{
			Adobe_AGM_Core begin
			$error/newerror get AGMCORE_cur_err null ne and{
				$error/newerror false put
				AGMCORE_cur_err compose_error_msg
			}if
			$error/newerror true put
			end
			errordict/AGM_handleerror get exec
			}bind put
		}if
	/AGMCORE_environ_ok 
		ps_level AGMCORE_ps_level ge
		ps_version AGMCORE_ps_version ge and 
		AGMCORE_ps_level -1 eq or
	def
	AGMCORE_environ_ok not
		{/AGMCORE_cur_err/AGMCORE_bad_environ def}if
	/AGMCORE_&setgray systemdict/setgray get def
	level2{
		/AGMCORE_&setcolor systemdict/setcolor get def
		/AGMCORE_&setcolorspace systemdict/setcolorspace get def
	}if
	/AGMCORE_currentbg currentblackgeneration def
	/AGMCORE_currentucr currentundercolorremoval def
	/AGMCORE_Default_flatness currentflat def
	/AGMCORE_distilling
		/product where{
			pop systemdict/setdistillerparams known product(Adobe PostScript Parser)ne and
		}{
			false
		}ifelse
	def
	/AGMCORE_GSTATE AGMCORE_key_known not{
		/AGMCORE_GSTATE 21 dict def
		/AGMCORE_tmpmatrix matrix def
		/AGMCORE_gstack 64 array def
		/AGMCORE_gstackptr 0 def
		/AGMCORE_gstacksaveptr 0 def
		/AGMCORE_gstackframekeys 14 def
		/AGMCORE_&gsave/gsave ldf
		/AGMCORE_&grestore/grestore ldf
		/AGMCORE_&grestoreall/grestoreall ldf
		/AGMCORE_&save/save ldf
		/AGMCORE_&setoverprint/setoverprint ldf
		/AGMCORE_gdictcopy{
			begin
			{def}forall
			end
		}def
		/AGMCORE_gput{
			AGMCORE_gstack AGMCORE_gstackptr get
			3 1 roll
			put
		}def
		/AGMCORE_gget{
			AGMCORE_gstack AGMCORE_gstackptr get
			exch
			get
		}def
		/gsave{
			AGMCORE_&gsave
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 64 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/grestore{
			AGMCORE_&grestore
			AGMCORE_gstackptr 1 sub
			dup AGMCORE_gstacksaveptr lt{1 add}if
			dup AGMCORE_gstack exch get dup/AGMCORE_currentoverprint known
				{/AGMCORE_currentoverprint get setoverprint}{pop}ifelse
			/AGMCORE_gstackptr exch store
		}def
		/grestoreall{
			AGMCORE_&grestoreall
			/AGMCORE_gstackptr AGMCORE_gstacksaveptr store 
		}def
		/save{
			AGMCORE_&save
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 64 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			/AGMCORE_gstacksaveptr AGMCORE_gstackptr store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/setoverprint{
			dup/AGMCORE_currentoverprint exch AGMCORE_gput AGMCORE_&setoverprint
		}def	
		0 1 AGMCORE_gstack length 1 sub{
				AGMCORE_gstack exch AGMCORE_gstackframekeys dict put
		}for
	}if
	level3/AGMCORE_&sysshfill AGMCORE_key_known not and
	{
		/AGMCORE_&sysshfill systemdict/shfill get def
		/AGMCORE_&sysmakepattern systemdict/makepattern get def
		/AGMCORE_&usrmakepattern/makepattern load def
	}if
	/currentcmykcolor[0 0 0 0]AGMCORE_gput
	/currentstrokeadjust false AGMCORE_gput
	/currentcolorspace[/DeviceGray]AGMCORE_gput
	/sep_tint 0 AGMCORE_gput
	/devicen_tints[0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]AGMCORE_gput
	/sep_colorspace_dict null AGMCORE_gput
	/devicen_colorspace_dict null AGMCORE_gput
	/indexed_colorspace_dict null AGMCORE_gput
	/currentcolor_intent()AGMCORE_gput
	/customcolor_tint 1 AGMCORE_gput
	/absolute_colorimetric_crd null AGMCORE_gput
	/relative_colorimetric_crd null AGMCORE_gput
	/saturation_crd null AGMCORE_gput
	/perceptual_crd null AGMCORE_gput
	currentcolortransfer cvlit/AGMCore_gray_xfer xdf cvlit/AGMCore_b_xfer xdf
		 cvlit/AGMCore_g_xfer xdf cvlit/AGMCore_r_xfer xdf
	<<
	/MaxPatternItem currentsystemparams/MaxPatternCache get
	>>
	setuserparams
	end
}def
/ps
{
	/setcmykcolor where{
		pop
		Adobe_AGM_Core/AGMCORE_&setcmykcolor/setcmykcolor load put
	}if
	Adobe_AGM_Core begin
	/setcmykcolor
	{
		4 copy AGMCORE_cmykbuf astore/currentcmykcolor exch AGMCORE_gput
		1 sub 4 1 roll
		3{
			3 index add neg dup 0 lt{
				pop 0
			}if
			3 1 roll
		}repeat
		setrgbcolor pop
	}ndf
	/currentcmykcolor
	{
		/currentcmykcolor AGMCORE_gget aload pop
	}ndf
	/setoverprint
	{pop}ndf
	/currentoverprint
	{false}ndf
	/AGMCORE_cyan_plate 1 0 0 0 test_cmyk_color_plate def
	/AGMCORE_magenta_plate 0 1 0 0 test_cmyk_color_plate def
	/AGMCORE_yellow_plate 0 0 1 0 test_cmyk_color_plate def
	/AGMCORE_black_plate 0 0 0 1 test_cmyk_color_plate def
	/AGMCORE_plate_ndx 
		AGMCORE_cyan_plate{
			0
		}{
			AGMCORE_magenta_plate{
				1
			}{
				AGMCORE_yellow_plate{
					2
				}{
					AGMCORE_black_plate{
						3
					}{
						4
					}ifelse
				}ifelse
			}ifelse
		}ifelse
		def
	/AGMCORE_have_reported_unsupported_color_space false def
	/AGMCORE_report_unsupported_color_space
	{
		AGMCORE_have_reported_unsupported_color_space false eq
		{
			(Warning: Job contains content that cannot be separated with on-host methods. This content appears on the black plate, and knocks out all other plates.)==
			Adobe_AGM_Core/AGMCORE_have_reported_unsupported_color_space true ddf
		}if
	}def
	/AGMCORE_composite_job
		AGMCORE_cyan_plate AGMCORE_magenta_plate and AGMCORE_yellow_plate and AGMCORE_black_plate and def
	/AGMCORE_in_rip_sep
		/AGMCORE_in_rip_sep where{
			pop AGMCORE_in_rip_sep
		}{
			AGMCORE_distilling 
			{
				false
			}{
				userdict/Adobe_AGM_OnHost_Seps known{
					false
				}{
					level2{
						currentpagedevice/Separations 2 copy known{
							get
						}{
							pop pop false
						}ifelse
					}{
						false
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	def
	/AGMCORE_producing_seps AGMCORE_composite_job not AGMCORE_in_rip_sep or def
	/AGMCORE_host_sep AGMCORE_producing_seps AGMCORE_in_rip_sep not and def
	/AGM_preserve_spots 
		/AGM_preserve_spots where{
			pop AGM_preserve_spots
		}{
			AGMCORE_distilling AGMCORE_producing_seps or
		}ifelse
	def
	/AGM_is_distiller_preserving_spotimages
	{
		currentdistillerparams/PreserveOverprintSettings known
		{
			currentdistillerparams/PreserveOverprintSettings get
				{
					currentdistillerparams/ColorConversionStrategy known
					{
						currentdistillerparams/ColorConversionStrategy get
						/sRGB ne
					}{
						true
					}ifelse
				}{
					false
				}ifelse
		}{
			false
		}ifelse
	}def
	/convert_spot_to_process where{pop}{
		/convert_spot_to_process
		{
			//Adobe_AGM_Core begin
			dup map_alias{
				/Name get exch pop
			}if
			dup dup(None)eq exch(All)eq or
				{
				pop false
				}{
				AGMCORE_host_sep
				{
					gsave
					1 0 0 0 setcmykcolor currentgray 1 exch sub
					0 1 0 0 setcmykcolor currentgray 1 exch sub
					0 0 1 0 setcmykcolor currentgray 1 exch sub
					0 0 0 1 setcmykcolor currentgray 1 exch sub
					add add add 0 eq
					{
						pop false
					}{
						false setoverprint
						current_spot_alias false set_spot_alias
						1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
						set_spot_alias
						currentgray 1 ne
					}ifelse
					grestore
				}{
					AGMCORE_distilling
					{
						pop AGM_is_distiller_preserving_spotimages not
					}{
						//Adobe_AGM_Core/AGMCORE_name xddf
						false
						//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 0 eq
						AGMUTIL_cpd/OverrideSeparations known and
						{
							AGMUTIL_cpd/OverrideSeparations get
							{
								/HqnSpots/ProcSet resourcestatus
								{
									pop pop pop true
								}if
							}if
						}if					
						{
							AGMCORE_name/HqnSpots/ProcSet findresource/TestSpot gx not
						}{
							gsave
							[/Separation AGMCORE_name/DeviceGray{}]AGMCORE_&setcolorspace
							false
							AGMUTIL_cpd/SeparationColorNames 2 copy known
							{
								get
								{AGMCORE_name eq or}forall
								not
							}{
								pop pop pop true
							}ifelse
							grestore
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			end
		}def
	}ifelse
	/convert_to_process where{pop}{
		/convert_to_process
		{
			dup length 0 eq
				{
				pop false
				}{
				AGMCORE_host_sep
				{
				dup true exch
					{
					dup(Cyan)eq exch
					dup(Magenta)eq 3 -1 roll or exch
					dup(Yellow)eq 3 -1 roll or exch
					dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process and}ifelse
					}
				forall
					{
					true exch
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						(Black)eq or and
						}forall
						not
					}{pop false}ifelse
				}{
				false exch
					{
					/PhotoshopDuotoneList where{pop false}{true}ifelse
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process or}ifelse
						}
						{
						convert_spot_to_process or
						}
					ifelse
					}
				forall
				}ifelse
			}ifelse
		}def
	}ifelse	
	/AGMCORE_avoid_L2_sep_space 
		version cvr 2012 lt 
		level2 and 
		AGMCORE_producing_seps not and
	def
	/AGMCORE_is_cmyk_sep
		AGMCORE_cyan_plate AGMCORE_magenta_plate or AGMCORE_yellow_plate or AGMCORE_black_plate or
	def
	/AGM_avoid_0_cmyk where{
		pop AGM_avoid_0_cmyk
	}{
		AGM_preserve_spots 
		userdict/Adobe_AGM_OnHost_Seps known 
		userdict/Adobe_AGM_InRip_Seps known or
		not and
	}ifelse
	{
		/setcmykcolor[
			{
				4 copy add add add 0 eq currentoverprint and{
					pop 0.0005
				}if
			}/exec cvx
			/AGMCORE_&setcmykcolor load dup type/operatortype ne{
				/exec cvx
			}if
		]cvx def
	}if
	/AGMCORE_IsSeparationAProcessColor
		{
		dup(Cyan)eq exch dup(Magenta)eq exch dup(Yellow)eq exch(Black)eq or or or
		}def
	AGMCORE_host_sep{
		/setcolortransfer
		{
			AGMCORE_cyan_plate{
				pop pop pop
			}{
			 	AGMCORE_magenta_plate{
			 		4 3 roll pop pop pop
			 	}{
			 		AGMCORE_yellow_plate{
			 			4 2 roll pop pop pop
			 		}{
			 			4 1 roll pop pop pop
			 		}ifelse
			 	}ifelse
			}ifelse
			settransfer 
		}	
		def
		/AGMCORE_get_ink_data
			AGMCORE_cyan_plate{
				{pop pop pop}
			}{
			 	AGMCORE_magenta_plate{
			 		{4 3 roll pop pop pop}
			 	}{
			 		AGMCORE_yellow_plate{
			 			{4 2 roll pop pop pop}
			 		}{
			 			{4 1 roll pop pop pop}
			 		}ifelse
			 	}ifelse
			}ifelse
		def
		/AGMCORE_RemoveProcessColorNames
			{
			1 dict begin
			/filtername
				{
				dup/Cyan eq 1 index(Cyan)eq or
					{pop(_cyan_)}if
				dup/Magenta eq 1 index(Magenta)eq or
					{pop(_magenta_)}if
				dup/Yellow eq 1 index(Yellow)eq or
					{pop(_yellow_)}if
				dup/Black eq 1 index(Black)eq or
					{pop(_black_)}if
				}def
			dup type/arraytype eq
				{[exch{filtername}forall]}
				{filtername}ifelse
			end
			}def
		level3{
			/AGMCORE_IsCurrentColor
				{
				dup AGMCORE_IsSeparationAProcessColor
					{
					AGMCORE_plate_ndx 0 eq
						{dup(Cyan)eq exch/Cyan eq or}if
					AGMCORE_plate_ndx 1 eq
						{dup(Magenta)eq exch/Magenta eq or}if
					AGMCORE_plate_ndx 2 eq
						{dup(Yellow)eq exch/Yellow eq or}if
					AGMCORE_plate_ndx 3 eq
						{dup(Black)eq exch/Black eq or}if
					AGMCORE_plate_ndx 4 eq
						{pop false}if
					}{
					gsave
					false setoverprint
					current_spot_alias false set_spot_alias
					1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
					set_spot_alias
					currentgray 1 ne
					grestore
					}ifelse
				}def
			/AGMCORE_filter_functiondatasource
				{	
				5 dict begin
				/data_in xdf
				data_in type/stringtype eq
					{
					/ncomp xdf
					/comp xdf
					/string_out data_in length ncomp idiv string def
					0 ncomp data_in length 1 sub
						{
						string_out exch dup ncomp idiv exch data_in exch ncomp getinterval comp get 255 exch sub put
						}for
					string_out
					}{
					string/string_in xdf
					/string_out 1 string def
					/component xdf
					[
					data_in string_in/readstring cvx
						[component/get cvx 255/exch cvx/sub cvx string_out/exch cvx 0/exch cvx/put cvx string_out]cvx
						[/pop cvx()]cvx/ifelse cvx
					]cvx/ReusableStreamDecode filter
				}ifelse
				end
				}def
			/AGMCORE_separateShadingFunction
				{
				2 dict begin
				/paint? xdf
				/channel xdf
				dup type/dicttype eq
					{
					begin
					FunctionType 0 eq
						{
						/DataSource channel Range length 2 idiv DataSource AGMCORE_filter_functiondatasource def
						currentdict/Decode known
							{/Decode Decode channel 2 mul 2 getinterval def}if
						paint? not
							{/Decode[1 1]def}if
						}if
					FunctionType 2 eq
						{
						paint?
							{
							/C0[C0 channel get 1 exch sub]def
							/C1[C1 channel get 1 exch sub]def
							}{
							/C0[1]def
							/C1[1]def
							}ifelse			
						}if
					FunctionType 3 eq
						{
						/Functions[Functions{channel paint? AGMCORE_separateShadingFunction}forall]def			
						}if
					currentdict/Range known
						{/Range[0 1]def}if
					currentdict
					end}{
					channel get 0 paint? AGMCORE_separateShadingFunction
					}ifelse
				end
				}def
			/AGMCORE_separateShading
				{
				3 -1 roll begin
				currentdict/Function known
					{
					currentdict/Background known
						{[1 index{Background 3 index get 1 exch sub}{1}ifelse]/Background xdf}if
					Function 3 1 roll AGMCORE_separateShadingFunction/Function xdf
					/ColorSpace[/DeviceGray]def
					}{
					ColorSpace dup type/arraytype eq{0 get}if/DeviceCMYK eq
						{
						/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
						}{
						ColorSpace dup 1 get AGMCORE_RemoveProcessColorNames 1 exch put
						}ifelse
					ColorSpace 0 get/Separation eq
						{
							{
								[1/exch cvx/sub cvx]cvx
							}{
								[/pop cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll put
							pop
						}{
							{
								[exch ColorSpace 1 get length 1 sub exch sub/index cvx 1/exch cvx/sub cvx ColorSpace 1 get length 1 add 1/roll cvx ColorSpace 1 get length{/pop cvx}repeat]cvx
							}{
								pop[ColorSpace 1 get length{/pop cvx}repeat cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll bind put
						}ifelse
					ColorSpace 2/DeviceGray put																		
					}ifelse
				end
				}def
			/AGMCORE_separateShadingDict
				{
				dup/ColorSpace get
				dup type/arraytype ne
					{[exch]}if
				dup 0 get/DeviceCMYK eq
					{
					exch begin 
					currentdict
					AGMCORE_cyan_plate
						{0 true}if
					AGMCORE_magenta_plate
						{1 true}if
					AGMCORE_yellow_plate
						{2 true}if
					AGMCORE_black_plate
						{3 true}if
					AGMCORE_plate_ndx 4 eq
						{0 false}if		
					dup not currentoverprint and
						{/AGMCORE_ignoreshade true def}if
					AGMCORE_separateShading
					currentdict
					end exch
					}if
				dup 0 get/Separation eq
					{
					exch begin
					ColorSpace 1 get dup/None ne exch/All ne and
						{
						ColorSpace 1 get AGMCORE_IsCurrentColor AGMCORE_plate_ndx 4 lt and ColorSpace 1 get AGMCORE_IsSeparationAProcessColor not and
							{
							ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
								{
								/ColorSpace
									[
									/Separation
									ColorSpace 1 get
									/DeviceGray
										[
										ColorSpace 3 get/exec cvx
										4 AGMCORE_plate_ndx sub -1/roll cvx
										4 1/roll cvx
										3[/pop cvx]cvx/repeat cvx
										1/exch cvx/sub cvx
										]cvx									
									]def
								}{
								AGMCORE_report_unsupported_color_space
								AGMCORE_black_plate not
									{
									currentdict 0 false AGMCORE_separateShading
									}if
								}ifelse
							}{
							currentdict ColorSpace 1 get AGMCORE_IsCurrentColor
							0 exch 
							dup not currentoverprint and
								{/AGMCORE_ignoreshade true def}if
							AGMCORE_separateShading
							}ifelse	
						}if			
					currentdict
					end exch
					}if
				dup 0 get/DeviceN eq
					{
					exch begin
					ColorSpace 1 get convert_to_process
						{
						ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
							{
							/ColorSpace
								[
								/DeviceN
								ColorSpace 1 get
								/DeviceGray
									[
									ColorSpace 3 get/exec cvx
									4 AGMCORE_plate_ndx sub -1/roll cvx
									4 1/roll cvx
									3[/pop cvx]cvx/repeat cvx
									1/exch cvx/sub cvx
									]cvx									
								]def
							}{
							AGMCORE_report_unsupported_color_space
							AGMCORE_black_plate not
								{
								currentdict 0 false AGMCORE_separateShading
								/ColorSpace[/DeviceGray]def
								}if
							}ifelse
						}{
						currentdict
						false -1 ColorSpace 1 get
							{
							AGMCORE_IsCurrentColor
								{
								1 add
								exch pop true exch exit
								}if
							1 add
							}forall
						exch 
						dup not currentoverprint and
							{/AGMCORE_ignoreshade true def}if
						AGMCORE_separateShading
						}ifelse
					currentdict
					end exch
					}if
				dup 0 get dup/DeviceCMYK eq exch dup/Separation eq exch/DeviceN eq or or not
					{
					exch begin
					ColorSpace dup type/arraytype eq
						{0 get}if
					/DeviceGray ne
						{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate not
							{
							ColorSpace 0 get/CIEBasedA eq
								{
								/ColorSpace[/Separation/_ciebaseda_/DeviceGray{}]def
								}if
							ColorSpace 0 get dup/CIEBasedABC eq exch dup/CIEBasedDEF eq exch/DeviceRGB eq or or
								{
								/ColorSpace[/DeviceN[/_red_/_green_/_blue_]/DeviceRGB{}]def
								}if
							ColorSpace 0 get/CIEBasedDEFG eq
								{
								/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
								}if
							currentdict 0 false AGMCORE_separateShading
							}if
						}if
					currentdict
					end exch
					}if
				pop
				dup/AGMCORE_ignoreshade known
					{
					begin
					/ColorSpace[/Separation(None)/DeviceGray{}]def
					currentdict end
					}if
				}def
			/shfill
				{
				AGMCORE_separateShadingDict 
				dup/AGMCORE_ignoreshade known
					{pop}
					{AGMCORE_&sysshfill}ifelse
				}def
			/makepattern
				{
				exch
				dup/PatternType get 2 eq
					{
					clonedict
					begin
					/Shading Shading AGMCORE_separateShadingDict def
					Shading/AGMCORE_ignoreshade known
					currentdict end exch
					{pop<</PatternType 1/PaintProc{pop}/BBox[0 0 1 1]/XStep 1/YStep 1/PaintType 1/TilingType 3>>}if
					exch AGMCORE_&sysmakepattern
					}{
					exch AGMCORE_&usrmakepattern
					}ifelse
				}def
		}if
	}if
	AGMCORE_in_rip_sep{
		/setcustomcolor
		{
			exch aload pop
			dup 7 1 roll inRip_spot_has_ink not	{
				4{4 index mul 4 1 roll}
				repeat
				/DeviceCMYK setcolorspace
				6 -2 roll pop pop
			}{
				//Adobe_AGM_Core begin
					/AGMCORE_k xdf/AGMCORE_y xdf/AGMCORE_m xdf/AGMCORE_c xdf
				end
				[/Separation 4 -1 roll/DeviceCMYK
				{dup AGMCORE_c mul exch dup AGMCORE_m mul exch dup AGMCORE_y mul exch AGMCORE_k mul}
				]
				setcolorspace
			}ifelse
			setcolor
		}ndf
		/setseparationgray
		{
			[/Separation(All)/DeviceGray{}]setcolorspace_opt
			1 exch sub setcolor
		}ndf
	}{
		/setseparationgray
		{
			AGMCORE_&setgray
		}ndf
	}ifelse
	/findcmykcustomcolor
	{
		5 makereadonlyarray
	}ndf
	/setcustomcolor
	{
		exch aload pop pop
		4{4 index mul 4 1 roll}repeat
		setcmykcolor pop
	}ndf
	/has_color
		/colorimage where{
			AGMCORE_producing_seps{
				pop true
			}{
				systemdict eq
			}ifelse
		}{
			false
		}ifelse
	def
	/map_index
	{
		1 index mul exch getinterval{255 div}forall
	}bdf
	/map_indexed_devn
	{
		Lookup Names length 3 -1 roll cvi map_index
	}bdf
	/n_color_components
	{
		base_colorspace_type
		dup/DeviceGray eq{
			pop 1
		}{
			/DeviceCMYK eq{
				4
			}{
				3
			}ifelse
		}ifelse
	}bdf
	level2{
		/mo/moveto ldf
		/li/lineto ldf
		/cv/curveto ldf
		/knockout_unitsq
		{
			1 setgray
			0 0 1 1 rectfill
		}def
		level2/setcolorspace AGMCORE_key_known not and{
			/AGMCORE_&&&setcolorspace/setcolorspace ldf
			/AGMCORE_ReplaceMappedColor
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					/AGMCORE_SpotAliasAry2 where{
						begin
						dup 0 get dup/Separation eq
						{
							pop
							dup length array copy
							dup dup 1 get
							current_spot_alias
							{
								dup map_alias
								{
									false set_spot_alias
									dup 1 exch setsepcolorspace
									true set_spot_alias
									begin
									/sep_colorspace_dict currentdict AGMCORE_gput
									pop pop	pop
									[
										/Separation Name 
										CSA map_csa
										MappedCSA 
										/sep_colorspace_proc load
									]
									dup Name
									end
								}if
							}if
							map_reserved_ink_name 1 xpt
						}{
							/DeviceN eq 
							{
								dup length array copy
								dup dup 1 get[
									exch{
										current_spot_alias{
											dup map_alias{
												/Name get exch pop
											}if
										}if
										map_reserved_ink_name
									}forall 
								]1 xpt
							}if
						}ifelse
						end
					}if
				}if
			}def
			/setcolorspace
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					dup 0 get/Indexed eq
					{
						AGMCORE_distilling
						{
							/PhotoshopDuotoneList where
							{
								pop false
							}{
								true
							}ifelse
						}{
							true
						}ifelse
						{
							aload pop 3 -1 roll
							AGMCORE_ReplaceMappedColor
							3 1 roll 4 array astore
						}if
					}{
						AGMCORE_ReplaceMappedColor
					}ifelse
				}if
				DeviceN_PS2_inRip_seps{AGMCORE_&&&setcolorspace}if
			}def
		}if	
	}{
		/adj
		{
			currentstrokeadjust{
				transform
				0.25 sub round 0.25 add exch
				0.25 sub round 0.25 add exch
				itransform
			}if
		}def
		/mo{
			adj moveto
		}def
		/li{
			adj lineto
		}def
		/cv{
			6 2 roll adj
			6 2 roll adj
			6 2 roll adj curveto
		}def
		/knockout_unitsq
		{
			1 setgray
			8 8 1[8 0 0 8 0 0]{<ffffffffffffffff>}image
		}def
		/currentstrokeadjust{
			/currentstrokeadjust AGMCORE_gget
		}def
		/setstrokeadjust{
			/currentstrokeadjust exch AGMCORE_gput
		}def
		/setcolorspace
		{
			/currentcolorspace exch AGMCORE_gput
		}def
		/currentcolorspace
		{
			/currentcolorspace AGMCORE_gget
		}def
		/setcolor_devicecolor
		{
			base_colorspace_type
			dup/DeviceGray eq{
				pop setgray
			}{
				/DeviceCMYK eq{
					setcmykcolor
				}{
					setrgbcolor
				}ifelse
			}ifelse
		}def
		/setcolor
		{
			currentcolorspace 0 get
			dup/DeviceGray ne{
				dup/DeviceCMYK ne{
					dup/DeviceRGB ne{
						dup/Separation eq{
							pop
							currentcolorspace 3 gx
							currentcolorspace 2 get
						}{
							dup/Indexed eq{
								pop
								currentcolorspace 3 get dup type/stringtype eq{
									currentcolorspace 1 get n_color_components
									3 -1 roll map_index
								}{
									exec
								}ifelse
								currentcolorspace 1 get
							}{
								/AGMCORE_cur_err/AGMCORE_invalid_color_space def
								AGMCORE_invalid_color_space
							}ifelse
						}ifelse
					}if
				}if
			}if
			setcolor_devicecolor
		}def
	}ifelse
	/sop/setoverprint ldf
	/lw/setlinewidth ldf
	/lc/setlinecap ldf
	/lj/setlinejoin ldf
	/ml/setmiterlimit ldf
	/dsh/setdash ldf
	/sadj/setstrokeadjust ldf
	/gry/setgray ldf
	/rgb/setrgbcolor ldf
	/cmyk[
		/currentcolorspace[/DeviceCMYK]/AGMCORE_gput cvx
		/setcmykcolor load dup type/operatortype ne{/exec cvx}if
	]cvx bdf
	level3 AGMCORE_host_sep not and{
		/nzopmsc{
			6 dict begin
			/kk exch def
			/yy exch def
			/mm exch def
			/cc exch def
			/sum 0 def
			cc 0 ne{/sum sum 2#1000 or def cc}if
			mm 0 ne{/sum sum 2#0100 or def mm}if
			yy 0 ne{/sum sum 2#0010 or def yy}if
			kk 0 ne{/sum sum 2#0001 or def kk}if
			AGMCORE_CMYKDeviceNColorspaces sum get setcolorspace
			sum 0 eq{0}if
			end
			setcolor
		}bdf
	}{
		/nzopmsc/cmyk ldf
	}ifelse
	/sep/setsepcolor ldf
	/devn/setdevicencolor ldf
	/idx/setindexedcolor ldf
	/colr/setcolor ldf
	/csacrd/set_csa_crd ldf
	/sepcs/setsepcolorspace ldf
	/devncs/setdevicencolorspace ldf
	/idxcs/setindexedcolorspace ldf
	/cp/closepath ldf
	/clp/clp_npth ldf
	/eclp/eoclp_npth ldf
	/f/fill ldf
	/ef/eofill ldf
	/@/stroke ldf
	/nclp/npth_clp ldf
	/gset/graphic_setup ldf
	/gcln/graphic_cleanup ldf
	/ct/concat ldf
	/cf/currentfile ldf
	/fl/filter ldf
	/rs/readstring ldf
	/AGMCORE_def_ht currenthalftone def
	/clonedict Adobe_AGM_Utils begin/clonedict load end def
	/clonearray Adobe_AGM_Utils begin/clonearray load end def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
	/getrampcolor
	{
		/indx exch def
		0 1 NumComp 1 sub
		{
			dup
			Samples exch get
			dup type/stringtype eq{indx get}if
			exch
			Scaling exch get aload pop
			3 1 roll
			mul add
		}for
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse
	}bdf
	/sssetbackground{
		aload pop 
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse	
	}bdf
	/RadialShade
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/r2 xdf
		/c2y xdf
		/c2x xdf
		/r1 xdf
		/c1y xdf
		/c1x xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		c1x c2x eq
		{
			c1y c2y lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope c2y c1y sub c2x c1x sub div def
			/theta slope 1 atan def
			c2x c1x lt c2y c1y ge and{/theta theta 180 sub def}if
			c2x c1x lt c2y c1y lt and{/theta theta 180 add def}if
		}ifelse
		gsave
		clippath
		c1x c1y translate
		theta rotate
		-90 rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax xdf
		/xMax xdf
		/yMin xdf
		/xMin xdf
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			/max{2 copy gt{pop}{exch pop}ifelse}bdf
			/min{2 copy lt{pop}{exch pop}ifelse}bdf
			rampdict begin
			40 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			c1x c1y translate
			theta rotate
			-90 rotate
			/c2y c1x c2x sub dup mul c1y c2y sub dup mul add sqrt def
			/c1y 0 def
			/c1x 0 def
			/c2x 0 def
			ext0
			{
				0 getrampcolor
				c2y r2 add r1 sub 0.0001 lt
				{
					c1x c1y r1 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2y r1 add r2 le
					{
						c1x c1y r1 0 360 arc
						fill
					}
					{
						c2x c2y r2 0 360 arc fill
						r1 r2 eq
						{
							/p1x r1 neg def
							/p1y c1y def
							/p2x r1 def
							/p2y c1y def
							p1x p1y moveto p2x p2y lineto p2x yMin lineto p1x yMin lineto
							fill
						}{
							/AA r2 r1 sub c2y div def
							AA -1 eq
							{/theta 89.99 def}
							{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
							ifelse
							/SS1 90 theta add dup sin exch cos div def
							/p1x r1 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
							/p1y p1x SS1 div neg def
							/SS2 90 theta sub dup sin exch cos div def
							/p2x r1 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
							/p2y p2x SS2 div neg def
							r1 r2 gt
							{
								/L1maxX p1x yMin p1y sub SS1 div add def
								/L2maxX p2x yMin p2y sub SS2 div add def
							}{
								/L1maxX 0 def
								/L2maxX 0 def
							}ifelse
							p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
							L1maxX L1maxX p1x sub SS1 mul p1y add lineto
							fill
						}ifelse
					}ifelse
				}ifelse
			}if
		c1x c2x sub dup mul
		c1y c2y sub dup mul
		add 0.5 exp
		0 dtransform
		dup mul exch dup mul add 0.5 exp 72 div
		0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		1 index 1 index lt{exch}if pop
		/hires xdf
		hires mul
		/numpix xdf
		/numsteps NumSamples def
		/rampIndxInc 1 def
		/subsampling false def
		numpix 0 ne
		{
			NumSamples numpix div 0.5 gt
			{
				/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
				/rampIndxInc NumSamples 1 sub numsteps div def
				/subsampling true def
			}if
		}if
		/xInc c2x c1x sub numsteps div def
		/yInc c2y c1y sub numsteps div def
		/rInc r2 r1 sub numsteps div def
		/cx c1x def
		/cy c1y def
		/radius r1 def
		np
		xInc 0 eq yInc 0 eq rInc 0 eq and and
		{
			0 getrampcolor
			cx cy radius 0 360 arc
			stroke
			NumSamples 1 sub getrampcolor
			cx cy radius 72 hires div add 0 360 arc
			0 setlinewidth
			stroke
		}{
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				cx cy radius 0 360 arc
				/cx cx xInc add def
				/cy cy yInc add def
				/radius radius rInc add def
				cx cy radius 360 0 arcn
				eofill
				rampIndxInc add
			}repeat
			pop
		}ifelse
		ext1
		{
			c2y r2 add r1 lt
			{
				c2x c2y r2 0 360 arc
				fill
			}{
				c2y r1 add r2 sub 0.0001 le
				{
					c2x c2y r2 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2x c2y r2 0 360 arc fill
					r1 r2 eq
					{
						/p1x r2 neg def
						/p1y c2y def
						/p2x r2 def
						/p2y c2y def
						p1x p1y moveto p2x p2y lineto p2x yMax lineto p1x yMax lineto
						fill
					}{
						/AA r2 r1 sub c2y div def
						AA -1 eq
						{/theta 89.99 def}
						{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
						ifelse
						/SS1 90 theta add dup sin exch cos div def
						/p1x r2 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
						/p1y c2y p1x SS1 div sub def
						/SS2 90 theta sub dup sin exch cos div def
						/p2x r2 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
						/p2y c2y p2x SS2 div sub def
						r1 r2 lt
						{
							/L1maxX p1x yMax p1y sub SS1 div add def
							/L2maxX p2x yMax p2y sub SS2 div add def
						}{
							/L1maxX 0 def
							/L2maxX 0 def
						}ifelse
						p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
						L1maxX L1maxX p1x sub SS1 mul p1y add lineto
						fill
					}ifelse
				}ifelse
			}ifelse
		}if
		grestore
		grestore
		end
		end
		end
		}ifelse
	}bdf
	/GenStrips
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/y2 xdf
		/x2 xdf
		/y1 xdf
		/x1 xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		x1 x2 eq
		{
			y1 y2 lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope y2 y1 sub x2 x1 sub div def
			/theta slope 1 atan def
			x2 x1 lt y2 y1 ge and{/theta theta 180 sub def}if
			x2 x1 lt y2 y1 lt and{/theta theta 180 add def}if
		}
		ifelse
		gsave
		clippath
		x1 y1 translate
		theta rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax exch def
		/xMax exch def
		/yMin exch def
		/xMin exch def
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			rampdict begin
			20 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			x1 y1 translate
			theta rotate
			/xStart 0 def
			/xEnd x2 x1 sub dup mul y2 y1 sub dup mul add 0.5 exp def
			/ySpan yMax yMin sub def
			/numsteps NumSamples def
			/rampIndxInc 1 def
			/subsampling false def
			xStart 0 transform
			xEnd 0 transform
			3 -1 roll
			sub dup mul
			3 1 roll
			sub dup mul
			add 0.5 exp 72 div
			0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			1 index 1 index lt{exch}if pop
			mul
			/numpix xdf
			numpix 0 ne
			{
				NumSamples numpix div 0.5 gt
				{
					/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
					/rampIndxInc NumSamples 1 sub numsteps div def
					/subsampling true def
				}if
			}if
			ext0
			{
				0 getrampcolor
				xMin xStart lt
				{
					xMin yMin xMin neg ySpan rectfill
				}if
			}if
			/xInc xEnd xStart sub numsteps div def
			/x xStart def
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				x yMin xInc ySpan rectfill
				/x x xInc add def
				rampIndxInc add
			}repeat
			pop
			ext1{
				xMax xEnd gt
				{
					xEnd yMin xMax xEnd sub ySpan rectfill
				}if
			}if
			grestore
			grestore
			end
			end
			end
		}ifelse
	}bdf
}def
/pt
{
	end
}def
/dt{
}def
/pgsv{
	//Adobe_AGM_Core/AGMCORE_save save put
}def
/pgrs{
	//Adobe_AGM_Core/AGMCORE_save get restore
}def
systemdict/findcolorrendering known{
	/findcolorrendering systemdict/findcolorrendering get def
}if
systemdict/setcolorrendering known{
	/setcolorrendering systemdict/setcolorrendering get def
}if
/test_cmyk_color_plate
{
	gsave
	setcmykcolor currentgray 1 ne
	grestore
}def
/inRip_spot_has_ink
{
	dup//Adobe_AGM_Core/AGMCORE_name xddf
	convert_spot_to_process not
}def
/map255_to_range
{
	1 index sub
	3 -1 roll 255 div mul add
}def
/set_csa_crd
{
	/sep_colorspace_dict null AGMCORE_gput
	begin
		CSA get_csa_by_name setcolorspace_opt
		set_crd
	end
}
def
/map_csa
{
	currentdict/MappedCSA known{MappedCSA null ne}{false}ifelse
	{pop}{get_csa_by_name/MappedCSA xdf}ifelse
}def
/setsepcolor
{
	/sep_colorspace_dict AGMCORE_gget begin
		dup/sep_tint exch AGMCORE_gput
		TintProc
	end
}def
/setdevicencolor
{
	/devicen_colorspace_dict AGMCORE_gget begin
		Names length copy
		Names length 1 sub -1 0
		{
			/devicen_tints AGMCORE_gget 3 1 roll xpt
		}for
		TintProc
	end
}def
/sep_colorspace_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	currentdict/Components known{
		Components aload pop 
		TintMethod/Lab eq{
			2{AGMCORE_tmp mul NComponents 1 roll}repeat
			LMax sub AGMCORE_tmp mul LMax add NComponents 1 roll
		}{
			TintMethod/Subtractive eq{
				NComponents{
					AGMCORE_tmp mul NComponents 1 roll
				}repeat
			}{
				NComponents{
					1 sub AGMCORE_tmp mul 1 add NComponents 1 roll
				}repeat
			}ifelse
		}ifelse
	}{
		ColorLookup AGMCORE_tmp ColorLookup length 1 sub mul round cvi get
		aload pop
	}ifelse
	end
}def
/sep_colorspace_gray_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	GrayLookup AGMCORE_tmp GrayLookup length 1 sub mul round cvi get
	end
}def
/sep_proc_name
{
	dup 0 get 
	dup/DeviceRGB eq exch/DeviceCMYK eq or level2 not and has_color not and{
		pop[/DeviceGray]
		/sep_colorspace_gray_proc
	}{
		/sep_colorspace_proc
	}ifelse
}def
/setsepcolorspace
{
	current_spot_alias{
		dup begin
			Name map_alias{
				exch pop
			}if
		end
	}if
	dup/sep_colorspace_dict exch AGMCORE_gput
	begin
	CSA map_csa
	/AGMCORE_sep_special Name dup()eq exch(All)eq or store
	AGMCORE_avoid_L2_sep_space{
		[/Indexed MappedCSA sep_proc_name 255 exch 
			{255 div}/exec cvx 3 -1 roll[4 1 roll load/exec cvx]cvx 
		]setcolorspace_opt
		/TintProc{
			255 mul round cvi setcolor
		}bdf
	}{
		MappedCSA 0 get/DeviceCMYK eq 
		currentdict/Components known and 
		AGMCORE_sep_special not and{
			/TintProc[
				Components aload pop Name findcmykcustomcolor 
				/exch cvx/setcustomcolor cvx
			]cvx bdf
		}{
 			AGMCORE_host_sep Name(All)eq and{
 				/TintProc{
					1 exch sub setseparationgray 
				}bdf
 			}{
				AGMCORE_in_rip_sep MappedCSA 0 get/DeviceCMYK eq and 
				AGMCORE_host_sep or
				Name()eq and{
					/TintProc[
						MappedCSA sep_proc_name exch 0 get/DeviceCMYK eq{
							cvx/setcmykcolor cvx
						}{
							cvx/setgray cvx
						}ifelse
					]cvx bdf
				}{
					AGMCORE_producing_seps MappedCSA 0 get dup/DeviceCMYK eq exch/DeviceGray eq or and AGMCORE_sep_special not and{
	 					/TintProc[
							/dup cvx
							MappedCSA sep_proc_name cvx exch
							0 get/DeviceGray eq{
								1/exch cvx/sub cvx 0 0 0 4 -1/roll cvx
							}if
							/Name cvx/findcmykcustomcolor cvx/exch cvx
							AGMCORE_host_sep{
								AGMCORE_is_cmyk_sep
								/Name cvx 
								/AGMCORE_IsSeparationAProcessColor load/exec cvx
								/not cvx/and cvx 
							}{
								Name inRip_spot_has_ink not
							}ifelse
							[
		 						/pop cvx 1
							]cvx/if cvx
							/setcustomcolor cvx
						]cvx bdf
 					}{
						/TintProc{setcolor}bdf
						[/Separation Name MappedCSA sep_proc_name load]setcolorspace_opt
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	}ifelse
	set_crd
	setsepcolor
	end
}def
/additive_blend
{
 	3 dict begin
 	/numarrays xdf
 	/numcolors xdf
 	0 1 numcolors 1 sub
 		{
 		/c1 xdf
 		1
 		0 1 numarrays 1 sub
 			{
			1 exch add/index cvx
 			c1/get cvx/mul cvx
 			}for
 		numarrays 1 add 1/roll cvx 
 		}for
 	numarrays[/pop cvx]cvx/repeat cvx
 	end
}def
/subtractive_blend
{
	3 dict begin
	/numarrays xdf
	/numcolors xdf
	0 1 numcolors 1 sub
		{
		/c1 xdf
		1 1
		0 1 numarrays 1 sub
			{
			1 3 3 -1 roll add/index cvx 
			c1/get cvx/sub cvx/mul cvx
			}for
		/sub cvx
		numarrays 1 add 1/roll cvx
		}for
	numarrays[/pop cvx]cvx/repeat cvx
	end
}def
/exec_tint_transform
{
	/TintProc[
		/TintTransform cvx/setcolor cvx
	]cvx bdf
	MappedCSA setcolorspace_opt
}bdf
/devn_makecustomcolor
{
	2 dict begin
	/names_index xdf
	/Names xdf
	1 1 1 1 Names names_index get findcmykcustomcolor
	/devicen_tints AGMCORE_gget names_index get setcustomcolor
	Names length{pop}repeat
	end
}bdf
/setdevicencolorspace
{
	dup/AliasedColorants known{false}{true}ifelse 
	current_spot_alias and{
		7 dict begin
		/names_index 0 def
		dup/names_len exch/Names get length def
		/new_names names_len array def
		/new_LookupTables names_len array def
		/alias_cnt 0 def
		dup/Names get
		{
			dup map_alias{
				exch pop
				dup/ColorLookup known{
					dup begin
					new_LookupTables names_index ColorLookup put
					end
				}{
					dup/Components known{
						dup begin
						new_LookupTables names_index Components put
						end
					}{
						dup begin
						new_LookupTables names_index[null null null null]put
						end
					}ifelse
				}ifelse
				new_names names_index 3 -1 roll/Name get put
				/alias_cnt alias_cnt 1 add def 
			}{
				/name xdf				
				new_names names_index name put
				dup/LookupTables known{
					dup begin
					new_LookupTables names_index LookupTables names_index get put
					end
				}{
					dup begin
					new_LookupTables names_index[null null null null]put
					end
				}ifelse
			}ifelse
			/names_index names_index 1 add def 
		}forall
		alias_cnt 0 gt{
			/AliasedColorants true def
			/lut_entry_len new_LookupTables 0 get dup length 256 ge{0 get length}{length}ifelse def
			0 1 names_len 1 sub{
				/names_index xdf
				new_LookupTables names_index get dup length 256 ge{0 get length}{length}ifelse lut_entry_len ne{
					/AliasedColorants false def
					exit
				}{
					new_LookupTables names_index get 0 get null eq{
						dup/Names get names_index get/name xdf
						name(Cyan)eq name(Magenta)eq name(Yellow)eq name(Black)eq
						or or or not{
							/AliasedColorants false def
							exit
						}if
					}if
				}ifelse
			}for
			lut_entry_len 1 eq{
				/AliasedColorants false def
			}if
			AliasedColorants{
				dup begin
				/Names new_names def
				/LookupTables new_LookupTables def
				/AliasedColorants true def
				/NComponents lut_entry_len def
				/TintMethod NComponents 4 eq{/Subtractive}{/Additive}ifelse def
				/MappedCSA TintMethod/Additive eq{/DeviceRGB}{/DeviceCMYK}ifelse def
				currentdict/TTTablesIdx known not{
					/TTTablesIdx -1 def
				}if
				end
			}if
		}if
		end
	}if
	dup/devicen_colorspace_dict exch AGMCORE_gput
	begin
	currentdict/AliasedColorants known{
		AliasedColorants
	}{
		false
	}ifelse
	dup not{
		CSA map_csa
	}if
	/TintTransform load type/nulltype eq or{
		/TintTransform[
			0 1 Names length 1 sub
				{
				/TTTablesIdx TTTablesIdx 1 add def
				dup LookupTables exch get dup 0 get null eq
					{
					1 index
					Names exch get
					dup(Cyan)eq
						{
						pop exch
						LookupTables length exch sub
						/index cvx
						0 0 0
						}
						{
						dup(Magenta)eq
							{
							pop exch
							LookupTables length exch sub
							/index cvx
							0/exch cvx 0 0
							}{
							(Yellow)eq
								{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 3 -1/roll cvx 0
								}{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 0 4 -1/roll cvx
								}ifelse
							}ifelse
						}ifelse
					5 -1/roll cvx/astore cvx
					}{
					dup length 1 sub
					LookupTables length 4 -1 roll sub 1 add
					/index cvx/mul cvx/round cvx/cvi cvx/get cvx
					}ifelse
					Names length TTTablesIdx add 1 add 1/roll cvx
				}for
			Names length[/pop cvx]cvx/repeat cvx
			NComponents Names length
 			TintMethod/Subtractive eq
 				{
 				subtractive_blend
 				}{
 				additive_blend
 				}ifelse
		]cvx bdf
	}if
	AGMCORE_host_sep{
		Names convert_to_process{
			exec_tint_transform
		}
		{	
			currentdict/AliasedColorants known{
				AliasedColorants not
			}{
				false
			}ifelse
			5 dict begin
			/AvoidAliasedColorants xdf
			/painted? false def
			/names_index 0 def
			/names_len Names length def
			AvoidAliasedColorants{
				/currentspotalias current_spot_alias def
				false set_spot_alias
			}if
			Names{
				AGMCORE_is_cmyk_sep{
					dup(Cyan)eq AGMCORE_cyan_plate and exch
					dup(Magenta)eq AGMCORE_magenta_plate and exch
					dup(Yellow)eq AGMCORE_yellow_plate and exch
					(Black)eq AGMCORE_black_plate and or or or{
						/devicen_colorspace_dict AGMCORE_gget/TintProc[
							Names names_index/devn_makecustomcolor cvx
						]cvx ddf
						/painted? true def
					}if
					painted?{exit}if
				}{
					0 0 0 0 5 -1 roll findcmykcustomcolor 1 setcustomcolor currentgray 0 eq{
					/devicen_colorspace_dict AGMCORE_gget/TintProc[
						Names names_index/devn_makecustomcolor cvx
					]cvx ddf
					/painted? true def
					exit
					}if
				}ifelse
				/names_index names_index 1 add def
			}forall
			AvoidAliasedColorants{
				currentspotalias set_spot_alias
			}if
			painted?{
				/devicen_colorspace_dict AGMCORE_gget/names_index names_index put
			}{
				/devicen_colorspace_dict AGMCORE_gget/TintProc[
					names_len[/pop cvx]cvx/repeat cvx 1/setseparationgray cvx
 					0 0 0 0/setcmykcolor cvx
				]cvx ddf
			}ifelse
			end
		}ifelse
	}
	{
		AGMCORE_in_rip_sep{
			Names convert_to_process not
		}{
			level3
		}ifelse
		{
			[/DeviceN Names MappedCSA/TintTransform load]setcolorspace_opt
			/TintProc level3 not AGMCORE_in_rip_sep and{
				[
					Names/length cvx[/pop cvx]cvx/repeat cvx
				]cvx bdf
			}{
				{setcolor}bdf
			}ifelse
		}{
			exec_tint_transform
		}ifelse
	}ifelse
	set_crd
	/AliasedColorants false def
	end
}def
/setindexedcolorspace
{
	dup/indexed_colorspace_dict exch AGMCORE_gput
	begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				currentdict devncs
			}{
				1 currentdict sepcs
			}ifelse
			AGMCORE_host_sep{
				4 dict begin
				/compCnt/Names where{pop Names length}{1}ifelse def
				/NewLookup HiVal 1 add string def
				0 1 HiVal{
					/tableIndex xdf
					Lookup dup type/stringtype eq{
						compCnt tableIndex map_index
					}{
						exec
					}ifelse
					/Names where{
						pop setdevicencolor
					}{
						setsepcolor
					}ifelse
					currentgray
					tableIndex exch
					255 mul cvi 
					NewLookup 3 1 roll put
				}for
				[/Indexed currentcolorspace HiVal NewLookup]setcolorspace_opt
				end
			}{
				level3
				{
					currentdict/Names known{
						[/Indexed[/DeviceN Names MappedCSA/TintTransform load]HiVal Lookup]setcolorspace_opt
					}{
						[/Indexed[/Separation Name MappedCSA sep_proc_name load]HiVal Lookup]setcolorspace_opt
					}ifelse
				}{
				[/Indexed MappedCSA HiVal
					[
					currentdict/Names known{
						Lookup dup type/stringtype eq
							{/exch cvx CSDBase/CSD get_res/Names get length dup/mul cvx exch/getinterval cvx{255 div}/forall cvx}
							{/exec cvx}ifelse
							/TintTransform load/exec cvx
					}{
						Lookup dup type/stringtype eq
							{/exch cvx/get cvx 255/div cvx}
							{/exec cvx}ifelse
							CSDBase/CSD get_res/MappedCSA get sep_proc_name exch pop/load cvx/exec cvx
					}ifelse
					]cvx
				]setcolorspace_opt
				}ifelse
			}ifelse
			end
			set_crd
		}
		{
			CSA map_csa
			AGMCORE_host_sep level2 not and{
				0 0 0 0 setcmykcolor
			}{
				[/Indexed MappedCSA 
				level2 not has_color not and{
					dup 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or{
						pop[/DeviceGray]
					}if
					HiVal GrayLookup
				}{
					HiVal 
					currentdict/RangeArray known{
						{
							/indexed_colorspace_dict AGMCORE_gget begin
							Lookup exch 
							dup HiVal gt{
								pop HiVal
							}if
							NComponents mul NComponents getinterval{}forall
							NComponents 1 sub -1 0{
								RangeArray exch 2 mul 2 getinterval aload pop map255_to_range
								NComponents 1 roll
							}for
							end
						}bind
					}{
						Lookup
					}ifelse
				}ifelse
				]setcolorspace_opt
				set_crd
			}ifelse
		}ifelse
	end
}def
/setindexedcolor
{
	AGMCORE_host_sep{
		/indexed_colorspace_dict AGMCORE_gget
		begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				map_indexed_devn
				devn
			}
			{
				Lookup 1 3 -1 roll map_index
				sep
			}ifelse
			end
		}{
			Lookup MappedCSA/DeviceCMYK eq{4}{1}ifelse 3 -1 roll
			map_index
			MappedCSA/DeviceCMYK eq{setcmykcolor}{setgray}ifelse
		}ifelse
		end
	}{
		level3 not AGMCORE_in_rip_sep and/indexed_colorspace_dict AGMCORE_gget/CSDBase known and{
			/indexed_colorspace_dict AGMCORE_gget/CSDBase get/CSD get_res begin
			map_indexed_devn
			devn
			end
		}
		{
			setcolor
		}ifelse
	}ifelse
}def
/ignoreimagedata
{
	currentoverprint not{
		gsave
		dup clonedict begin
		1 setgray
		/Decode[0 1]def
		/DataSource<FF>def
		/MultipleDataSources false def
		/BitsPerComponent 8 def
		currentdict end
		systemdict/image gx
		grestore
		}if
	consumeimagedata
}def
/add_res
{
	dup/CSD eq{
		pop 
		//Adobe_AGM_Core begin
		/AGMCORE_CSD_cache load 3 1 roll put
		end
	}{
		defineresource pop
	}ifelse
}def
/del_res
{
	{
		aload pop exch
		dup/CSD eq{
			pop 
			{//Adobe_AGM_Core/AGMCORE_CSD_cache get exch undef}forall
		}{
			exch
			{1 index undefineresource}forall
			pop
		}ifelse
	}forall
}def
/get_res
{
	dup/CSD eq{
		pop
		dup type dup/nametype eq exch/stringtype eq or{
			AGMCORE_CSD_cache exch get
		}if
	}{
		findresource
	}ifelse
}def
/get_csa_by_name
{
	dup type dup/nametype eq exch/stringtype eq or{
		/CSA get_res
	}if
}def
/paintproc_buf_init
{
	/count get 0 0 put
}def
/paintproc_buf_next
{
	dup/count get dup 0 get
	dup 3 1 roll
	1 add 0 xpt
	get				
}def
/cachepaintproc_compress
{
	5 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	/string_size 16000 def
	/readbuffer string_size string def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	/LZWFilter 
	{
		exch
		dup length 0 eq{
			pop
		}{
			ppdict dup length 1 sub 3 -1 roll put
		}ifelse
		{string_size}{0}ifelse string
	}/LZWEncode filter def
	{		
		ReadFilter readbuffer readstring
		exch LZWFilter exch writestring
		not{exit}if
	}loop
	LZWFilter closefile
	ppdict				
	end
}def
/cachepaintproc
{
	2 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	{
		ReadFilter 16000 string readstring exch
		ppdict dup length 1 sub 3 -1 roll put
		not{exit}if
	}loop
	ppdict dup dup length 1 sub()put					
	end	
}def
/make_pattern
{
	exch clonedict exch
	dup matrix currentmatrix matrix concatmatrix 0 0 3 2 roll itransform
	exch 3 index/XStep get 1 index exch 2 copy div cvi mul sub sub
	exch 3 index/YStep get 1 index exch 2 copy div cvi mul sub sub
	matrix translate exch matrix concatmatrix
			 1 index begin
		BBox 0 get XStep div cvi XStep mul/xshift exch neg def
		BBox 1 get YStep div cvi YStep mul/yshift exch neg def
		BBox 0 get xshift add
		BBox 1 get yshift add
		BBox 2 get xshift add
		BBox 3 get yshift add
		4 array astore
		/BBox exch def
		[xshift yshift/translate load null/exec load]dup
		3/PaintProc load put cvx/PaintProc exch def
		end
	gsave 0 setgray
	makepattern
	grestore
}def
/set_pattern
{
	dup/PatternType get 1 eq{
		dup/PaintType get 1 eq{
			currentoverprint sop[/DeviceGray]setcolorspace 0 setgray
		}if
	}if
	setpattern
}def
/setcolorspace_opt
{
	dup currentcolorspace eq{pop}{setcolorspace}ifelse
}def
/updatecolorrendering
{
	currentcolorrendering/RenderingIntent known{
		currentcolorrendering/RenderingIntent get
	}
	{
		Intent/AbsoluteColorimetric eq 
		{
			/absolute_colorimetric_crd AGMCORE_gget dup null eq
		}
		{
			Intent/RelativeColorimetric eq
			{
				/relative_colorimetric_crd AGMCORE_gget dup null eq
			}
			{
				Intent/Saturation eq
				{
					/saturation_crd AGMCORE_gget dup null eq
				}
				{
					/perceptual_crd AGMCORE_gget dup null eq
				}ifelse
			}ifelse
		}ifelse
		{
			pop null	
		}
		{
			/RenderingIntent known{null}{Intent}ifelse
		}ifelse
	}ifelse
	Intent ne{
		Intent/ColorRendering{findresource}stopped
		{
			pop pop systemdict/findcolorrendering known
			{
 				Intent findcolorrendering
 				{
 					/ColorRendering findresource true exch
 				}
 				{
 					/ColorRendering findresource
					product(Xerox Phaser 5400)ne
					exch
 				}ifelse
				dup Intent/AbsoluteColorimetric eq 
				{
					/absolute_colorimetric_crd exch AGMCORE_gput
				}
				{
					Intent/RelativeColorimetric eq
					{
						/relative_colorimetric_crd exch AGMCORE_gput
					}
					{
						Intent/Saturation eq
						{
							/saturation_crd exch AGMCORE_gput
						}
						{
							Intent/Perceptual eq
							{
								/perceptual_crd exch AGMCORE_gput
							}
							{
								pop
							}ifelse
						}ifelse
					}ifelse
				}ifelse
				1 index{exch}{pop}ifelse
			}
			{false}ifelse
		}
		{true}ifelse
		{
			dup begin
			currentdict/TransformPQR known{
				currentdict/TransformPQR get aload pop
				3{{}eq 3 1 roll}repeat or or
			}
			{true}ifelse
			currentdict/MatrixPQR known{
				currentdict/MatrixPQR get aload pop
				1.0 eq 9 1 roll 0.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 1.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 0.0 eq 9 1 roll 1.0 eq
				and and and and and and and and
			}
			{true}ifelse
			end
			or
			{
				clonedict begin
				/TransformPQR[
					{4 -1 roll 3 get dup 3 1 roll sub 5 -1 roll 3 get 3 -1 roll sub div
					3 -1 roll 3 get 3 -1 roll 3 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 4 get dup 3 1 roll sub 5 -1 roll 4 get 3 -1 roll sub div
					3 -1 roll 4 get 3 -1 roll 4 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 5 get dup 3 1 roll sub 5 -1 roll 5 get 3 -1 roll sub div
					3 -1 roll 5 get 3 -1 roll 5 get dup 4 1 roll sub mul add}bind
				]def
				/MatrixPQR[0.8951 -0.7502 0.0389 0.2664 1.7135 -0.0685 -0.1614 0.0367 1.0296]def
				/RangePQR[-0.3227950745 2.3229645538 -1.5003771057 3.5003465881 -0.1369979095 2.136967392]def
				currentdict end
			}if
			setcolorrendering_opt
		}if		
	}if
}def
/set_crd
{
	AGMCORE_host_sep not level2 and{
		currentdict/ColorRendering known{
			ColorRendering/ColorRendering{findresource}stopped not{setcolorrendering_opt}if
		}{
			currentdict/Intent known{
				updatecolorrendering
			}if
		}ifelse
		currentcolorspace dup type/arraytype eq
			{0 get}if
		/DeviceRGB eq
			{
			currentdict/UCR known
				{/UCR}{/AGMCORE_currentucr}ifelse
			load setundercolorremoval
			currentdict/BG known 
				{/BG}{/AGMCORE_currentbg}ifelse
			load setblackgeneration
			}if
	}if
}def
/set_ucrbg
{
	dup null eq {pop /AGMCORE_currentbg load}{/Procedure get_res}ifelse
	dup currentblackgeneration eq {pop}{setblackgeneration}ifelse
	dup null eq {pop /AGMCORE_currentucr load}{/Procedure get_res}ifelse
	dup currentundercolorremoval eq {pop}{setundercolorremoval}ifelse
}def
/setcolorrendering_opt
{
	dup currentcolorrendering eq{
		pop
	}{
		product(HP Color LaserJet 2605)anchorsearch{
			pop pop pop
		}{
			pop
			clonedict
			begin
				/Intent Intent def
				currentdict
			end
			setcolorrendering
		}ifelse
	}ifelse
}def
/cpaint_gcomp
{
	convert_to_process//Adobe_AGM_Core/AGMCORE_ConvertToProcess xddf
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get not
	{
		(%end_cpaint_gcomp)flushinput
	}if
}def
/cpaint_gsep
{
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get
	{	
		(%end_cpaint_gsep)flushinput
	}if
}def
/cpaint_gend
{np}def
/T1_path
{
	currentfile token pop currentfile token pop mo
	{
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 exch rlineto 
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 rlineto
	}loop
}def
/T1_gsave
	level3
	{/clipsave}
	{/gsave}ifelse
	load def
/T1_grestore
	level3
	{/cliprestore}
	{/grestore}ifelse 
	load def
/set_spot_alias_ary
{
	dup inherit_aliases
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry xddf
}def
/set_spot_normalization_ary
{
	dup inherit_aliases
	dup length
	/AGMCORE_SpotAliasAry where{pop AGMCORE_SpotAliasAry length add}if
	array
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry2 xddf
	/AGMCORE_SpotAliasAry where{
		pop
		AGMCORE_SpotAliasAry2 0 AGMCORE_SpotAliasAry putinterval
		AGMCORE_SpotAliasAry length
	}{0}ifelse
	AGMCORE_SpotAliasAry2 3 1 roll exch putinterval
	true set_spot_alias
}def
/inherit_aliases
{
	{dup/Name get map_alias{/CSD put}{pop}ifelse}forall
}def
/set_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias 3 -1 roll put
	}{
		pop
	}ifelse
}def
/current_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias get
	}{
		false
	}ifelse
}def
/map_alias
{
	/AGMCORE_SpotAliasAry2 where{
		begin
			/AGMCORE_name xdf
			false	
			AGMCORE_SpotAliasAry2{
				dup/Name get AGMCORE_name eq{
					/CSD get/CSD get_res
					exch pop true
					exit
				}{
					pop
				}ifelse
			}forall
		end
	}{
		pop false
	}ifelse
}bdf
/spot_alias
{
	true set_spot_alias
	/AGMCORE_&setcustomcolor AGMCORE_key_known not{
		//Adobe_AGM_Core/AGMCORE_&setcustomcolor/setcustomcolor load put
	}if
	/customcolor_tint 1 AGMCORE_gput
	//Adobe_AGM_Core begin
	/setcustomcolor
	{
		//Adobe_AGM_Core begin
		dup/customcolor_tint exch AGMCORE_gput
		1 index aload pop pop 1 eq exch 1 eq and exch 1 eq and exch 1 eq and not
		current_spot_alias and{1 index 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/sep_colorspace_dict AGMCORE_gget null ne
			{/sep_colorspace_dict AGMCORE_gget/ForeignContent known not}{false}ifelse
			3 1 roll 2 index{
				exch pop/sep_tint AGMCORE_gget exch
			}if
			mark 3 1 roll
			setsepcolorspace
			counttomark 0 ne{
				setsepcolor
			}if
			pop
			not{/sep_tint 1.0 AGMCORE_gput/sep_colorspace_dict AGMCORE_gget/ForeignContent true put}if
			pop
			true set_spot_alias
		}{
			AGMCORE_&setcustomcolor
		}ifelse
		end
	}bdf
	end
}def
/begin_feature
{
	Adobe_AGM_Core/AGMCORE_feature_dictCount countdictstack put
	count Adobe_AGM_Core/AGMCORE_feature_opCount 3 -1 roll put
	{Adobe_AGM_Core/AGMCORE_feature_ctm matrix currentmatrix put}if
}def
/end_feature
{
	2 dict begin
	/spd/setpagedevice load def
	/setpagedevice{get_gstate spd set_gstate}def
	stopped{$error/newerror false put}if
	end
	count Adobe_AGM_Core/AGMCORE_feature_opCount get sub dup 0 gt{{pop}repeat}{pop}ifelse
	countdictstack Adobe_AGM_Core/AGMCORE_feature_dictCount get sub dup 0 gt{{end}repeat}{pop}ifelse
	{Adobe_AGM_Core/AGMCORE_feature_ctm get setmatrix}if
}def
/set_negative
{
	//Adobe_AGM_Core begin
	/AGMCORE_inverting exch def
	level2{
		currentpagedevice/NegativePrint known AGMCORE_distilling not and{
			currentpagedevice/NegativePrint get//Adobe_AGM_Core/AGMCORE_inverting get ne{
				true begin_feature true{
						<</NegativePrint//Adobe_AGM_Core/AGMCORE_inverting get>>setpagedevice
				}end_feature
			}if
			/AGMCORE_inverting false def
		}if
	}if
	AGMCORE_inverting{
		[{1 exch sub}/exec load dup currenttransfer exch]cvx bind settransfer
 		AGMCORE_distilling{
 			erasepage
 		}{
 			gsave np clippath 1/setseparationgray where{pop setseparationgray}{setgray}ifelse
 			/AGMIRS_&fill where{pop AGMIRS_&fill}{fill}ifelse grestore
 		}ifelse
	}if
	end
}def
/lw_save_restore_override{
	/md where{
		pop
		md begin
		initializepage
		/initializepage{}def
		/pmSVsetup{}def
		/endp{}def
		/pse{}def
		/psb{}def
		/orig_showpage where
			{pop}
			{/orig_showpage/showpage load def}
		ifelse
		/showpage{orig_showpage gR}def
		end
	}if
}def
/pscript_showpage_override{
	/NTPSOct95 where
	{
		begin
		showpage
		save
		/showpage/restore load def
		/restore{exch pop}def
		end
	}if
}def
/driver_media_override
{
	/md where{
		pop
		md/initializepage known{
			md/initializepage{}put
		}if
		md/rC known{
			md/rC{4{pop}repeat}put
		}if
	}if
	/mysetup where{
		/mysetup[1 0 0 1 0 0]put
	}if
	Adobe_AGM_Core/AGMCORE_Default_CTM matrix currentmatrix put
	level2
		{Adobe_AGM_Core/AGMCORE_Default_PageSize currentpagedevice/PageSize get put}if
}def
/capture_mysetup
{
	/Pscript_Win_Data where{
		pop
		Pscript_Win_Data/mysetup known{
			Adobe_AGM_Core/save_mysetup Pscript_Win_Data/mysetup get put
		}if
	}if
}def
/restore_mysetup
{
	/Pscript_Win_Data where{
		pop
		Pscript_Win_Data/mysetup known{
			Adobe_AGM_Core/save_mysetup known{
				Pscript_Win_Data/mysetup Adobe_AGM_Core/save_mysetup get put
				Adobe_AGM_Core/save_mysetup undef
			}if
		}if
	}if
}def
/driver_check_media_override
{
 	/PrepsDict where
 		{pop}
		{
		Adobe_AGM_Core/AGMCORE_Default_CTM get matrix currentmatrix ne
		Adobe_AGM_Core/AGMCORE_Default_PageSize get type/arraytype eq
			{
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 0 get currentpagedevice/PageSize get 0 get eq and
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 1 get currentpagedevice/PageSize get 1 get eq and
			}if
			{
			Adobe_AGM_Core/AGMCORE_Default_CTM get setmatrix
			}if
		}ifelse
}def
AGMCORE_err_strings begin
	/AGMCORE_bad_environ(Environment not satisfactory for this job. Ensure that the PPD is correct or that the PostScript level requested is supported by this printer. )def
	/AGMCORE_color_space_onhost_seps(This job contains colors that will not separate with on-host methods. )def
	/AGMCORE_invalid_color_space(This job contains an invalid color space. )def
end
/set_def_ht
{AGMCORE_def_ht sethalftone}def
/set_def_flat
{AGMCORE_Default_flatness setflat}def
end
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_CoolType_Core 2.31 0
%%Copyright: Copyright 1997-2006 Adobe Systems Incorporated. All Rights Reserved.
%%Version: 2.31 0
10 dict begin
/Adobe_CoolType_Passthru currentdict def
/Adobe_CoolType_Core_Defined userdict/Adobe_CoolType_Core known def
Adobe_CoolType_Core_Defined
	{/Adobe_CoolType_Core userdict/Adobe_CoolType_Core get def}
if
userdict/Adobe_CoolType_Core 70 dict dup begin put
/Adobe_CoolType_Version 2.31 def
/Level2?
	systemdict/languagelevel known dup
		{pop systemdict/languagelevel get 2 ge}
	if def
Level2? not
	{
	/currentglobal false def
	/setglobal/pop load def
	/gcheck{pop false}bind def
	/currentpacking false def
	/setpacking/pop load def
	/SharedFontDirectory 0 dict def
	}
if
currentpacking
true setpacking
currentglobal false setglobal
userdict/Adobe_CoolType_Data 2 copy known not
	{2 copy 10 dict put}
if
get
	 begin
	/@opStackCountByLevel 32 dict def
	/@opStackLevel 0 def
	/@dictStackCountByLevel 32 dict def
	/@dictStackLevel 0 def
	 end
setglobal
currentglobal true setglobal
userdict/Adobe_CoolType_GVMFonts known not
	{userdict/Adobe_CoolType_GVMFonts 10 dict put}
if
setglobal
currentglobal false setglobal
userdict/Adobe_CoolType_LVMFonts known not
	{userdict/Adobe_CoolType_LVMFonts 10 dict put}
if
setglobal
/ct_VMDictPut
	{
	dup gcheck{Adobe_CoolType_GVMFonts}{Adobe_CoolType_LVMFonts}ifelse
	3 1 roll put
	}bind def
/ct_VMDictUndef
	{
	dup Adobe_CoolType_GVMFonts exch known
		{Adobe_CoolType_GVMFonts exch undef}
		{
			dup Adobe_CoolType_LVMFonts exch known
			{Adobe_CoolType_LVMFonts exch undef}
			{pop}
			ifelse
		}ifelse
	}bind def
/ct_str1 1 string def
/ct_xshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			_ct_x _ct_y moveto
			0
			rmoveto
		}
		ifelse
		/_ct_i _ct_i 1 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/ct_yshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			_ct_x _ct_y moveto
			0 exch
			rmoveto
		}
		ifelse
		/_ct_i _ct_i 1 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/ct_xyshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			{_ct_na _ct_i 1 add get}stopped 
			{pop pop pop}
			{
				_ct_x _ct_y moveto
				rmoveto
			}
			ifelse
		}
		ifelse
		/_ct_i _ct_i 2 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/xsh{{@xshow}stopped{Adobe_CoolType_Data begin ct_xshow end}if}bind def
/ysh{{@yshow}stopped{Adobe_CoolType_Data begin ct_yshow end}if}bind def
/xysh{{@xyshow}stopped{Adobe_CoolType_Data begin ct_xyshow end}if}bind def
currentglobal true setglobal
/ct_T3Defs
{
/BuildChar
{
	1 index/Encoding get exch get
	1 index/BuildGlyph get exec
}bind def
/BuildGlyph
{
	exch begin
	GlyphProcs exch get exec
	end
}bind def
}bind def
setglobal
/@_SaveStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@vmState currentglobal def false setglobal
		@opStackCountByLevel
		@opStackLevel
		2 copy known not
			{
			2 copy
			3 dict dup/args
			7 index
			5 add array put
			put get
			}
			{
			get dup/args get dup length 3 index lt
				{
				dup length 5 add array exch
				1 index exch 0 exch putinterval
				1 index exch/args exch put
				}
				{pop}
			ifelse
			}
		ifelse
			begin
			count 1 sub
			1 index lt
				{pop count}
			if
			dup/argCount exch def
			dup 0 gt
				{
				args exch 0 exch getinterval 
			astore pop
				}
				{pop}
			ifelse
			count
			/restCount exch def
			end
		/@opStackLevel @opStackLevel 1 add def
		countdictstack 1 sub
		@dictStackCountByLevel exch @dictStackLevel exch put
		/@dictStackLevel @dictStackLevel 1 add def
		@vmState setglobal
		end
	}bind def
/@_RestoreStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@opStackLevel @opStackLevel 1 sub def
		@opStackCountByLevel @opStackLevel get
			begin
			count restCount sub dup 0 gt
				{{pop}repeat}
				{pop}
			ifelse
			args 0 argCount getinterval{}forall
			end
		/@dictStackLevel @dictStackLevel 1 sub def
		@dictStackCountByLevel @dictStackLevel get
		end
	countdictstack exch sub dup 0 gt
		{{end}repeat}
		{pop}
	ifelse
	}bind def
/@_PopStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@opStackLevel @opStackLevel 1 sub def
		/@dictStackLevel @dictStackLevel 1 sub def
		end
	}bind def
/@Raise
	{
	exch cvx exch errordict exch get exec
	stop
	}bind def
/@ReRaise
	{
	cvx $error/errorname get errordict exch get exec
	stop
	}bind def
/@Stopped
	{
	0 @#Stopped
	}bind def
/@#Stopped
	{
	@_SaveStackLevels
	stopped
		{@_RestoreStackLevels true}
		{@_PopStackLevels false}
	ifelse
	}bind def
/@Arg
	{
	Adobe_CoolType_Data
		begin
		@opStackCountByLevel @opStackLevel 1 sub get
		begin
		args exch
		argCount 1 sub exch sub get
		end
		end
	}bind def
currentglobal true setglobal
/CTHasResourceForAllBug
	Level2?
		{
		1 dict dup
				/@shouldNotDisappearDictValue true def
				Adobe_CoolType_Data exch/@shouldNotDisappearDict exch put
				begin
				count @_SaveStackLevels
					{(*){pop stop}128 string/Category resourceforall}
				stopped pop
				@_RestoreStackLevels
				currentdict Adobe_CoolType_Data/@shouldNotDisappearDict get dup 3 1 roll ne dup 3 1 roll
					{
						 /@shouldNotDisappearDictValue known
								{
										 {
												end
												currentdict 1 index eq
													{pop exit}
												if
										 }
									 loop
								}
						 if
					}
					{
						 pop
						 end
					}
				ifelse
		}
		{false}
	ifelse
	def
true setglobal
/CTHasResourceStatusBug
	Level2?
		{
		mark
			{/steveamerige/Category resourcestatus}
		stopped
			{cleartomark true}
			{cleartomark currentglobal not}
		ifelse
		}
		{false}
	ifelse
	def
setglobal
/CTResourceStatus
		{
		mark 3 1 roll
		/Category findresource
			begin
			({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec
				{cleartomark false}
				{{3 2 roll pop true}{cleartomark false}ifelse}
			ifelse
			end
		}bind def
/CTWorkAroundBugs
	{
	Level2?
		{
		/cid_PreLoad/ProcSet resourcestatus
			{
			pop pop
			currentglobal
			mark
				{
				(*)
					{
					dup/CMap CTHasResourceStatusBug
						{CTResourceStatus}
						{resourcestatus}
					ifelse
						{
						pop dup 0 eq exch 1 eq or
							{
							dup/CMap findresource gcheck setglobal
							/CMap undefineresource
							}
							{
							pop CTHasResourceForAllBug
								{exit}
								{stop}
							ifelse
							}
						ifelse
						}
						{pop}
					ifelse
					}
				128 string/CMap resourceforall
				}
			stopped
				{cleartomark}
			stopped pop
			setglobal
			}
		if
		}
	if
	}bind def
/ds
	{
	Adobe_CoolType_Core
		begin
		CTWorkAroundBugs
		/mo/moveto load def
		/nf/newencodedfont load def
		/msf{makefont setfont}bind def
		/uf{dup undefinefont ct_VMDictUndef}bind def
		/ur/undefineresource load def
		/chp/charpath load def
		/awsh/awidthshow load def
		/wsh/widthshow load def
		/ash/ashow load def
		/@xshow/xshow load def
		/@yshow/yshow load def
		/@xyshow/xyshow load def
		/@cshow/cshow load def
		/sh/show load def
		/rp/repeat load def
		/.n/.notdef def
		end
		currentglobal false setglobal
	 userdict/Adobe_CoolType_Data 2 copy known not
		 {2 copy 10 dict put}
		if
		get
		begin
		/AddWidths? false def
		/CC 0 def
		/charcode 2 string def
		/@opStackCountByLevel 32 dict def
		/@opStackLevel 0 def
		/@dictStackCountByLevel 32 dict def
		/@dictStackLevel 0 def
		/InVMFontsByCMap 10 dict def
		/InVMDeepCopiedFonts 10 dict def
		end
		setglobal
	}bind def
/dt
	{
	currentdict Adobe_CoolType_Core eq
		{end}
	if
	}bind def
/ps
	{
	Adobe_CoolType_Core begin
	Adobe_CoolType_GVMFonts begin
	Adobe_CoolType_LVMFonts begin
	SharedFontDirectory begin
	}bind def
/pt
	{
	end
	end
	end
	end
	}bind def
/unload
	{
	systemdict/languagelevel known
		{
		systemdict/languagelevel get 2 ge
			{
			userdict/Adobe_CoolType_Core 2 copy known
				{undef}
				{pop pop}
			ifelse
			}
		if
		}
	if
	}bind def
/ndf
	{
	1 index where
		{pop pop pop}
		{dup xcheck{bind}if def}
	ifelse
	}def
/findfont systemdict
	begin
	userdict
		begin
		/globaldict where{/globaldict get begin}if
			dup where pop exch get
		/globaldict where{pop end}if
		end
	end
Adobe_CoolType_Core_Defined
	{/systemfindfont exch def}
	{
	/findfont 1 index def
	/systemfindfont exch def
	}
ifelse
/undefinefont
	{pop}ndf
/copyfont
	{
	currentglobal 3 1 roll
	1 index gcheck setglobal
	dup null eq{0}{dup length}ifelse
	2 index length add 1 add dict
		begin
		exch
			{
			1 index/FID eq
				{pop pop}
				{def}
			ifelse
			}
		forall
		dup null eq
			{pop}
			{{def}forall}
		ifelse
		currentdict
		end
	exch setglobal
	}bind def
/copyarray
	{
	currentglobal exch
	dup gcheck setglobal
	dup length array copy
	exch setglobal
	}bind def
/newencodedfont
	{
	currentglobal
		{
		SharedFontDirectory 3 index known
			{SharedFontDirectory 3 index get/FontReferenced known}
			{false}
		ifelse
		}
		{
		FontDirectory 3 index known
			{FontDirectory 3 index get/FontReferenced known}
			{
			SharedFontDirectory 3 index known
				{SharedFontDirectory 3 index get/FontReferenced known}
				{false}
			ifelse
			}
		ifelse
		}
	ifelse
	dup
		{
		3 index findfont/FontReferenced get
		2 index dup type/nametype eq
			{findfont}
		if ne
			{pop false}
		if
		}
	if
	dup
		{
		1 index dup type/nametype eq
			{findfont}
		 if
		dup/CharStrings known
			{
			/CharStrings get length
			4 index findfont/CharStrings get length
			ne
				{
				pop false
				}
			if 
			}
			{pop}
			ifelse
		}
	if
		{
		pop
		1 index findfont
		/Encoding get exch
		0 1 255
			{2 copy get 3 index 3 1 roll put}
		for
		pop pop pop
		}
		{
		currentglobal
	 4 1 roll
		dup type/nametype eq
		 {findfont}
	 if
	 dup gcheck setglobal
		dup dup maxlength 2 add dict
			begin
			exch
				{
				1 index/FID ne
				2 index/Encoding ne and
					{def}
					{pop pop}
				ifelse
				}
			forall
			/FontReferenced exch def
			/Encoding exch dup length array copy def
			/FontName 1 index dup type/stringtype eq{cvn}if def dup
			currentdict
			end
		definefont ct_VMDictPut
		setglobal
		}
	ifelse
	}bind def
/SetSubstituteStrategy
	{
	$SubstituteFont
		begin
		dup type/dicttype ne
			{0 dict}
		if
		currentdict/$Strategies known
			{
			exch $Strategies exch 
			2 copy known
				{
				get
				2 copy maxlength exch maxlength add dict
					begin
					{def}forall
					{def}forall
					currentdict
					dup/$Init known
						{dup/$Init get exec}
					if
					end
				/$Strategy exch def
				}
				{pop pop pop}
			ifelse
			}
			{pop pop}
		ifelse
		end
	}bind def
/scff
	{
	$SubstituteFont
		begin
		dup type/stringtype eq
			{dup length exch}
			{null}
		ifelse
		/$sname exch def
		/$slen exch def
		/$inVMIndex
			$sname null eq
				{
				1 index $str cvs
				dup length $slen sub $slen getinterval cvn
				}
				{$sname}
			ifelse def
		end
		{findfont}
	@Stopped
		{
		dup length 8 add string exch
		1 index 0(BadFont:)putinterval
		1 index exch 8 exch dup length string cvs putinterval cvn
			{findfont}
		@Stopped
			{pop/Courier findfont}
		if
		}
	if
	$SubstituteFont
		begin
		/$sname null def
		/$slen 0 def
		/$inVMIndex null def
		end
	}bind def
/isWidthsOnlyFont
	{
	dup/WidthsOnly known
		{pop pop true}
		{
		dup/FDepVector known
			{/FDepVector get{isWidthsOnlyFont dup{exit}if}forall}
			{
			dup/FDArray known
				{/FDArray get{isWidthsOnlyFont dup{exit}if}forall}
				{pop}
			ifelse
			}
		ifelse
		}
	ifelse
	}bind def
/ct_StyleDicts 4 dict dup begin
		 /Adobe-Japan1 4 dict dup begin
					 Level2?
								{
								/Serif
								/HeiseiMin-W3-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiMin-W3}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiMin-W3/CIDFont resourcestatus
								{pop pop/HeiseiMin-W3}
								{/Ryumin-Light}
								ifelse
							}
							{/Ryumin-Light}
							ifelse
								}
								ifelse
								def
								/SansSerif
								/HeiseiKakuGo-W5-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiKakuGo-W5}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiKakuGo-W5/CIDFont resourcestatus
								{pop pop/HeiseiKakuGo-W5}
								{/GothicBBB-Medium}
								ifelse
							}
							{/GothicBBB-Medium}
							ifelse
								}
								ifelse
								def
								/HeiseiMaruGo-W4-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiMaruGo-W4}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiMaruGo-W4/CIDFont resourcestatus
								{pop pop/HeiseiMaruGo-W4}
								{
									/Jun101-Light-RKSJ-H/Font resourcestatus
									{pop pop/Jun101-Light}
									{SansSerif}
									ifelse
								}
								ifelse
							}
							{
								/Jun101-Light-RKSJ-H/Font resourcestatus
								{pop pop/Jun101-Light}
								{SansSerif}
								ifelse
							}
							ifelse
								}
								ifelse
								/RoundSansSerif exch def
								/Default Serif def
								}
								{
								/Serif/Ryumin-Light def
								/SansSerif/GothicBBB-Medium def
								{
								(fonts/Jun101-Light-83pv-RKSJ-H)status
								}stopped
								{pop}{
										 {pop pop pop pop/Jun101-Light}
										 {SansSerif}
										 ifelse
										 /RoundSansSerif exch def
								}ifelse
								/Default Serif def
								}
					 ifelse
		 end
		 def
		 /Adobe-Korea1 4 dict dup begin
					/Serif/HYSMyeongJo-Medium def
					/SansSerif/HYGoThic-Medium def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
		 /Adobe-GB1 4 dict dup begin
					/Serif/STSong-Light def
					/SansSerif/STHeiti-Regular def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
		 /Adobe-CNS1 4 dict dup begin
					/Serif/MKai-Medium def
					/SansSerif/MHei-Medium def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
end
def
Level2?{currentglobal true setglobal}if
/ct_BoldRomanWidthProc 
	{
	stringwidth 1 index 0 ne{exch .03 add exch}if setcharwidth
	0 0
	}bind def
/ct_Type0WidthProc 
	{
	 dup stringwidth 0 0 moveto 
	 2 index true charpath pathbbox
	 0 -1 
	 7 index 2 div .88 
	 setcachedevice2
	 pop
	0 0
	}bind def
/ct_Type0WMode1WidthProc 
	{
	 dup stringwidth 
	 pop 2 div neg -0.88
	2 copy
	moveto 
	0 -1
	 5 -1 roll true charpath pathbbox
	 setcachedevice
	}bind def
/cHexEncoding
[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12
/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25
/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38
/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B
/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E
/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71
/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84
/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97
/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA
/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD
/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0
/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3
/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6
/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def
/ct_BoldBaseFont 
	 11 dict begin
		/FontType 3 def
		/FontMatrix[1 0 0 1 0 0]def
		/FontBBox[0 0 1 1]def
		/Encoding cHexEncoding def 
		/_setwidthProc/ct_BoldRomanWidthProc load def
		/_bcstr1 1 string def
		/BuildChar
		{
			exch begin
				_basefont setfont
				_bcstr1 dup 0 4 -1 roll put
				dup 
				_setwidthProc
				3 copy 
				moveto				
				show
				_basefonto setfont
				moveto
				show
			end
		}bind def
		 currentdict
	 end 
def
systemdict/composefont known
{
/ct_DefineIdentity-H
{
	/Identity-H/CMap resourcestatus
	{
		pop pop
	}
	{
		/CIDInit/ProcSet findresource begin
		 12 dict begin
		 begincmap
		 /CIDSystemInfo 3 dict dup begin
			 /Registry(Adobe)def
			 /Ordering(Identity)def
			 /Supplement 0 def
		 end def
		 /CMapName/Identity-H def
		 /CMapVersion 1.000 def
		 /CMapType 1 def
		 1 begincodespacerange
		 <0000><FFFF>
		 endcodespacerange
		 1 begincidrange
		 <0000><FFFF>0
		 endcidrange
		 endcmap
		 CMapName currentdict/CMap defineresource pop
		 end
		 end
	 }
	 ifelse
}
def
/ct_BoldBaseCIDFont 
	 11 dict begin
		/CIDFontType 1 def
		/CIDFontName/ct_BoldBaseCIDFont def
		/FontMatrix[1 0 0 1 0 0]def
		/FontBBox[0 0 1 1]def
		/_setwidthProc/ct_Type0WidthProc load def
		/_bcstr2 2 string def
		/BuildGlyph
		{
			exch begin		 
				_basefont setfont
				_bcstr2 1 2 index 256 mod put
				_bcstr2 0 3 -1 roll 256 idiv put
				_bcstr2 dup _setwidthProc		 
				3 copy 
				moveto
				show
				_basefonto setfont
				moveto
				show
			end
		}bind def
		 currentdict
	 end 
def
}if
Level2?{setglobal}if
/ct_CopyFont{
	{
		1 index/FID ne 2 index/UniqueID ne and
		{def}{pop pop}ifelse
	}forall
}bind def
/ct_Type0CopyFont 
{
	exch
	dup length dict
	begin
	ct_CopyFont
	[
	exch
	FDepVector 
	{
		 dup/FontType get 0 eq
		{	
		1 index ct_Type0CopyFont 
		/_ctType0 exch definefont
		}
		{
		/_ctBaseFont exch
		2 index exec
		}
		 ifelse 
		 exch
	}
	forall 
	pop
	]				
	/FDepVector exch def
	currentdict
	end
}bind def
/ct_MakeBoldFont
{
	 dup/ct_SyntheticBold known
	{
		dup length 3 add dict begin 
		ct_CopyFont 
		/ct_StrokeWidth .03 0 FontMatrix idtransform pop def 
		/ct_SyntheticBold true def
		currentdict 
		end 
		definefont
	}
	{
		dup dup length 3 add dict
		begin
			ct_CopyFont
			/PaintType 2 def
			/StrokeWidth .03 0 FontMatrix idtransform pop def
			/dummybold currentdict
		end
		definefont
		dup/FontType get dup 9 ge exch 11 le and 
		{
			ct_BoldBaseCIDFont
			dup length 3 add dict copy begin
			dup/CIDSystemInfo get/CIDSystemInfo exch def
			ct_DefineIdentity-H
			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont
			/_basefont exch def
			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont
			/_basefonto exch def
			currentdict
			end
			/CIDFont defineresource
		}
		{
			ct_BoldBaseFont
			dup length 3 add dict copy begin
			/_basefont exch def
			/_basefonto exch def
			currentdict
			end
			definefont
		}
		ifelse
	}
	ifelse
}bind def
/ct_MakeBold{
	1 index 
	1 index
	findfont
	currentglobal 5 1 roll
	dup gcheck setglobal
		dup
		 /FontType get 0 eq
			{
				dup/WMode known{dup/WMode get 1 eq}{false}ifelse
				version length 4 ge
				and
					{version 0 4 getinterval cvi 2015 ge}
					{true}
				ifelse 
					{/ct_Type0WidthProc}
					{/ct_Type0WMode1WidthProc}
				ifelse
				ct_BoldBaseFont/_setwidthProc 3 -1 roll load put
						{ct_MakeBoldFont}ct_Type0CopyFont definefont
			}
			{
				dup/_fauxfont known not 1 index/SubstMaster known not and
				{
					 ct_BoldBaseFont/_setwidthProc /ct_BoldRomanWidthProc load put
					 ct_MakeBoldFont 
				}
				{
				2 index 2 index eq
					{exch pop	}
					{
						dup length dict begin
						ct_CopyFont
						currentdict
						end
						definefont 
					}
				ifelse
				}
			ifelse
			}
		 ifelse
		 pop pop pop
		 setglobal
}bind def
/?str1 256 string def
/?set
	{
	$SubstituteFont
		begin
		/$substituteFound false def
		/$fontname 1 index def
		/$doSmartSub false def
		end
	dup
	 findfont
	$SubstituteFont
		begin
		$substituteFound
			{false}
			{
			dup/FontName known
				{
				dup/FontName get $fontname eq
				1 index/DistillerFauxFont known not and
				/currentdistillerparams where
					{pop false 2 index isWidthsOnlyFont not and}
				if
				}
				{false}
			ifelse
			}
		ifelse
		exch pop
		/$doSmartSub true def
		end
		{
		5 1 roll pop pop pop pop
		findfont
		}
		{
		1 index
		findfont
		dup/FontType get 3 eq
		{
			6 1 roll pop pop pop pop pop false
		}
		{pop true}
		ifelse
		{
		$SubstituteFont
		begin
		pop pop
		/$styleArray 1 index def
		/$regOrdering 2 index def
		pop pop
		0 1 $styleArray length 1 sub
		{
			$styleArray exch get
			ct_StyleDicts $regOrdering
			2 copy known
			{
				get
				exch 2 copy known not
				{pop/Default}
				if
				get
				dup type/nametype eq
				{
				?str1 cvs length dup 1 add exch
				?str1 exch(-)putinterval
				exch dup length exch ?str1 exch 3 index exch putinterval
				add ?str1 exch 0 exch getinterval cvn
				}
				{
				pop pop/Unknown
				}
				ifelse
			}
			{
				pop pop pop pop/Unknown
			}
			ifelse
		}
		for
		end
		findfont 
		}if
		}
	ifelse
	currentglobal false setglobal 3 1 roll
	null copyfont definefont pop
	setglobal
	}bind def
setpacking
userdict/$SubstituteFont 25 dict put
1 dict
	begin
	/SubstituteFont
		dup $error exch 2 copy known
			{get}
			{pop pop{pop/Courier}bind}
		ifelse def
	/currentdistillerparams where dup
		{
		pop pop
		currentdistillerparams/CannotEmbedFontPolicy 2 copy known
			{get/Error eq}
			{pop pop false}
		ifelse
		}
	if not
		{
		countdictstack array dictstack 0 get
			begin
			userdict
				begin
				$SubstituteFont
					begin
					/$str 128 string def
					/$fontpat 128 string def
					/$slen 0 def
					/$sname null def
					/$match false def
					/$fontname null def
					/$substituteFound false def
					/$inVMIndex null def
					/$doSmartSub true def
					/$depth 0 def
					/$fontname null def
					/$italicangle 26.5 def
					/$dstack null def
					/$Strategies 10 dict dup
						begin
						/$Type3Underprint
							{
							currentglobal exch false setglobal
							11 dict
								begin
								/UseFont exch
									$WMode 0 ne
										{
										dup length dict copy
										dup/WMode $WMode put
										/UseFont exch definefont
										}
									if def
								/FontName $fontname dup type/stringtype eq{cvn}if def
								/FontType 3 def
								/FontMatrix[.001 0 0 .001 0 0]def
								/Encoding 256 array dup 0 1 255{/.notdef put dup}for pop def
								/FontBBox[0 0 0 0]def
								/CCInfo 7 dict dup
									begin
									/cc null def
									/x 0 def
									/y 0 def
									end def
								/BuildChar
									{
									exch
										begin
										CCInfo
											begin
											1 string dup 0 3 index put exch pop
											/cc exch def
											UseFont 1000 scalefont setfont
											cc stringwidth/y exch def/x exch def
											x y setcharwidth
											$SubstituteFont/$Strategy get/$Underprint get exec
											0 0 moveto cc show
											x y moveto
											end
										end
									}bind def
								currentdict
								end
							exch setglobal
							}bind def
						/$GetaTint
							2 dict dup
								begin
								/$BuildFont
									{
									dup/WMode known
										{dup/WMode get}
										{0}
									ifelse
									/$WMode exch def
									$fontname exch
									dup/FontName known
										{
										dup/FontName get
										dup type/stringtype eq{cvn}if
										}
										{/unnamedfont}
									ifelse
									exch
									Adobe_CoolType_Data/InVMDeepCopiedFonts get
									1 index/FontName get known
										{
										pop
										Adobe_CoolType_Data/InVMDeepCopiedFonts get
										1 index get
										null copyfont
										}
										{$deepcopyfont}
									ifelse
									exch 1 index exch/FontBasedOn exch put
									dup/FontName $fontname dup type/stringtype eq{cvn}if put
									definefont
									Adobe_CoolType_Data/InVMDeepCopiedFonts get
										begin
										dup/FontBasedOn get 1 index def
										end
									}bind def
								/$Underprint
									{
									gsave
									x abs y abs gt
										{/y 1000 def}
										{/x -1000 def 500 120 translate}
									ifelse
									Level2?
										{
										[/Separation(All)/DeviceCMYK{0 0 0 1 pop}]
										setcolorspace
										}
										{0 setgray}
									ifelse
									10 setlinewidth
									x .8 mul
									[7 3]
										{
										y mul 8 div 120 sub x 10 div exch moveto
										0 y 4 div neg rlineto
										dup 0 rlineto
										0 y 4 div rlineto
										closepath
										gsave
										Level2?
											{.2 setcolor}
											{.8 setgray}
										ifelse
										fill grestore
										stroke
										}
									forall
									pop
									grestore
									}bind def
								end def
						/$Oblique
							1 dict dup
								begin
								/$BuildFont
									{
									currentglobal exch dup gcheck setglobal
									null copyfont
										begin
										/FontBasedOn
										currentdict/FontName known
											{
											FontName
											dup type/stringtype eq{cvn}if
											}
											{/unnamedfont}
										ifelse
										def
										/FontName $fontname dup type/stringtype eq{cvn}if def
										/currentdistillerparams where
											{pop}
											{
											/FontInfo currentdict/FontInfo known
												{FontInfo null copyfont}
												{2 dict}
											ifelse
											dup
												begin
												/ItalicAngle $italicangle def
												/FontMatrix FontMatrix
												[1 0 ItalicAngle dup sin exch cos div 1 0 0]
												matrix concatmatrix readonly
												end
											4 2 roll def
											def
											}
										ifelse
										FontName currentdict
										end
									definefont
									exch setglobal
									}bind def
								end def
						/$None
							1 dict dup
								begin
								/$BuildFont{}bind def
								end def
						end def
					/$Oblique SetSubstituteStrategy
					/$findfontByEnum
						{
						dup type/stringtype eq{cvn}if
						dup/$fontname exch def
						$sname null eq
							{$str cvs dup length $slen sub $slen getinterval}
							{pop $sname}
						ifelse
						$fontpat dup 0(fonts/*)putinterval exch 7 exch putinterval
						/$match false def
						$SubstituteFont/$dstack countdictstack array dictstack put
						mark
							{
							$fontpat 0 $slen 7 add getinterval
								{/$match exch def exit}
							$str filenameforall
							}
						stopped
							{
							cleardictstack
							currentdict
							true
							$SubstituteFont/$dstack get
								{
								exch
									{
									1 index eq
										{pop false}
										{true}
									ifelse
									}
									{begin false}
								ifelse
								}
							forall
							pop
							}
						if
						cleartomark
						/$slen 0 def
						$match false ne
							{$match(fonts/)anchorsearch pop pop cvn}
							{/Courier}
						ifelse
						}bind def
					/$ROS 1 dict dup
						begin
						/Adobe 4 dict dup
							begin
							/Japan1 [/Ryumin-Light/HeiseiMin-W3
										 /GothicBBB-Medium/HeiseiKakuGo-W5
										 /HeiseiMaruGo-W4/Jun101-Light]def
							/Korea1 [/HYSMyeongJo-Medium/HYGoThic-Medium]def
							/GB1	 [/STSong-Light/STHeiti-Regular]def
							/CNS1	[/MKai-Medium/MHei-Medium]def
							end def
						end def
					/$cmapname null def
					/$deepcopyfont
						{
						dup/FontType get 0 eq
							{
							1 dict dup/FontName/copied put copyfont
								begin
								/FDepVector FDepVector copyarray
								0 1 2 index length 1 sub
									{
									2 copy get $deepcopyfont
									dup/FontName/copied put
									/copied exch definefont
									3 copy put pop pop
									}
								for
								def
								currentdict
								end
							}
							{$Strategies/$Type3Underprint get exec}
						ifelse
						}bind def
					/$buildfontname
						{
						dup/CIDFont findresource/CIDSystemInfo get
							begin
							Registry length Ordering length Supplement 8 string cvs
							3 copy length 2 add add add string
							dup 5 1 roll dup 0 Registry putinterval
							dup 4 index(-)putinterval
							dup 4 index 1 add Ordering putinterval
							4 2 roll add 1 add 2 copy(-)putinterval
							end
						1 add 2 copy 0 exch getinterval $cmapname $fontpat cvs exch
						anchorsearch
							{pop pop 3 2 roll putinterval cvn/$cmapname exch def}
							{pop pop pop pop pop}
						ifelse
						length
						$str 1 index(-)putinterval 1 add
						$str 1 index $cmapname $fontpat cvs putinterval
						$cmapname length add
						$str exch 0 exch getinterval cvn
						}bind def
					/$findfontByROS
						{
						/$fontname exch def
						$ROS Registry 2 copy known
							{
							get Ordering 2 copy known
								{get}
								{pop pop[]}
							ifelse
							}
							{pop pop[]}
						ifelse
						false exch
							{
							dup/CIDFont resourcestatus
								{
								pop pop
								save
								1 index/CIDFont findresource
								dup/WidthsOnly known
									{dup/WidthsOnly get}
									{false}
								ifelse
								exch pop
								exch restore
									{pop}
									{exch pop true exit}
								ifelse
								}
								{pop}
							ifelse
							}
						forall
							{$str cvs $buildfontname}
							{
							false(*)
								{
								save exch
								dup/CIDFont findresource
								dup/WidthsOnly known
									{dup/WidthsOnly get not}
									{true}
								ifelse
								exch/CIDSystemInfo get
								dup/Registry get Registry eq
								exch/Ordering get Ordering eq and and
									{exch restore exch pop true exit}
									{pop restore}
								ifelse
								}
							$str/CIDFont resourceforall
								{$buildfontname}
								{$fontname $findfontByEnum}
							ifelse
							}
						ifelse
						}bind def
					end
				end
				currentdict/$error known currentdict/languagelevel known and dup
					{pop $error/SubstituteFont known}
				if
				dup
					{$error}
					{Adobe_CoolType_Core}
				ifelse
				begin
					{
					/SubstituteFont
					/CMap/Category resourcestatus
						{
						pop pop
						{
						$SubstituteFont
							begin
							/$substituteFound true def
							dup length $slen gt
							$sname null ne or
							$slen 0 gt and
								{
								$sname null eq
									{dup $str cvs dup length $slen sub $slen getinterval cvn}
									{$sname}
								ifelse
								Adobe_CoolType_Data/InVMFontsByCMap get
								1 index 2 copy known
									{
									get
									false exch
										{
										pop
										currentglobal
											{
											GlobalFontDirectory 1 index known
												{exch pop true exit}
												{pop}
											ifelse
											}
											{
											FontDirectory 1 index known
												{exch pop true exit}
												{
												GlobalFontDirectory 1 index known
													{exch pop true exit}
													{pop}
												ifelse
												}
											ifelse
											}
										ifelse
										}
									forall
									}
									{pop pop false}
								ifelse
									{
									exch pop exch pop
									}
									{
									dup/CMap resourcestatus
										{
										pop pop
										dup/$cmapname exch def
										/CMap findresource/CIDSystemInfo get{def}forall
										$findfontByROS
										}
										{
										128 string cvs
										dup(-)search
											{
											3 1 roll search
												{
												3 1 roll pop
													{dup cvi}
												stopped
													{pop pop pop pop pop $findfontByEnum}
													{
													4 2 roll pop pop
													exch length
													exch
													2 index length
													2 index
													sub
													exch 1 sub -1 0
														{
														$str cvs dup length
														4 index
														0
														4 index
														4 3 roll add
														getinterval
														exch 1 index exch 3 index exch
														putinterval
														dup/CMap resourcestatus
															{
															pop pop
															4 1 roll pop pop pop
															dup/$cmapname exch def
															/CMap findresource/CIDSystemInfo get{def}forall
															$findfontByROS
															true exit
															}
															{pop}
														ifelse
														}
													for
													dup type/booleantype eq
														{pop}
														{pop pop pop $findfontByEnum}
													ifelse
													}
												ifelse
												}
												{pop pop pop $findfontByEnum}
											ifelse
											}
											{pop pop $findfontByEnum}
										ifelse
										}
									ifelse
									}
								ifelse
								}
								{//SubstituteFont exec}
							ifelse
							/$slen 0 def
							end
						}
						}
						{
						{
						$SubstituteFont
							begin
							/$substituteFound true def
							dup length $slen gt
							$sname null ne or
							$slen 0 gt and
								{$findfontByEnum}
								{//SubstituteFont exec}
							ifelse
							end
						}
						}
					ifelse
					bind readonly def
					Adobe_CoolType_Core/scfindfont/systemfindfont load put
					}
					{
					/scfindfont
						{
						$SubstituteFont
							begin
							dup systemfindfont
							dup/FontName known
								{dup/FontName get dup 3 index ne}
								{/noname true}
							ifelse
							dup
								{
								/$origfontnamefound 2 index def
								/$origfontname 4 index def/$substituteFound true def
								}
							if
							exch pop
								{
								$slen 0 gt
								$sname null ne
								3 index length $slen gt or and
									{
									pop dup $findfontByEnum findfont
									dup maxlength 1 add dict
										begin
											{1 index/FID eq{pop pop}{def}ifelse}
										forall
										currentdict
										end
									definefont
									dup/FontName known{dup/FontName get}{null}ifelse
									$origfontnamefound ne
										{
										$origfontname $str cvs print
										( substitution revised, using )print
										dup/FontName known
											{dup/FontName get}{(unspecified font)}
										ifelse
										$str cvs print(.\n)print
										}
									if
									}
									{exch pop}
								ifelse
								}
								{exch pop}
							ifelse
							end
						}bind def
					}
				ifelse
				end
			end
		Adobe_CoolType_Core_Defined not
			{
			Adobe_CoolType_Core/findfont
				{
				$SubstituteFont
					begin
					$depth 0 eq
						{
						/$fontname 1 index dup type/stringtype ne{$str cvs}if def
						/$substituteFound false def
						}
					if
					/$depth $depth 1 add def
					end
				scfindfont
				$SubstituteFont
					begin
					/$depth $depth 1 sub def
					$substituteFound $depth 0 eq and
						{
						$inVMIndex null ne
							{dup $inVMIndex $AddInVMFont}
						if
						$doSmartSub
							{
							currentdict/$Strategy known
								{$Strategy/$BuildFont get exec}
							if
							}
						if
						}
					if
					end
				}bind put
			}
		if
		}
	if
	end
/$AddInVMFont
	{
	exch/FontName 2 copy known
		{
		get
		1 dict dup begin exch 1 index gcheck def end exch
		Adobe_CoolType_Data/InVMFontsByCMap get exch
		$DictAdd
		}
		{pop pop pop}
	ifelse
	}bind def
/$DictAdd
	{
	2 copy known not
		{2 copy 4 index length dict put}
	if
	Level2? not
		{
		2 copy get dup maxlength exch length 4 index length add lt
		2 copy get dup length 4 index length add exch maxlength 1 index lt
			{
			2 mul dict
				begin
				2 copy get{forall}def
				2 copy currentdict put
				end
			}
			{pop}
		ifelse
		}
	if
	get
		begin
			{def}
		forall
		end
	}bind def
end
end
%%EndResource
currentglobal true setglobal
%%BeginResource: procset Adobe_CoolType_Utility_MAKEOCF 1.23 0
%%Copyright: Copyright 1987-2006 Adobe Systems Incorporated.
%%Version: 1.23 0
systemdict/languagelevel known dup
	{currentglobal false setglobal}
	{false}
ifelse
exch
userdict/Adobe_CoolType_Utility 2 copy known
	{2 copy get dup maxlength 27 add dict copy}
	{27 dict}
ifelse put
Adobe_CoolType_Utility
	begin
	/@eexecStartData
		 <BAB431EA07F209EB8C4348311481D9D3F76E3D15246555577D87BC510ED54E
		 118C39697FA9F6DB58128E60EB8A12FA24D7CDD2FA94D221FA9EC8DA3E5E6A1C
		 4ACECC8C2D39C54E7C946031DD156C3A6B4A09AD29E1867A>def
	/@recognizeCIDFont null def
	/ct_Level2? exch def
	/ct_Clone? 1183615869 internaldict dup
			/CCRun known not
			exch/eCCRun known not
			ct_Level2? and or def
ct_Level2?
	{globaldict begin currentglobal true setglobal}
if
	/ct_AddStdCIDMap
		ct_Level2?
			{{
				mark
				Adobe_CoolType_Utility/@recognizeCIDFont currentdict put
					{
					((Hex)57 StartData
					 0615 1e27 2c39 1c60 d8a8 cc31 fe2b f6e0
					 7aa3 e541 e21c 60d8 a8c9 c3d0 6d9e 1c60
					 d8a8 c9c2 02d7 9a1c 60d8 a849 1c60 d8a8
					 cc36 74f4 1144 b13b 77)0()/SubFileDecode filter cvx exec
					}
				stopped
					{
					 cleartomark
					 Adobe_CoolType_Utility/@recognizeCIDFont get
					 countdictstack dup array dictstack
					 exch 1 sub -1 0
						 {
						 2 copy get 3 index eq
								{1 index length exch sub 1 sub{end}repeat exit}
								{pop}
						 ifelse
						 }
					 for
					 pop pop
					 Adobe_CoolType_Utility/@eexecStartData get eexec
					}
					{cleartomark}
				ifelse
			}}
			{{
				Adobe_CoolType_Utility/@eexecStartData get eexec
			}}
		ifelse bind def
userdict/cid_extensions known
dup{cid_extensions/cid_UpdateDB known and}if
	{
	 cid_extensions
	 begin
	/cid_GetCIDSystemInfo
		{
		 1 index type/stringtype eq
			{exch cvn exch}
		 if
		 cid_extensions
			 begin
			 dup load 2 index known
				{
				 2 copy
				 cid_GetStatusInfo
				 dup null ne
					{
					 1 index load
					 3 index get
					 dup null eq
						 {pop pop cid_UpdateDB}
						 {
						 exch
						 1 index/Created get eq
							 {exch pop exch pop}
							 {pop cid_UpdateDB}
						 ifelse
						 }
					 ifelse
					}
					{pop cid_UpdateDB}
				 ifelse
				}
				{cid_UpdateDB}
			 ifelse
			 end
		}bind def
	 end
	}
if
ct_Level2?
	{end setglobal}
if
	/ct_UseNativeCapability? systemdict/composefont known def
	/ct_MakeOCF 35 dict def
	/ct_Vars 25 dict def
	/ct_GlyphDirProcs 6 dict def
	/ct_BuildCharDict 15 dict dup
		begin
		/charcode 2 string def
		/dst_string 1500 string def
		/nullstring()def
		/usewidths? true def
		end def
	ct_Level2?{setglobal}{pop}ifelse
	ct_GlyphDirProcs
		begin
		/GetGlyphDirectory
			{
			systemdict/languagelevel known
				{pop/CIDFont findresource/GlyphDirectory get}
				{
				1 index/CIDFont findresource/GlyphDirectory
				get dup type/dicttype eq
					{
					dup dup maxlength exch length sub 2 index lt
						{
						dup length 2 index add dict copy 2 index
						/CIDFont findresource/GlyphDirectory 2 index put
						}
					if
					}
				if
				exch pop exch pop
				}
			ifelse
			+
			}def
		/+
			{
			systemdict/languagelevel known
				{
				currentglobal false setglobal
				3 dict begin
					/vm exch def
				}
				{1 dict begin}
			ifelse
			/$ exch def
			systemdict/languagelevel known
				{
				vm setglobal
				/gvm currentglobal def
				$ gcheck setglobal
				}
			if
			?{$ begin}if
			}def
		/?{$ type/dicttype eq}def
		/|{
			userdict/Adobe_CoolType_Data known
				{
			Adobe_CoolType_Data/AddWidths? known
				{
				 currentdict Adobe_CoolType_Data
					begin
					 begin
						AddWidths?
								{
								Adobe_CoolType_Data/CC 3 index put
								?{def}{$ 3 1 roll put}ifelse
								CC charcode exch 1 index 0 2 index 256 idiv put
								1 index exch 1 exch 256 mod put
								stringwidth 2 array astore
								currentfont/Widths get exch CC exch put
								}
								{?{def}{$ 3 1 roll put}ifelse}
							ifelse
					end
				end
				}
				{?{def}{$ 3 1 roll put}ifelse}	ifelse
				}
				{?{def}{$ 3 1 roll put}ifelse}
			ifelse
			}def
		/!
			{
			?{end}if
			systemdict/languagelevel known
				{gvm setglobal}
			if
			end
			}def
		/:{string currentfile exch readstring pop}executeonly def
		end
	ct_MakeOCF
		begin
		/ct_cHexEncoding
		[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12
		/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25
		/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38
		/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B
		/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E
		/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71
		/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84
		/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97
		/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA
		/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD
		/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0
		/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3
		/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6
		/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def
		/ct_CID_STR_SIZE 8000 def
		/ct_mkocfStr100 100 string def
		/ct_defaultFontMtx[.001 0 0 .001 0 0]def
		/ct_1000Mtx[1000 0 0 1000 0 0]def
		/ct_raise{exch cvx exch errordict exch get exec stop}bind def
		/ct_reraise
			{cvx $error/errorname get(Error: )print dup(						 )cvs print
					errordict exch get exec stop
			}bind def
		/ct_cvnsi
			{
			1 index add 1 sub 1 exch 0 4 1 roll
				{
				2 index exch get
				exch 8 bitshift
				add
				}
			for
			exch pop
			}bind def
		/ct_GetInterval
			{
			Adobe_CoolType_Utility/ct_BuildCharDict get
				begin
				/dst_index 0 def
				dup dst_string length gt
					{dup string/dst_string exch def}
				if
				1 index ct_CID_STR_SIZE idiv
				/arrayIndex exch def
				2 index arrayIndex get
				2 index
				arrayIndex ct_CID_STR_SIZE mul
				sub
					{
					dup 3 index add 2 index length le
						{
						2 index getinterval
						dst_string dst_index 2 index putinterval
						length dst_index add/dst_index exch def
						exit
						}
						{
						1 index length 1 index sub
						dup 4 1 roll
						getinterval
						dst_string dst_index 2 index putinterval
						pop dup dst_index add/dst_index exch def
						sub
						/arrayIndex arrayIndex 1 add def
						2 index dup length arrayIndex gt
							 {arrayIndex get}
							 {
							 pop
							 exit
							 }
						ifelse
						0
						}
					ifelse
					}
				loop
				pop pop pop
				dst_string 0 dst_index getinterval
				end
			}bind def
		ct_Level2?
			{
			/ct_resourcestatus
			currentglobal mark true setglobal
				{/unknowninstancename/Category resourcestatus}
			stopped
				{cleartomark setglobal true}
				{cleartomark currentglobal not exch setglobal}
			ifelse
				{
					{
					mark 3 1 roll/Category findresource
						begin
						ct_Vars/vm currentglobal put
						({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec
							{cleartomark false}
							{{3 2 roll pop true}{cleartomark false}ifelse}
						ifelse
						ct_Vars/vm get setglobal
						end
					}
				}
				{{resourcestatus}}
			ifelse bind def
			/CIDFont/Category ct_resourcestatus
				{pop pop}
				{
				currentglobal true setglobal
				/Generic/Category findresource
				dup length dict copy
				dup/InstanceType/dicttype put
				/CIDFont exch/Category defineresource pop
				setglobal
				}
			ifelse
			ct_UseNativeCapability?
				{
				/CIDInit/ProcSet findresource begin
				12 dict begin
				begincmap
				/CIDSystemInfo 3 dict dup begin
				 /Registry(Adobe)def
				 /Ordering(Identity)def
				 /Supplement 0 def
				end def
				/CMapName/Identity-H def
				/CMapVersion 1.000 def
				/CMapType 1 def
				1 begincodespacerange
				<0000><FFFF>
				endcodespacerange
				1 begincidrange
				<0000><FFFF>0
				endcidrange
				endcmap
				CMapName currentdict/CMap defineresource pop
				end
				end
				}
			if
			}
			{
			/ct_Category 2 dict begin
			/CIDFont 10 dict def
			/ProcSet	2 dict def
			currentdict
			end
			def
			/defineresource
				{
				ct_Category 1 index 2 copy known
					{
					get
					dup dup maxlength exch length eq
						{
						dup length 10 add dict copy
						ct_Category 2 index 2 index put
						}
					if
					3 index 3 index put
					pop exch pop
					}
					{pop pop/defineresource/undefined ct_raise}
				ifelse
				}bind def
			/findresource
				{
				ct_Category 1 index 2 copy known
					{
					get
					2 index 2 copy known
						{get 3 1 roll pop pop}
						{pop pop/findresource/undefinedresource ct_raise}
					ifelse
					}
					{pop pop/findresource/undefined ct_raise}
				ifelse
				}bind def
			/resourcestatus
				{
				ct_Category 1 index 2 copy known
					{
					get
					2 index known
					exch pop exch pop
						{
						0 -1 true
						}
						{
						false
						}
					ifelse
					}
					{pop pop/findresource/undefined ct_raise}
				ifelse
				}bind def
			/ct_resourcestatus/resourcestatus load def
			}
		ifelse
		/ct_CIDInit 2 dict
			begin
			/ct_cidfont_stream_init
				{
					{
					dup(Binary)eq
						{
						pop
						null
						currentfile
						ct_Level2?
							{
								{cid_BYTE_COUNT()/SubFileDecode filter}
							stopped
								{pop pop pop}
							if
							}
						if
						/readstring load
						exit
						}
					if
					dup(Hex)eq
						{
						pop
						currentfile
						ct_Level2?
							{
								{null exch/ASCIIHexDecode filter/readstring}
							stopped
								{pop exch pop(>)exch/readhexstring}
							if
							}
							{(>)exch/readhexstring}
						ifelse
						load
						exit
						}
					if
					/StartData/typecheck ct_raise
					}
				loop
				cid_BYTE_COUNT ct_CID_STR_SIZE le
					{
					2 copy cid_BYTE_COUNT string exch exec
					pop
					1 array dup
					3 -1 roll
					0 exch put
					}
					{
					cid_BYTE_COUNT ct_CID_STR_SIZE div ceiling cvi
					dup array exch 2 sub 0 exch 1 exch
						{
						2 copy
						5 index
						ct_CID_STR_SIZE
						string
						6 index exec
						pop
						put
						pop
						}
					for
					2 index
					cid_BYTE_COUNT ct_CID_STR_SIZE mod string
					3 index exec
					pop
					1 index exch
					1 index length 1 sub
					exch put
					}
				ifelse
				cid_CIDFONT exch/GlyphData exch put
				2 index null eq
					{
					pop pop pop
					}
					{
					pop/readstring load
					1 string exch
						{
						3 copy exec
						pop
						dup length 0 eq
							{
							pop pop pop pop pop
							true exit
							}
						if
						4 index
						eq
							{
							pop pop pop pop
							false exit
							}
						if
						}
					loop
					pop
					}
				ifelse
				}bind def
			/StartData
				{
				mark
					{
					currentdict
					dup/FDArray get 0 get/FontMatrix get
					0 get 0.001 eq
						{
						dup/CDevProc known not
							{
							/CDevProc 1183615869 internaldict/stdCDevProc 2 copy known
								{get}
								{
								pop pop
								{pop pop pop pop pop 0 -1000 7 index 2 div 880}
								}
							ifelse
							def
							}
						if
						}
						{
						/CDevProc
							{
							 pop pop pop pop pop
							 0
							 1 cid_temp/cid_CIDFONT get
							/FDArray get 0 get
							/FontMatrix get 0 get div
							 7 index 2 div
							 1 index 0.88 mul
							}def
						}
					ifelse
					/cid_temp 15 dict def
					cid_temp
						begin
						/cid_CIDFONT exch def
						3 copy pop
						dup/cid_BYTE_COUNT exch def 0 gt
							{
							ct_cidfont_stream_init
							FDArray
								{
								/Private get
								dup/SubrMapOffset known
									{
									begin
									/Subrs SubrCount array def
									Subrs
									SubrMapOffset
									SubrCount
									SDBytes
									ct_Level2?
										{
										currentdict dup/SubrMapOffset undef
										dup/SubrCount undef
										/SDBytes undef
										}
									if
									end
									/cid_SD_BYTES exch def
									/cid_SUBR_COUNT exch def
									/cid_SUBR_MAP_OFFSET exch def
									/cid_SUBRS exch def
									cid_SUBR_COUNT 0 gt
										{
										GlyphData cid_SUBR_MAP_OFFSET cid_SD_BYTES ct_GetInterval
										0 cid_SD_BYTES ct_cvnsi
										0 1 cid_SUBR_COUNT 1 sub
											{
											exch 1 index
											1 add
											cid_SD_BYTES mul cid_SUBR_MAP_OFFSET add
											GlyphData exch cid_SD_BYTES ct_GetInterval
											0 cid_SD_BYTES ct_cvnsi
											cid_SUBRS 4 2 roll
											GlyphData exch
											4 index
											1 index
											sub
											ct_GetInterval
											dup length string copy put
											}
										for
										pop
										}
									if
									}
									{pop}
								ifelse
								}
							forall
							}
						if
						cleartomark pop pop
						end
					CIDFontName currentdict/CIDFont defineresource pop
					end end
					}
				stopped
					{cleartomark/StartData ct_reraise}
				if
				}bind def
			currentdict
			end def
		/ct_saveCIDInit
			{
			/CIDInit/ProcSet ct_resourcestatus
				{true}
				{/CIDInitC/ProcSet ct_resourcestatus}
			ifelse
				{
				pop pop
				/CIDInit/ProcSet findresource
				ct_UseNativeCapability?
					{pop null}
					{/CIDInit ct_CIDInit/ProcSet defineresource pop}
				ifelse
				}
				{/CIDInit ct_CIDInit/ProcSet defineresource pop null}
			ifelse
			ct_Vars exch/ct_oldCIDInit exch put
			}bind def
		/ct_restoreCIDInit
			{
			ct_Vars/ct_oldCIDInit get dup null ne
				{/CIDInit exch/ProcSet defineresource pop}
				{pop}
			ifelse
			}bind def
		/ct_BuildCharSetUp
			{
			1 index
				begin
				CIDFont
					begin
					Adobe_CoolType_Utility/ct_BuildCharDict get
						begin
						/ct_dfCharCode exch def
						/ct_dfDict exch def
						CIDFirstByte ct_dfCharCode add
						dup CIDCount ge
							{pop 0}
						if
						/cid exch def
							{
							GlyphDirectory cid 2 copy known
								{get}
								{pop pop nullstring}
							ifelse
							dup length FDBytes sub 0 gt
								{
								dup
								FDBytes 0 ne
									{0 FDBytes ct_cvnsi}
									{pop 0}
								ifelse
								/fdIndex exch def
								dup length FDBytes sub FDBytes exch getinterval
								/charstring exch def
								exit
								}
								{
								pop
								cid 0 eq
									{/charstring nullstring def exit}
								if
								/cid 0 def
								}
							ifelse
							}
						loop
			}def
		/ct_SetCacheDevice
			{
			0 0 moveto
			dup stringwidth
			3 -1 roll
			true charpath
			pathbbox
			0 -1000
			7 index 2 div 880
			setcachedevice2
			0 0 moveto
			}def
		/ct_CloneSetCacheProc
			{
			1 eq
				{
				stringwidth
				pop -2 div -880
				0 -1000 setcharwidth
				moveto
				}
				{
				usewidths?
					{
					currentfont/Widths get cid
					2 copy known
						{get exch pop aload pop}
						{pop pop stringwidth}
					ifelse
					}
					{stringwidth}
				ifelse
				setcharwidth
				0 0 moveto
				}
			ifelse
			}def
		/ct_Type3ShowCharString
			{
			ct_FDDict fdIndex 2 copy known
				{get}
				{
				currentglobal 3 1 roll
				1 index gcheck setglobal
				ct_Type1FontTemplate dup maxlength dict copy
					begin
					FDArray fdIndex get
					dup/FontMatrix 2 copy known
						{get}
						{pop pop ct_defaultFontMtx}
					ifelse
					/FontMatrix exch dup length array copy def
					/Private get
					/Private exch def
					/Widths rootfont/Widths get def
					/CharStrings 1 dict dup/.notdef
						<d841272cf18f54fc13>dup length string copy put def
					currentdict
					end
				/ct_Type1Font exch definefont
				dup 5 1 roll put
				setglobal
				}
			ifelse
			dup/CharStrings get 1 index/Encoding get
			ct_dfCharCode get charstring put
			rootfont/WMode 2 copy known
				{get}
				{pop pop 0}
			ifelse
			exch
			1000 scalefont setfont
			ct_str1 0 ct_dfCharCode put
			ct_str1 exch ct_dfSetCacheProc
			ct_SyntheticBold
				{
				currentpoint
				ct_str1 show
				newpath
				moveto
				ct_str1 true charpath
				ct_StrokeWidth setlinewidth
				stroke
				}
				{ct_str1 show}
			ifelse
			}def
		/ct_Type4ShowCharString
			{
			ct_dfDict ct_dfCharCode charstring
			FDArray fdIndex get
			dup/FontMatrix get dup ct_defaultFontMtx ct_matrixeq not
				{ct_1000Mtx matrix concatmatrix concat}
				{pop}
			ifelse
			/Private get
			Adobe_CoolType_Utility/ct_Level2? get not
				{
				ct_dfDict/Private
				3 -1 roll
					{put}
				1183615869 internaldict/superexec get exec
				}
			if
			1183615869 internaldict
			Adobe_CoolType_Utility/ct_Level2? get
				{1 index}
				{3 index/Private get mark 6 1 roll}
			ifelse
			dup/RunInt known
				{/RunInt get}
				{pop/CCRun}
			ifelse
			get exec
			Adobe_CoolType_Utility/ct_Level2? get not
				{cleartomark}
			if
			}bind def
		/ct_BuildCharIncremental
			{
				{
				Adobe_CoolType_Utility/ct_MakeOCF get begin
				ct_BuildCharSetUp
				ct_ShowCharString
				}
			stopped
				{stop}
			if
			end
			end
			end
			end
			}bind def
		/BaseFontNameStr(BF00)def
		/ct_Type1FontTemplate 14 dict
			begin
			/FontType 1 def
			/FontMatrix [0.001 0 0 0.001 0 0]def
			/FontBBox [-250 -250 1250 1250]def
			/Encoding ct_cHexEncoding def
			/PaintType 0 def
			currentdict
			end def
		/BaseFontTemplate 11 dict
			begin
			/FontMatrix [0.001 0 0 0.001 0 0]def
			/FontBBox [-250 -250 1250 1250]def
			/Encoding ct_cHexEncoding def
			/BuildChar/ct_BuildCharIncremental load def
			ct_Clone?
				{
				/FontType 3 def
				/ct_ShowCharString/ct_Type3ShowCharString load def
				/ct_dfSetCacheProc/ct_CloneSetCacheProc load def
				/ct_SyntheticBold false def
				/ct_StrokeWidth 1 def
				}
				{
				/FontType 4 def
				/Private 1 dict dup/lenIV 4 put def
				/CharStrings 1 dict dup/.notdef<d841272cf18f54fc13>put def
				/PaintType 0 def
				/ct_ShowCharString/ct_Type4ShowCharString load def
				}
			ifelse
			/ct_str1 1 string def
			currentdict
			end def
		/BaseFontDictSize BaseFontTemplate length 5 add def
		/ct_matrixeq
			{
			true 0 1 5
				{
				dup 4 index exch get exch 3 index exch get eq and
				dup not
					{exit}
				if
				}
			for
			exch pop exch pop
			}bind def
		/ct_makeocf
			{
			15 dict
				begin
				exch/WMode exch def
				exch/FontName exch def
				/FontType 0 def
				/FMapType 2 def
			dup/FontMatrix known
				{dup/FontMatrix get/FontMatrix exch def}
				{/FontMatrix matrix def}
			ifelse
				/bfCount 1 index/CIDCount get 256 idiv 1 add
					dup 256 gt{pop 256}if def
				/Encoding
					256 array 0 1 bfCount 1 sub{2 copy dup put pop}for
					bfCount 1 255{2 copy bfCount put pop}for
					def
				/FDepVector bfCount dup 256 lt{1 add}if array def
				BaseFontTemplate BaseFontDictSize dict copy
					begin
					/CIDFont exch def
					CIDFont/FontBBox known
						{CIDFont/FontBBox get/FontBBox exch def}
					if
					CIDFont/CDevProc known
						{CIDFont/CDevProc get/CDevProc exch def}
					if
					currentdict
					end
				BaseFontNameStr 3(0)putinterval
				0 1 bfCount dup 256 eq{1 sub}if
					{
					FDepVector exch
					2 index BaseFontDictSize dict copy
						begin
						dup/CIDFirstByte exch 256 mul def
						FontType 3 eq
							{/ct_FDDict 2 dict def}
						if
						currentdict
						end
					1 index 16
					BaseFontNameStr 2 2 getinterval cvrs pop
					BaseFontNameStr exch definefont
					put
					}
				for
				ct_Clone?
					{/Widths 1 index/CIDFont get/GlyphDirectory get length dict def}
				if
				FontName
				currentdict
				end
			definefont
			ct_Clone?
				{
				gsave
				dup 1000 scalefont setfont
				ct_BuildCharDict
					begin
					/usewidths? false def
					currentfont/Widths get
						begin
						exch/CIDFont get/GlyphDirectory get
							{
							pop
							dup charcode exch 1 index 0 2 index 256 idiv put
							1 index exch 1 exch 256 mod put
							stringwidth 2 array astore def
							}
						forall
						end
					/usewidths? true def
					end
				grestore
				}
				{exch pop}
			ifelse
			}bind def
		currentglobal true setglobal
		/ct_ComposeFont
			{
			ct_UseNativeCapability?
				{				
				2 index/CMap ct_resourcestatus
					{pop pop exch pop}
					{
					/CIDInit/ProcSet findresource
						begin
						12 dict
							begin
							begincmap
							/CMapName 3 index def
							/CMapVersion 1.000 def
							/CMapType 1 def
							exch/WMode exch def
							/CIDSystemInfo 3 dict dup
								begin
								/Registry(Adobe)def
								/Ordering
								CMapName ct_mkocfStr100 cvs
								(Adobe-)search
									{
									pop pop
									(-)search
										{
										dup length string copy
										exch pop exch pop
										}
										{pop(Identity)}
									ifelse
									}
									{pop (Identity)}
								ifelse
								def
								/Supplement 0 def
								end def
							1 begincodespacerange
							<0000><FFFF>
							endcodespacerange
							1 begincidrange
							<0000><FFFF>0
							endcidrange
							endcmap
							CMapName currentdict/CMap defineresource pop
							end
						end
					}
				ifelse
				composefont
				}
				{
				3 2 roll pop
				0 get/CIDFont findresource
				ct_makeocf
				}
			ifelse
			}bind def
			setglobal
		/ct_MakeIdentity
			{
			ct_UseNativeCapability?
				{
				1 index/CMap ct_resourcestatus
					{pop pop}
					{
					/CIDInit/ProcSet findresource begin
					12 dict begin
					begincmap
					/CMapName 2 index def
					/CMapVersion 1.000 def
					/CMapType 1 def
					/CIDSystemInfo 3 dict dup
						begin
						/Registry(Adobe)def
						/Ordering
						CMapName ct_mkocfStr100 cvs
						(Adobe-)search
							{
							pop pop
							(-)search
								{dup length string copy exch pop exch pop}
								{pop(Identity)}
							ifelse
							}
							{pop(Identity)}
						ifelse
						def
						/Supplement 0 def
						end def
					1 begincodespacerange
					<0000><FFFF>
					endcodespacerange
					1 begincidrange
					<0000><FFFF>0
					endcidrange
					endcmap
					CMapName currentdict/CMap defineresource pop
					end
					end
					}
				ifelse
				composefont
				}
				{
				exch pop
				0 get/CIDFont findresource
				ct_makeocf
				}
			ifelse
			}bind def
		currentdict readonly pop
		end
	end
%%EndResource
setglobal
%%BeginResource: procset Adobe_CoolType_Utility_T42 1.0 0
%%Copyright: Copyright 1987-2004 Adobe Systems Incorporated.
%%Version: 1.0 0
userdict/ct_T42Dict 15 dict put
ct_T42Dict begin
/Is2015?
{
 version
 cvi
 2015
 ge
}bind def
/AllocGlyphStorage
{
 Is2015?
 {	
	pop
 }
 {
	{string}forall
 }ifelse
}bind def
/Type42DictBegin
{
25 dict begin
 /FontName exch def
 /CharStrings 256 dict 
begin
	 /.notdef 0 def
	 currentdict 
end def
 /Encoding exch def
 /PaintType 0 def
 /FontType 42 def
 /FontMatrix[1 0 0 1 0 0]def
 4 array astore cvx/FontBBox exch def
 /sfnts
}bind def
/Type42DictEnd 
{
 currentdict dup/FontName get exch definefont end
ct_T42Dict exch
dup/FontName get exch put
}bind def
/RD{string currentfile exch readstring pop}executeonly def
/PrepFor2015
{
Is2015?
{		 
	/GlyphDirectory 
	 16
	 dict def
	 sfnts 0 get
	 dup
	 2 index
	(glyx)
	 putinterval
	 2 index 
	(locx)
	 putinterval
	 pop
	 pop
}
{
	 pop
	 pop
}ifelse			
}bind def
/AddT42Char
{
Is2015?
{
	/GlyphDirectory get 
	begin
	def
	end
	pop
	pop
}
{
	/sfnts get
	4 index
	get
	3 index
 2 index
	putinterval
	pop
	pop
	pop
	pop
}ifelse
}bind def
/T0AddT42Mtx2
{
/CIDFont findresource/Metrics2 get begin def end
}bind def
end
%%EndResource
currentglobal true setglobal
%%BeginFile: MMFauxFont.prc
%%Copyright: Copyright 1987-2001 Adobe Systems Incorporated. 
%%All Rights Reserved.
userdict /ct_EuroDict 10 dict put
ct_EuroDict begin
/ct_CopyFont 
{
    { 1 index /FID ne {def} {pop pop} ifelse} forall
} def
/ct_GetGlyphOutline
{
   gsave
   initmatrix newpath
   exch findfont dup 
   length 1 add dict 
   begin 
		ct_CopyFont 
		/Encoding Encoding dup length array copy 
		dup
		4 -1 roll
		0 exch put   
		def
		currentdict
   end
   /ct_EuroFont exch definefont
   1000 scalefont setfont
   0 0 moveto
   [
       <00> stringwidth 
       <00> false charpath
       pathbbox
       [
       {/m cvx} {/l cvx} {/c cvx} {/cp cvx} pathforall
   grestore
   counttomark 8 add
}
def
/ct_MakeGlyphProc
{
   ] cvx
   /ct_PSBuildGlyph cvx
   ] cvx
} def
/ct_PSBuildGlyph 
{ 
 	gsave 
	8 -1 roll pop 
	7 1 roll 
        6 -2 roll ct_FontMatrix transform 6 2 roll
        4 -2 roll ct_FontMatrix transform 4 2 roll
        ct_FontMatrix transform 
	currentdict /PaintType 2 copy known {get 2 eq}{pop pop false} ifelse  
	dup  9 1 roll 
	{  
		currentdict /StrokeWidth 2 copy known  
		{   
			get 2 div   
			0 ct_FontMatrix dtransform pop
			5 1 roll  
			4 -1 roll 4 index sub   
			4 1 roll   
			3 -1 roll 4 index sub  
			3 1 roll   
			exch 4 index add exch  
			4 index add  
			5 -1 roll pop  
		}  
		{	 
			pop pop 
		}  
		ifelse  
	}       
    if  
	setcachedevice  
        ct_FontMatrix concat
        ct_PSPathOps begin 
		exec 
	end 
	{  
		currentdict /StrokeWidth 2 copy known  
			{ get }  
			{ pop pop 0 }  
  	    ifelse  
		setlinewidth stroke  
	}  
	{   
	    fill  
	}  
	ifelse  
    grestore
} def 
/ct_PSPathOps 4 dict dup begin 
	/m {moveto} def 
	/l {lineto} def 
	/c {curveto} def 
	/cp {closepath} def 
end 
def 
/ct_matrix1000 [1000 0 0 1000 0 0] def
/ct_AddGlyphProc  
{
   2 index findfont dup length 4 add dict 
   begin 
	ct_CopyFont 
	/CharStrings CharStrings dup length 1 add dict copy
      begin
         3 1 roll def  
         currentdict 
      end 
      def
      /ct_FontMatrix ct_matrix1000 FontMatrix matrix concatmatrix def
      /ct_PSBuildGlyph /ct_PSBuildGlyph load def
      /ct_PSPathOps /ct_PSPathOps load def
      currentdict
   end
   definefont pop
}
def
systemdict /languagelevel known
{
	/ct_AddGlyphToPrinterFont {
		2 copy
		ct_GetGlyphOutline 3 add -1 roll restore 
		ct_MakeGlyphProc 
		ct_AddGlyphProc
	} def
}
{
	/ct_AddGlyphToPrinterFont {
	    pop pop restore
		Adobe_CTFauxDict /$$$FONTNAME get
		/Euro
		Adobe_CTFauxDict /$$$SUBSTITUTEBASE get
		ct_EuroDict exch get
		ct_AddGlyphProc
	} def
} ifelse
/AdobeSansMM 
{ 
556 0 24 -19 541 703 
	{ 
	541 628 m 
	510 669 442 703 354 703 c 
	201 703 117 607 101 444 c 
	50 444 l 
	25 372 l 
	97 372 l 
	97 301 l 
	49 301 l 
	24 229 l 
	103 229 l 
	124 67 209 -19 350 -19 c 
	435 -19 501 25 509 32 c 
	509 131 l 
	492 105 417 60 343 60 c 
	267 60 204 127 197 229 c 
	406 229 l 
	430 301 l 
	191 301 l 
	191 372 l 
	455 372 l 
	479 444 l 
	194 444 l 
	201 531 245 624 348 624 c 
	433 624 484 583 509 534 c 
	cp 
	556 0 m 
	}
ct_PSBuildGlyph
} def
/AdobeSerifMM 
{ 
500 0 10 -12 484 692 
	{ 
	347 298 m 
	171 298 l 
	170 310 170 322 170 335 c 
	170 362 l 
	362 362 l 
	374 403 l 
	172 403 l 
	184 580 244 642 308 642 c 
	380 642 434 574 457 457 c 
	481 462 l 
	474 691 l 
	449 691 l 
	433 670 429 657 410 657 c 
	394 657 360 692 299 692 c 
	204 692 94 604 73 403 c 
	22 403 l 
	10 362 l 
	70 362 l 
	69 352 69 341 69 330 c 
	69 319 69 308 70 298 c 
	22 298 l 
	10 257 l 
	73 257 l 
	97 57 216 -12 295 -12 c 
	364 -12 427 25 484 123 c 
	458 142 l 
	425 101 384 37 316 37 c 
	256 37 189 84 173 257 c 
	335 257 l 
	cp 
	500 0 m 
	} 
ct_PSBuildGlyph 
} def 
end		
%%EndFile
setglobal
Adobe_CoolType_Core begin /$Oblique SetSubstituteStrategy end
%%BeginResource: procset Adobe_AGM_Image 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2006 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Image 71 dict dup begin put
/Adobe_AGM_Image_Id/Adobe_AGM_Image_1.0_0 def
/nd{
	null def
}bind def
/AGMIMG_&image nd
/AGMIMG_&colorimage nd
/AGMIMG_&imagemask nd
/AGMIMG_mbuf()def
/AGMIMG_ybuf()def
/AGMIMG_kbuf()def
/AGMIMG_c 0 def
/AGMIMG_m 0 def
/AGMIMG_y 0 def
/AGMIMG_k 0 def
/AGMIMG_tmp nd
/AGMIMG_imagestring0 nd
/AGMIMG_imagestring1 nd
/AGMIMG_imagestring2 nd
/AGMIMG_imagestring3 nd
/AGMIMG_imagestring4 nd
/AGMIMG_imagestring5 nd
/AGMIMG_cnt nd
/AGMIMG_fsave nd
/AGMIMG_colorAry nd
/AGMIMG_override nd
/AGMIMG_name nd
/AGMIMG_maskSource nd
/AGMIMG_flushfilters nd
/invert_image_samples nd
/knockout_image_samples	nd
/img nd
/sepimg nd
/devnimg nd
/idximg nd
/ds
{
	Adobe_AGM_Core begin
	Adobe_AGM_Image begin
	/AGMIMG_&image systemdict/image get def
	/AGMIMG_&imagemask systemdict/imagemask get def
	/colorimage where{
		pop
		/AGMIMG_&colorimage/colorimage ldf
	}if
	end
	end
}def
/ps
{
	Adobe_AGM_Image begin
	/AGMIMG_ccimage_exists{/customcolorimage where 
		{
			pop
			/Adobe_AGM_OnHost_Seps where
			{
			pop false
			}{
			/Adobe_AGM_InRip_Seps where
				{
				pop false
				}{
					true
				}ifelse
			}ifelse
			}{
			false
		}ifelse 
	}bdf
	level2{
		/invert_image_samples
		{
			Adobe_AGM_Image/AGMIMG_tmp Decode length ddf
			/Decode[Decode 1 get Decode 0 get]def
		}def
		/knockout_image_samples
		{
			Operator/imagemask ne{
				/Decode[1 1]def
			}if
		}def
	}{	
		/invert_image_samples
		{
			{1 exch sub}currenttransfer addprocs settransfer
		}def
		/knockout_image_samples
		{
			{pop 1}currenttransfer addprocs settransfer
		}def
	}ifelse
	/img/imageormask ldf
	/sepimg/sep_imageormask ldf
	/devnimg/devn_imageormask ldf
	/idximg/indexed_imageormask ldf
	/_ctype 7 def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
}def
/pt
{
	end
}def
/dt
{
}def
/AGMIMG_flushfilters
{
	dup type/arraytype ne
		{1 array astore}if
	dup 0 get currentfile ne
		{dup 0 get flushfile}if
		{
		dup type/filetype eq
			{
			dup status 1 index currentfile ne and
				{closefile}
				{pop}
			ifelse
			}{pop}ifelse
		}forall
}def
/AGMIMG_init_common
{
	currentdict/T known{/ImageType/T ldf currentdict/T undef}if
	currentdict/W known{/Width/W ldf currentdict/W undef}if
	currentdict/H known{/Height/H ldf currentdict/H undef}if
	currentdict/M known{/ImageMatrix/M ldf currentdict/M undef}if
	currentdict/BC known{/BitsPerComponent/BC ldf currentdict/BC undef}if
	currentdict/D known{/Decode/D ldf currentdict/D undef}if
	currentdict/DS known{/DataSource/DS ldf currentdict/DS undef}if
	currentdict/O known{
		/Operator/O load 1 eq{
			/imagemask
		}{
			/O load 2 eq{
				/image 
			}{
				/colorimage
			}ifelse
		}ifelse
		def
		currentdict/O undef
	}if
	currentdict/HSCI known{/HostSepColorImage/HSCI ldf currentdict/HSCI undef}if
	currentdict/MD known{/MultipleDataSources/MD ldf currentdict/MD undef}if
	currentdict/I known{/Interpolate/I ldf currentdict/I undef}if
	currentdict/SI known{/SkipImageProc/SI ldf currentdict/SI undef}if
	/DataSource load xcheck not{
		DataSource type/arraytype eq{
			DataSource 0 get type/filetype eq{
				/_Filters DataSource def
				currentdict/MultipleDataSources known not{
					/DataSource DataSource dup length 1 sub get def 
				}if
			}if
		}if
		currentdict/MultipleDataSources known not{
			/MultipleDataSources DataSource type/arraytype eq{
				DataSource length 1 gt
			}
			{false}ifelse def
		}if
	}if
	/NComponents Decode length 2 div def
	currentdict/SkipImageProc known not{/SkipImageProc{false}def}if
}bdf
/imageormask_sys
{
	begin
		AGMIMG_init_common
		save mark
		level2{
			currentdict
			Operator/imagemask eq{
				AGMIMG_&imagemask
			}{
				use_mask{
					process_mask AGMIMG_&image
				}{
					AGMIMG_&image
				}ifelse
			}ifelse
		}{
			Width Height
			Operator/imagemask eq{
				Decode 0 get 1 eq Decode 1 get 0 eq	and
				ImageMatrix/DataSource load
				AGMIMG_&imagemask
			}{
				BitsPerComponent ImageMatrix/DataSource load
				AGMIMG_&image
			}ifelse
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
		cleartomark restore
	end
}def
/overprint_plate
{
	currentoverprint{
		0 get dup type/nametype eq{
			dup/DeviceGray eq{
				pop AGMCORE_black_plate not
			}{
				/DeviceCMYK eq{
					AGMCORE_is_cmyk_sep not
				}if
			}ifelse
		}{
			false exch
			{
				 AGMOHS_sepink eq or
			}forall
			not
		}ifelse
	}{
		pop false
	}ifelse
}def
/process_mask
{
	level3{
		dup begin
		/ImageType 1 def
		end
		4 dict begin
			/DataDict exch def
			/ImageType 3 def
			/InterleaveType 3 def
			/MaskDict 9 dict begin
				/ImageType 1 def
				/Width DataDict dup/MaskWidth known{/MaskWidth}{/Width}ifelse get def
				/Height DataDict dup/MaskHeight known{/MaskHeight}{/Height}ifelse get def
				/ImageMatrix[Width 0 0 Height neg 0 Height]def
				/NComponents 1 def
				/BitsPerComponent 1 def
				/Decode DataDict dup/MaskD known{/MaskD}{[1 0]}ifelse get def
				/DataSource Adobe_AGM_Core/AGMIMG_maskSource get def
			currentdict end def
		currentdict end
	}if
}def
/use_mask
{
	dup/Mask known	{dup/Mask get}{false}ifelse
}def
/imageormask
{
	begin
		AGMIMG_init_common
		SkipImageProc{
			currentdict consumeimagedata
		}
		{
			save mark
			level2 AGMCORE_host_sep not and{
				currentdict
				Operator/imagemask eq DeviceN_PS2 not and{
					imagemask
				}{
					AGMCORE_in_rip_sep currentoverprint and currentcolorspace 0 get/DeviceGray eq and{
						[/Separation/Black/DeviceGray{}]setcolorspace
						/Decode[Decode 1 get Decode 0 get]def
					}if
					use_mask{
						process_mask image
					}{
						DeviceN_NoneName DeviceN_PS2 Indexed_DeviceN level3 not and or or AGMCORE_in_rip_sep and 
						{
							Names convert_to_process not{
								2 dict begin
								/imageDict xdf
								/names_index 0 def
								gsave
								imageDict write_image_file{
									Names{
										dup(None)ne{
											[/Separation 3 -1 roll/DeviceGray{1 exch sub}]setcolorspace
											Operator imageDict read_image_file
											names_index 0 eq{true setoverprint}if
											/names_index names_index 1 add def
										}{
											pop
										}ifelse
									}forall
									close_image_file
								}if
								grestore
								end
							}{
								Operator/imagemask eq{
									imagemask
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/imagemask eq{
								imagemask
							}{
								image
							}ifelse
						}ifelse
					}ifelse
				}ifelse
			}{
				Width Height
				Operator/imagemask eq{
					Decode 0 get 1 eq Decode 1 get 0 eq	and
					ImageMatrix/DataSource load
					/Adobe_AGM_OnHost_Seps where{
						pop imagemask
					}{
						currentgray 1 ne{
							currentdict imageormask_sys
						}{
							currentoverprint not{
								1 AGMCORE_&setgray
								currentdict imageormask_sys
							}{
								currentdict ignoreimagedata
							}ifelse				 		
						}ifelse
					}ifelse
				}{
					BitsPerComponent ImageMatrix 
					MultipleDataSources{
						0 1 NComponents 1 sub{
							DataSource exch get
						}for
					}{
						/DataSource load
					}ifelse
					Operator/colorimage eq{
						AGMCORE_host_sep{
							MultipleDataSources level2 or NComponents 4 eq and{
								AGMCORE_is_cmyk_sep{
									MultipleDataSources{
										/DataSource DataSource 0 get xcheck
											{
											[
											DataSource 0 get/exec cvx
											DataSource 1 get/exec cvx
											DataSource 2 get/exec cvx
											DataSource 3 get/exec cvx
											/AGMCORE_get_ink_data cvx
											]cvx
											}{
											DataSource aload pop AGMCORE_get_ink_data
											}ifelse def
									}{
										/DataSource 
										Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
										/DataSource load
										filter_cmyk 0()/SubFileDecode filter def
									}ifelse
									/Decode[Decode 0 get Decode 1 get]def
									/MultipleDataSources false def
									/NComponents 1 def
									/Operator/image def
									invert_image_samples
						 			1 AGMCORE_&setgray
									currentdict imageormask_sys
								}{
									currentoverprint not Operator/imagemask eq and{
 			 							1 AGMCORE_&setgray
 			 							currentdict imageormask_sys
 			 						}{
 			 							currentdict ignoreimagedata
 			 						}ifelse
								}ifelse
							}{	
								MultipleDataSources NComponents AGMIMG_&colorimage						
							}ifelse
						}{
							true NComponents colorimage
						}ifelse
					}{
						Operator/image eq{
							AGMCORE_host_sep{
								/DoImage true def
								currentdict/HostSepColorImage known{HostSepColorImage not}{false}ifelse
								{
									AGMCORE_black_plate not Operator/imagemask ne and{
										/DoImage false def
										currentdict ignoreimagedata
					 				}if
								}if
						 		1 AGMCORE_&setgray
								DoImage
									{currentdict imageormask_sys}if
							}{
								use_mask{
									process_mask image
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/knockout eq{
								pop pop pop pop pop
								currentcolorspace overprint_plate not{
									knockout_unitsq
								}if
							}if
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			cleartomark restore
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/sep_imageormask
{
 	/sep_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_avoid_L2_sep_space{
			/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
		}if
 		AGMIMG_ccimage_exists 
		MappedCSA 0 get/DeviceCMYK eq and
		currentdict/Components known and 
		Name()ne and 
		Name(All)ne and 
		Operator/image eq and
		AGMCORE_producing_seps not and
		level2 not and
		{
			Width Height BitsPerComponent ImageMatrix 
			[
			/DataSource load/exec cvx
			{
				0 1 2 index length 1 sub{
					1 index exch
					2 copy get 255 xor put
				}for
			}/exec cvx
			]cvx bind
			MappedCSA 0 get/DeviceCMYK eq{
				Components aload pop
			}{
				0 0 0 Components aload pop 1 exch sub
			}ifelse
			Name findcmykcustomcolor
			customcolorimage
		}{
			AGMCORE_producing_seps not{
				level2{
 					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne AGMCORE_avoid_L2_sep_space not and currentcolorspace 0 get/Separation ne and{
						[/Separation Name MappedCSA sep_proc_name exch dup 0 get 15 string cvs(/Device)anchorsearch{pop pop 0 get}{pop}ifelse exch load]setcolorspace_opt
						/sep_tint AGMCORE_gget setcolor
					}if
					currentdict imageormask
				}{
					currentdict
					Operator/imagemask eq{
						imageormask
					}{
						sep_imageormask_lev1
					}ifelse
				}ifelse
 			}{
				AGMCORE_host_sep{
					Operator/knockout eq{
						currentdict/ImageMatrix get concat
						knockout_unitsq
					}{
						currentgray 1 ne{
 							AGMCORE_is_cmyk_sep Name(All)ne and{
 								level2{
 									Name AGMCORE_IsSeparationAProcessColor 
 									{
 										Operator/imagemask eq{
 											//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
 												/sep_tint AGMCORE_gget 1 exch sub AGMCORE_&setcolor
 											}if
 										}{
											invert_image_samples
 										}ifelse
	 								}{
	 									//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
	 										[/Separation Name[/DeviceGray]
	 										{
	 											sep_colorspace_proc AGMCORE_get_ink_data
												1 exch sub
	 										}bind
											]AGMCORE_&setcolorspace
											/sep_tint AGMCORE_gget AGMCORE_&setcolor
										}if
 									}ifelse
 									currentdict imageormask_sys
	 							}{
	 								currentdict
									Operator/imagemask eq{
										imageormask_sys
									}{
										sep_image_lev1_sep
									}ifelse
	 							}ifelse
 							}{
 								Operator/imagemask ne{
									invert_image_samples
 								}if
		 						currentdict imageormask_sys
 							}ifelse
 						}{
 							currentoverprint not Name(All)eq or Operator/imagemask eq and{
								currentdict imageormask_sys 
								}{
								currentoverprint not
									{
 									gsave 
 									knockout_unitsq
 									grestore
									}if
								currentdict consumeimagedata 
		 					}ifelse
 						}ifelse
		 			}ifelse
 				}{
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
						currentcolorspace 0 get/Separation ne{
							[/Separation Name MappedCSA sep_proc_name exch 0 get exch load]setcolorspace_opt
							/sep_tint AGMCORE_gget setcolor
						}if
					}if
					currentoverprint 
					MappedCSA 0 get/DeviceCMYK eq and 
					Name AGMCORE_IsSeparationAProcessColor not and
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{Name inRip_spot_has_ink not and}{false}ifelse 
					Name(All)ne and{
						imageormask_l2_overprint
					}{
						currentdict imageormask
 					}ifelse
				}ifelse
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
}def
/colorSpaceElemCnt
{
	mark currentcolor counttomark dup 2 add 1 roll cleartomark
}bdf
/devn_sep_datasource
{
	1 dict begin
	/dataSource xdf
	[
		0 1 dataSource length 1 sub{
			dup currentdict/dataSource get/exch cvx/get cvx/exec cvx
			/exch cvx names_index/ne cvx[/pop cvx]cvx/if cvx
		}for
	]cvx bind
	end
}bdf		
/devn_alt_datasource
{
	11 dict begin
	/convProc xdf
	/origcolorSpaceElemCnt xdf
	/origMultipleDataSources xdf
	/origBitsPerComponent xdf
	/origDecode xdf
	/origDataSource xdf
	/dsCnt origMultipleDataSources{origDataSource length}{1}ifelse def
	/DataSource origMultipleDataSources
		{
			[
			BitsPerComponent 8 idiv origDecode length 2 idiv mul string
			0 1 origDecode length 2 idiv 1 sub
				{
				dup 7 mul 1 add index exch dup BitsPerComponent 8 idiv mul exch
				origDataSource exch get 0()/SubFileDecode filter
				BitsPerComponent 8 idiv string/readstring cvx/pop cvx/putinterval cvx
				}for 
			]bind cvx
		}{origDataSource}ifelse 0()/SubFileDecode filter def		
	[
		origcolorSpaceElemCnt string
		0 2 origDecode length 2 sub
			{
			dup origDecode exch get dup 3 -1 roll 1 add origDecode exch get exch sub 2 BitsPerComponent exp 1 sub div
			1 BitsPerComponent 8 idiv{DataSource/read cvx/not cvx{0}/if cvx/mul cvx}repeat/mul cvx/add cvx
			}for
		/convProc load/exec cvx
		origcolorSpaceElemCnt 1 sub -1 0
			{
			/dup cvx 2/add cvx/index cvx
			3 1/roll cvx/exch cvx 255/mul cvx/cvi cvx/put cvx
			}for
	]bind cvx 0()/SubFileDecode filter
	end
}bdf
/devn_imageormask
{
 	/devicen_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	2 dict begin
	dup
	/srcDataStrs[3 -1 roll begin
		AGMIMG_init_common
		currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
		{
			Width Decode length 2 div mul cvi
			{
				dup 65535 gt{1 add 2 div cvi}{exit}ifelse
			}loop
			string
		}repeat
		end]def
	/dstDataStr srcDataStrs 0 get length string def
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_producing_seps not{
			level3 not{
				Operator/imagemask ne{
					/DataSource[[
						DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
						colorSpaceElemCnt/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
						devn_alt_datasource 1/string cvx/readstring cvx/pop cvx]cvx colorSpaceElemCnt 1 sub{dup}repeat]def				
					/MultipleDataSources true def
					/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				}if
			}if
			currentdict imageormask
 		}{
			AGMCORE_host_sep{
				Names convert_to_process{
					CSA get_csa_by_name 0 get/DeviceCMYK eq{
						/DataSource
							Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
							DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
							4/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
							devn_alt_datasource
						filter_cmyk 0()/SubFileDecode filter def
						/MultipleDataSources false def
						/Decode[1 0]def
						/DeviceGray setcolorspace
			 			currentdict imageormask_sys
 					}{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate{
							/DataSource
								DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
								CSA get_csa_by_name 0 get/DeviceRGB eq{3}{1}ifelse/devicen_colorspace_dict AGMCORE_gget/TintTransform get
								devn_alt_datasource
							/MultipleDataSources false def
							/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				 			currentdict imageormask_sys
				 		}{
	 						gsave 
	 						knockout_unitsq
	 						grestore
							currentdict consumeimagedata 
						}ifelse
 					}ifelse
				}
				{	
					/devicen_colorspace_dict AGMCORE_gget/names_index known{
	 					Operator/imagemask ne{
	 						MultipleDataSources{
		 						/DataSource[DataSource devn_sep_datasource/exec cvx]cvx def
								/MultipleDataSources false def
	 						}{
								/DataSource/DataSource load dstDataStr srcDataStrs 0 get filter_devn def
	 						}ifelse
							invert_image_samples
	 					}if
			 			currentdict imageormask_sys
	 				}{
	 					currentoverprint not Operator/imagemask eq and{
							currentdict imageormask_sys 
							}{
							currentoverprint not
								{
	 							gsave 
	 							knockout_unitsq
	 							grestore
								}if
							currentdict consumeimagedata 
			 			}ifelse
	 				}ifelse
	 			}ifelse
 			}{
				currentdict imageormask
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
	end
}def
/imageormask_l2_overprint
{
	currentdict
	currentcmykcolor add add add 0 eq{
		currentdict consumeimagedata
	}{
		level3{			
			currentcmykcolor 
			/AGMIMG_k xdf 
			/AGMIMG_y xdf 
			/AGMIMG_m xdf 
			/AGMIMG_c xdf
			Operator/imagemask eq{
				[/DeviceN[
				AGMIMG_c 0 ne{/Cyan}if
				AGMIMG_m 0 ne{/Magenta}if
				AGMIMG_y 0 ne{/Yellow}if
				AGMIMG_k 0 ne{/Black}if
				]/DeviceCMYK{}]setcolorspace
				AGMIMG_c 0 ne{AGMIMG_c}if
				AGMIMG_m 0 ne{AGMIMG_m}if
				AGMIMG_y 0 ne{AGMIMG_y}if
				AGMIMG_k 0 ne{AGMIMG_k}if
				setcolor			
			}{	
				/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
				[/Indexed 				
					[
						/DeviceN[
							AGMIMG_c 0 ne{/Cyan}if
							AGMIMG_m 0 ne{/Magenta}if
							AGMIMG_y 0 ne{/Yellow}if
							AGMIMG_k 0 ne{/Black}if
						]
						/DeviceCMYK{
							AGMIMG_k 0 eq{0}if
							AGMIMG_y 0 eq{0 exch}if
							AGMIMG_m 0 eq{0 3 1 roll}if
							AGMIMG_c 0 eq{0 4 1 roll}if						
						}
					]
					255
					{
						255 div 
						mark exch
						dup	dup dup
						AGMIMG_k 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 1 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_y 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 2 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_m 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 3 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_c 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						counttomark 1 add -1 roll pop
					}
				]setcolorspace
			}ifelse
			imageormask_sys
		}{
	write_image_file{
		currentcmykcolor
		0 ne{
			[/Separation/Black/DeviceGray{}]setcolorspace
			gsave
			/Black
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 1 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Yellow/DeviceGray{}]setcolorspace
			gsave
			/Yellow
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 2 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Magenta/DeviceGray{}]setcolorspace
			gsave
			/Magenta
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 3 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Cyan/DeviceGray{}]setcolorspace
			gsave
			/Cyan 
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
				close_image_file
			}{
				imageormask
			}ifelse
		}ifelse
	}ifelse
}def
/indexed_imageormask
{
	begin
		AGMIMG_init_common
		save mark 
 		currentdict
 		AGMCORE_host_sep{
			Operator/knockout eq{
				/indexed_colorspace_dict AGMCORE_gget dup/CSA known{
					/CSA get get_csa_by_name
				}{
					/Names get
				}ifelse
				overprint_plate not{
					knockout_unitsq
				}if
			}{
				Indexed_DeviceN{
					/devicen_colorspace_dict AGMCORE_gget dup/names_index known exch/Names get convert_to_process or{
			 			indexed_image_lev2_sep
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}{
		 			AGMCORE_is_cmyk_sep{
						Operator/imagemask eq{
							imageormask_sys
						}{
							level2{
								indexed_image_lev2_sep
							}{
								indexed_image_lev1_sep
							}ifelse
						}ifelse
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}ifelse
			}ifelse
 		}{
			level2{
				Indexed_DeviceN{
					/indexed_colorspace_dict AGMCORE_gget begin
				}{
					/indexed_colorspace_dict AGMCORE_gget dup null ne
					{
						begin
						currentdict/CSDBase known{CSDBase/CSD get_res/MappedCSA get}{CSA}ifelse
						get_csa_by_name 0 get/DeviceCMYK eq ps_level 3 ge and ps_version 3015.007 lt and
						AGMCORE_in_rip_sep and{
							[/Indexed[/DeviceN[/Cyan/Magenta/Yellow/Black]/DeviceCMYK{}]HiVal Lookup]
							setcolorspace
						}if
						end
					}
					{pop}ifelse
				}ifelse
				imageormask
				Indexed_DeviceN{
					end
				}if
			}{
				Operator/imagemask eq{
					imageormask
				}{
					indexed_imageormask_lev1
				}ifelse
			}ifelse
 		}ifelse
		cleartomark restore
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/indexed_image_lev2_sep
{
	/indexed_colorspace_dict AGMCORE_gget begin
	begin
		Indexed_DeviceN not{
			currentcolorspace 
			dup 1/DeviceGray put
			dup 3
			currentcolorspace 2 get 1 add string
			0 1 2 3 AGMCORE_get_ink_data 4 currentcolorspace 3 get length 1 sub
			{
			dup 4 idiv exch currentcolorspace 3 get exch get 255 exch sub 2 index 3 1 roll put
			}for 
			put	setcolorspace
		}if
		currentdict 
		Operator/imagemask eq{
			AGMIMG_&imagemask
		}{
			use_mask{
				process_mask AGMIMG_&image
			}{
				AGMIMG_&image
			}ifelse
		}ifelse
	end end
}def
 /OPIimage
 {
 	dup type/dicttype ne{
 		10 dict begin
 			/DataSource xdf
 			/ImageMatrix xdf
 			/BitsPerComponent xdf
 			/Height xdf
 			/Width xdf
 			/ImageType 1 def
 			/Decode[0 1 def]
 			currentdict
 		end
 	}if
 	dup begin
 		/NComponents 1 cdndf
 		/MultipleDataSources false cdndf
 		/SkipImageProc{false}cdndf
 		/Decode[
 				0 
 				currentcolorspace 0 get/Indexed eq{
 					2 BitsPerComponent exp 1 sub
 				}{
 					1
 				}ifelse
 		]cdndf
 		/Operator/image cdndf
 	end
 	/sep_colorspace_dict AGMCORE_gget null eq{
 		imageormask
 	}{
 		gsave
 		dup begin invert_image_samples end
 		sep_imageormask
 		grestore
 	}ifelse
 }def
/cachemask_level2
{
	3 dict begin
	/LZWEncode filter/WriteFilter xdf
	/readBuffer 256 string def
	/ReadFilter
		currentfile
		0(%EndMask)/SubFileDecode filter
		/ASCII85Decode filter
		/RunLengthDecode filter
	def
	{
		ReadFilter readBuffer readstring exch
		WriteFilter exch writestring
		not{exit}if
	}loop
	WriteFilter closefile
	end
}def
/spot_alias
{
	/mapto_sep_imageormask 
	{
		dup type/dicttype ne{
			12 dict begin
				/ImageType 1 def
				/DataSource xdf
				/ImageMatrix xdf
				/BitsPerComponent xdf
				/Height xdf
				/Width xdf
				/MultipleDataSources false def
		}{
			begin
		}ifelse
				/Decode[/customcolor_tint AGMCORE_gget 0]def
				/Operator/image def
				/SkipImageProc{false}def
				currentdict 
			end
		sep_imageormask
	}bdf
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_colorAry xddf
		/customcolor_tint AGMCORE_gget
		<<
			/Name AGMIMG_colorAry 4 get
			/CSA[/DeviceCMYK]
			/TintMethod/Subtractive
			/TintProc null
			/MappedCSA null
			/NComponents 4 
			/Components[AGMIMG_colorAry aload pop pop]
		>>
		setsepcolorspace
		mapto_sep_imageormask
	}ndf
	Adobe_AGM_Image/AGMIMG_&customcolorimage/customcolorimage load put
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_override false put
		current_spot_alias{dup 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/customcolor_tint AGMCORE_gget exch setsepcolorspace
			pop
			mapto_sep_imageormask
			true set_spot_alias
		}{
			//Adobe_AGM_Image/AGMIMG_&customcolorimage get exec
		}ifelse			
	}bdf
}def
/snap_to_device
{
	6 dict begin
	matrix currentmatrix
	dup 0 get 0 eq 1 index 3 get 0 eq and
	1 index 1 get 0 eq 2 index 2 get 0 eq and or exch pop
	{
		1 1 dtransform 0 gt exch 0 gt/AGMIMG_xSign? exch def/AGMIMG_ySign? exch def
		0 0 transform
		AGMIMG_ySign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		AGMIMG_xSign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		itransform/AGMIMG_llY exch def/AGMIMG_llX exch def
		1 1 transform
		AGMIMG_ySign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		AGMIMG_xSign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		itransform/AGMIMG_urY exch def/AGMIMG_urX exch def			
		[AGMIMG_urX AGMIMG_llX sub 0 0 AGMIMG_urY AGMIMG_llY sub AGMIMG_llX AGMIMG_llY]concat
	}{
	}ifelse
	end
}def
level2 not{
	/colorbuf
	{
		0 1 2 index length 1 sub{
			dup 2 index exch get 
			255 exch sub 
			2 index 
			3 1 roll 
			put
		}for
	}def
	/tint_image_to_color
	{
		begin
			Width Height BitsPerComponent ImageMatrix 
			/DataSource load
		end
		Adobe_AGM_Image begin
			/AGMIMG_mbuf 0 string def
			/AGMIMG_ybuf 0 string def
			/AGMIMG_kbuf 0 string def
			{
				colorbuf dup length AGMIMG_mbuf length ne
					{
					dup length dup dup
					/AGMIMG_mbuf exch string def
					/AGMIMG_ybuf exch string def
					/AGMIMG_kbuf exch string def
					}if
				dup AGMIMG_mbuf copy AGMIMG_ybuf copy AGMIMG_kbuf copy pop
			}
			addprocs
			{AGMIMG_mbuf}{AGMIMG_ybuf}{AGMIMG_kbuf}true 4 colorimage	
		end
	}def			
	/sep_imageormask_lev1
	{
		begin
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{
					255 mul round cvi GrayLookup exch get
				}currenttransfer addprocs settransfer
				currentdict imageormask
			}{
				/sep_colorspace_dict AGMCORE_gget/Components known{
					MappedCSA 0 get/DeviceCMYK eq{
						Components aload pop
					}{
						0 0 0 Components aload pop 1 exch sub
					}ifelse
					Adobe_AGM_Image/AGMIMG_k xddf 
					Adobe_AGM_Image/AGMIMG_y xddf 
					Adobe_AGM_Image/AGMIMG_m xddf 
					Adobe_AGM_Image/AGMIMG_c xddf 
					AGMIMG_y 0.0 eq AGMIMG_m 0.0 eq and AGMIMG_c 0.0 eq and{
						{AGMIMG_k mul 1 exch sub}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						currentcolortransfer
						{AGMIMG_k mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_y mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_m mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_c mul 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer
						currentdict tint_image_to_color
					}ifelse
				}{
					MappedCSA 0 get/DeviceGray eq{
						{255 mul round cvi ColorLookup exch get 0 get}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						MappedCSA 0 get/DeviceCMYK eq{
							currentcolortransfer
							{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}{
							currentcolortransfer
							{pop 1}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}ifelse
					}ifelse
				}ifelse
			}ifelse
		end
	}def
	/sep_image_lev1_sep
	{
		begin
			/sep_colorspace_dict AGMCORE_gget/Components known{
				Components aload pop
				Adobe_AGM_Image/AGMIMG_k xddf 
				Adobe_AGM_Image/AGMIMG_y xddf 
				Adobe_AGM_Image/AGMIMG_m xddf 
				Adobe_AGM_Image/AGMIMG_c xddf 
				{AGMIMG_c mul 1 exch sub}
				{AGMIMG_m mul 1 exch sub}
				{AGMIMG_y mul 1 exch sub}
				{AGMIMG_k mul 1 exch sub}
			}{
				{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}
			}ifelse
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end
	}def
	/indexed_imageormask_lev1
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			currentdict
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{HiVal mul round cvi GrayLookup exch get HiVal div}currenttransfer addprocs settransfer
				imageormask
			}{
				MappedCSA 0 get/DeviceGray eq{
					{HiVal mul round cvi Lookup exch get HiVal div}currenttransfer addprocs settransfer
					imageormask
				}{
					MappedCSA 0 get/DeviceCMYK eq{
						currentcolortransfer
						{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}{
						currentcolortransfer
						{pop 1}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 2 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 1 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 		Lookup exch get HiVal div}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}ifelse
				}ifelse
			}ifelse
		end end
	}def
	/indexed_image_lev1_sep
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end end
	}def
}if
end
systemdict/setpacking known
{setpacking}if
%%EndResource
currentdict Adobe_AGM_Utils eq {end} if
%%EndProlog
%%BeginSetup
Adobe_AGM_Utils begin
2 2010 Adobe_AGM_Core/ds gx
Adobe_CoolType_Core/ds get exec
Adobe_AGM_Image/ds gx
currentdict Adobe_AGM_Utils eq {end} if
%%EndSetup
%%Page: 1 1
%%EndPageComments
%%BeginPageSetup
%ADOBeginClientInjection: PageSetup Start "AI11EPS"
%AI12_RMC_Transparency: Balance=75 RasterRes=300 GradRes=150 Text=0 Stroke=1 Clip=1 OP=0
%ADOEndClientInjection: PageSetup Start "AI11EPS"
Adobe_AGM_Utils begin
Adobe_AGM_Core/ps gx
Adobe_AGM_Utils/capture_cpd gx
Adobe_CoolType_Core/ps get exec
Adobe_AGM_Image/ps gx
%ADOBeginClientInjection: PageSetup End "AI11EPS"
/currentdistillerparams where{pop currentdistillerparams /CoreDistVersion get 5000 lt} {true} ifelse{ userdict /AI11_PDFMark5 /cleartomark load putuserdict /AI11_ReadMetadata_PDFMark5 {flushfile cleartomark } bind put}{ userdict /AI11_PDFMark5 /pdfmark load putuserdict /AI11_ReadMetadata_PDFMark5 {/PUT pdfmark} bind put } ifelse[/NamespacePush AI11_PDFMark5[/_objdef {ai_metadata_stream_123} /type /stream /OBJ AI11_PDFMark5[{ai_metadata_stream_123}currentfile 0 (%  &&end XMP packet marker&&)/SubFileDecode filter AI11_ReadMetadata_PDFMark5<?xpacket begin="﻿" id="W5M0MpCehiHzreSzNTczkc9d"?>
<x:xmpmeta xmlns:x="adobe:ns:meta/" x:xmptk="Adobe XMP Core 5.6-c011 79.156289, 2014/03/31-23:39:12        ">
   <rdf:RDF xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#">
      <rdf:Description rdf:about=""
            xmlns:dc="http://purl.org/dc/elements/1.1/"
            xmlns:xmp="http://ns.adobe.com/xap/1.0/"
            xmlns:xmpGImg="http://ns.adobe.com/xap/1.0/g/img/"
            xmlns:xmpMM="http://ns.adobe.com/xap/1.0/mm/"
            xmlns:stRef="http://ns.adobe.com/xap/1.0/sType/ResourceRef#"
            xmlns:stEvt="http://ns.adobe.com/xap/1.0/sType/ResourceEvent#"
            xmlns:illustrator="http://ns.adobe.com/illustrator/1.0/"
            xmlns:xmpTPg="http://ns.adobe.com/xap/1.0/t/pg/"
            xmlns:stDim="http://ns.adobe.com/xap/1.0/sType/Dimensions#"
            xmlns:xmpG="http://ns.adobe.com/xap/1.0/g/"
            xmlns:pdf="http://ns.adobe.com/pdf/1.3/">
         <dc:format>application/postscript</dc:format>
         <dc:title>
            <rdf:Alt>
               <rdf:li xml:lang="x-default">Animals_8</rdf:li>
            </rdf:Alt>
         </dc:title>
         <xmp:CreatorTool>Adobe Illustrator CC 2014 (Windows)</xmp:CreatorTool>
         <xmp:CreateDate>2015-04-04T01:42:42+03:00</xmp:CreateDate>
         <xmp:ModifyDate>2015-04-04T01:42:42+03:00</xmp:ModifyDate>
         <xmp:MetadataDate>2015-04-04T01:42:42+03:00</xmp:MetadataDate>
         <xmp:Thumbnails>
            <rdf:Alt>
               <rdf:li rdf:parseType="Resource">
                  <xmpGImg:width>256</xmpGImg:width>
                  <xmpGImg:height>256</xmpGImg:height>
                  <xmpGImg:format>JPEG</xmpGImg:format>
                  <xmpGImg:image>/9j/4AAQSkZJRgABAgEASABIAAD/7QAsUGhvdG9zaG9wIDMuMAA4QklNA+0AAAAAABAASAAAAAEA&#xA;AQBIAAAAAQAB/+4ADkFkb2JlAGTAAAAAAf/bAIQABgQEBAUEBgUFBgkGBQYJCwgGBggLDAoKCwoK&#xA;DBAMDAwMDAwQDA4PEA8ODBMTFBQTExwbGxscHx8fHx8fHx8fHwEHBwcNDA0YEBAYGhURFRofHx8f&#xA;Hx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8f/8AAEQgBAAEAAwER&#xA;AAIRAQMRAf/EAaIAAAAHAQEBAQEAAAAAAAAAAAQFAwIGAQAHCAkKCwEAAgIDAQEBAQEAAAAAAAAA&#xA;AQACAwQFBgcICQoLEAACAQMDAgQCBgcDBAIGAnMBAgMRBAAFIRIxQVEGE2EicYEUMpGhBxWxQiPB&#xA;UtHhMxZi8CRygvElQzRTkqKyY3PCNUQnk6OzNhdUZHTD0uIIJoMJChgZhJRFRqS0VtNVKBry4/PE&#xA;1OT0ZXWFlaW1xdXl9WZ2hpamtsbW5vY3R1dnd4eXp7fH1+f3OEhYaHiImKi4yNjo+Ck5SVlpeYmZ&#xA;qbnJ2en5KjpKWmp6ipqqusra6voRAAICAQIDBQUEBQYECAMDbQEAAhEDBCESMUEFURNhIgZxgZEy&#xA;obHwFMHR4SNCFVJicvEzJDRDghaSUyWiY7LCB3PSNeJEgxdUkwgJChgZJjZFGidkdFU38qOzwygp&#xA;0+PzhJSktMTU5PRldYWVpbXF1eX1RlZmdoaWprbG1ub2R1dnd4eXp7fH1+f3OEhYaHiImKi4yNjo&#xA;+DlJWWl5iZmpucnZ6fkqOkpaanqKmqq6ytrq+v/aAAwDAQACEQMRAD8AkWbp8odirsVdirsVdirs&#xA;VdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsV&#xA;dirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVd&#xA;irsVdiqB1O/u7MK8Nm11H+2yNQr/ALGhJzG1GaWPcR4g7Xs3QYdQSJ5Rjl0BHP42EFaebdNmcRyh&#xA;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&#xA;XYq7FXYq7FXYq7FX/9k=</xmpGImg:image>
               </rdf:li>
            </rdf:Alt>
         </xmp:Thumbnails>
         <xmpMM:OriginalDocumentID>uuid:9E3E5C9A8C81DB118734DB58FDDE4BA7</xmpMM:OriginalDocumentID>
         <xmpMM:DocumentID>xmp.did:f31bb4d1-1e6c-6a40-ad34-f423a938e16b</xmpMM:DocumentID>
         <xmpMM:InstanceID>xmp.iid:f31bb4d1-1e6c-6a40-ad34-f423a938e16b</xmpMM:InstanceID>
         <xmpMM:RenditionClass>proof:pdf</xmpMM:RenditionClass>
         <xmpMM:DerivedFrom rdf:parseType="Resource">
            <stRef:instanceID>uuid:fd6bf05d-afb4-43a0-a99b-029a6d902b49</stRef:instanceID>
            <stRef:documentID>xmp.did:d5c9ee83-7ead-ab42-b160-0b7d30b494b1</stRef:documentID>
            <stRef:originalDocumentID>uuid:9E3E5C9A8C81DB118734DB58FDDE4BA7</stRef:originalDocumentID>
            <stRef:renditionClass>proof:pdf</stRef:renditionClass>
         </xmpMM:DerivedFrom>
         <xmpMM:History>
            <rdf:Seq>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:772cf3a1-d1a6-1f4e-a214-3f4852332e25</stEvt:instanceID>
                  <stEvt:when>2015-02-06T21:10:32+06:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CC (Windows)</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:f31bb4d1-1e6c-6a40-ad34-f423a938e16b</stEvt:instanceID>
                  <stEvt:when>2015-04-04T01:42:42+03:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CC 2014 (Windows)</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
            </rdf:Seq>
         </xmpMM:History>
         <illustrator:StartupProfile>Basic RGB</illustrator:StartupProfile>
         <xmpTPg:NPages>1</xmpTPg:NPages>
         <xmpTPg:HasVisibleTransparency>True</xmpTPg:HasVisibleTransparency>
         <xmpTPg:HasVisibleOverprint>False</xmpTPg:HasVisibleOverprint>
         <xmpTPg:MaxPageSize rdf:parseType="Resource">
            <stDim:w>4000.000000</stDim:w>
            <stDim:h>4000.000000</stDim:h>
            <stDim:unit>Pixels</stDim:unit>
         </xmpTPg:MaxPageSize>
         <xmpTPg:PlateNames>
            <rdf:Seq>
               <rdf:li>Cyan</rdf:li>
               <rdf:li>Magenta</rdf:li>
               <rdf:li>Yellow</rdf:li>
               <rdf:li>Black</rdf:li>
            </rdf:Seq>
         </xmpTPg:PlateNames>
         <xmpTPg:SwatchGroups>
            <rdf:Seq>
               <rdf:li rdf:parseType="Resource">
                  <xmpG:groupName>Группа образцов по умолчанию</xmpG:groupName>
                  <xmpG:groupType>0</xmpG:groupType>
                  <xmpG:Colorants>
                     <rdf:Seq>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>Белый</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>255</xmpG:red>
                           <xmpG:green>255</xmpG:green>
                           <xmpG:blue>255</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>Черный</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>0</xmpG:red>
                           <xmpG:green>0</xmpG:green>
                           <xmpG:blue>0</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>RGB красный</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>255</xmpG:red>
                           <xmpG:green>0</xmpG:green>
                           <xmpG:blue>0</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>RGB желтый</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>255</xmpG:red>
                           <xmpG:green>255</xmpG:green>
                           <xmpG:blue>0</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>RGB зеленый</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>0</xmpG:red>
                           <xmpG:green>255</xmpG:green>
                           <xmpG:blue>0</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>RGB голубой</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>0</xmpG:red>
                           <xmpG:green>255</xmpG:green>
                           <xmpG:blue>255</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>RGB синий</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>0</xmpG:red>
                           <xmpG:green>0</xmpG:green>
                           <xmpG:blue>255</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>RGB пурпурный</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>255</xmpG:red>
                           <xmpG:green>0</xmpG:green>
                           <xmpG:blue>255</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=193 G=39 B=45</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>193</xmpG:red>
                           <xmpG:green>39</xmpG:green>
                           <xmpG:blue>45</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=237 G=28 B=36</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>237</xmpG:red>
                           <xmpG:green>28</xmpG:green>
                           <xmpG:blue>36</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=241 G=90 B=36</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>241</xmpG:red>
                           <xmpG:green>90</xmpG:green>
                           <xmpG:blue>36</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=247 G=147 B=30</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>247</xmpG:red>
                           <xmpG:green>147</xmpG:green>
                           <xmpG:blue>30</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=251 G=176 B=59</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>251</xmpG:red>
                           <xmpG:green>176</xmpG:green>
                           <xmpG:blue>59</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=252 G=238 B=33</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>252</xmpG:red>
                           <xmpG:green>238</xmpG:green>
                           <xmpG:blue>33</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=217 G=224 B=33</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>217</xmpG:red>
                           <xmpG:green>224</xmpG:green>
                           <xmpG:blue>33</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=140 G=198 B=63</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>140</xmpG:red>
                           <xmpG:green>198</xmpG:green>
                           <xmpG:blue>63</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=57 G=181 B=74</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>57</xmpG:red>
                           <xmpG:green>181</xmpG:green>
                           <xmpG:blue>74</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=57 G=181 B=74 2</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>57</xmpG:red>
                           <xmpG:green>181</xmpG:green>
                           <xmpG:blue>74</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=0 G=146 B=69</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>0</xmpG:red>
                           <xmpG:green>146</xmpG:green>
                           <xmpG:blue>69</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=0 G=104 B=55</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>0</xmpG:red>
                           <xmpG:green>104</xmpG:green>
                           <xmpG:blue>55</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=34 G=181 B=115</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>34</xmpG:red>
                           <xmpG:green>181</xmpG:green>
                           <xmpG:blue>115</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=0 G=169 B=157</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>0</xmpG:red>
                           <xmpG:green>169</xmpG:green>
                           <xmpG:blue>157</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=41 G=171 B=226</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>41</xmpG:red>
                           <xmpG:green>171</xmpG:green>
                           <xmpG:blue>226</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=0 G=113 B=188</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>0</xmpG:red>
                           <xmpG:green>113</xmpG:green>
                           <xmpG:blue>188</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=46 G=49 B=146</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>46</xmpG:red>
                           <xmpG:green>49</xmpG:green>
                           <xmpG:blue>146</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=27 G=20 B=100</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>27</xmpG:red>
                           <xmpG:green>20</xmpG:green>
                           <xmpG:blue>100</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=102 G=45 B=145</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>102</xmpG:red>
                           <xmpG:green>45</xmpG:green>
                           <xmpG:blue>145</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=147 G=39 B=143</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>147</xmpG:red>
                           <xmpG:green>39</xmpG:green>
                           <xmpG:blue>143</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=158 G=0 B=93</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>158</xmpG:red>
                           <xmpG:green>0</xmpG:green>
                           <xmpG:blue>93</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=212 G=20 B=90</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>212</xmpG:red>
                           <xmpG:green>20</xmpG:green>
                           <xmpG:blue>90</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=237 G=30 B=121</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>237</xmpG:red>
                           <xmpG:green>30</xmpG:green>
                           <xmpG:blue>121</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=199 G=178 B=153</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>199</xmpG:red>
                           <xmpG:green>178</xmpG:green>
                           <xmpG:blue>153</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=153 G=134 B=117</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>153</xmpG:red>
                           <xmpG:green>134</xmpG:green>
                           <xmpG:blue>117</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=115 G=99 B=87</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>115</xmpG:red>
                           <xmpG:green>99</xmpG:green>
                           <xmpG:blue>87</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=83 G=71 B=65</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>83</xmpG:red>
                           <xmpG:green>71</xmpG:green>
                           <xmpG:blue>65</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=198 G=156 B=109</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>198</xmpG:red>
                           <xmpG:green>156</xmpG:green>
                           <xmpG:blue>109</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=166 G=124 B=82</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>166</xmpG:red>
                           <xmpG:green>124</xmpG:green>
                           <xmpG:blue>82</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=140 G=98 B=57</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>140</xmpG:red>
                           <xmpG:green>98</xmpG:green>
                           <xmpG:blue>57</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=117 G=76 B=36</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>117</xmpG:red>
                           <xmpG:green>76</xmpG:green>
                           <xmpG:blue>36</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=96 G=56 B=19</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>96</xmpG:red>
                           <xmpG:green>56</xmpG:green>
                           <xmpG:blue>19</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=66 G=33 B=11</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>66</xmpG:red>
                           <xmpG:green>33</xmpG:green>
                           <xmpG:blue>11</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=255 G=233 B=194</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>255</xmpG:red>
                           <xmpG:green>233</xmpG:green>
                           <xmpG:blue>194</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=240 G=208 B=151</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>240</xmpG:red>
                           <xmpG:green>208</xmpG:green>
                           <xmpG:blue>151</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=224 G=173 B=72</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>224</xmpG:red>
                           <xmpG:green>173</xmpG:green>
                           <xmpG:blue>72</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=192 G=0 B=37</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>192</xmpG:red>
                           <xmpG:green>0</xmpG:green>
                           <xmpG:blue>37</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=140 G=68 B=68</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>140</xmpG:red>
                           <xmpG:green>68</xmpG:green>
                           <xmpG:blue>68</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=63 G=121 B=139</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>63</xmpG:red>
                           <xmpG:green>121</xmpG:green>
                           <xmpG:blue>139</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=161 G=180 B=188</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>161</xmpG:red>
                           <xmpG:green>180</xmpG:green>
                           <xmpG:blue>188</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=87 G=173 B=171</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>87</xmpG:red>
                           <xmpG:green>173</xmpG:green>
                           <xmpG:blue>171</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=144 G=121 B=90</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>144</xmpG:red>
                           <xmpG:green>121</xmpG:green>
                           <xmpG:blue>90</xmpG:blue>
                        </rdf:li>
                     </rdf:Seq>
                  </xmpG:Colorants>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <xmpG:groupName>Холодный</xmpG:groupName>
                  <xmpG:groupType>1</xmpG:groupType>
                  <xmpG:Colorants>
                     <rdf:Seq>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>C=56 M=0 Y=20 K=0</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>101</xmpG:red>
                           <xmpG:green>200</xmpG:green>
                           <xmpG:blue>208</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>C=51 M=43 Y=0 K=0</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>131</xmpG:red>
                           <xmpG:green>139</xmpG:green>
                           <xmpG:blue>197</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>C=26 M=41 Y=0 K=0</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>186</xmpG:red>
                           <xmpG:green>155</xmpG:green>
                           <xmpG:blue>201</xmpG:blue>
                        </rdf:li>
                     </rdf:Seq>
                  </xmpG:Colorants>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <xmpG:groupName>Оттенки серого</xmpG:groupName>
                  <xmpG:groupType>1</xmpG:groupType>
                  <xmpG:Colorants>
                     <rdf:Seq>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=0 G=0 B=0</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>0</xmpG:red>
                           <xmpG:green>0</xmpG:green>
                           <xmpG:blue>0</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=26 G=26 B=26</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>26</xmpG:red>
                           <xmpG:green>26</xmpG:green>
                           <xmpG:blue>26</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=51 G=51 B=51</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>51</xmpG:red>
                           <xmpG:green>51</xmpG:green>
                           <xmpG:blue>51</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=77 G=77 B=77</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>77</xmpG:red>
                           <xmpG:green>77</xmpG:green>
                           <xmpG:blue>77</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=102 G=102 B=102</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>102</xmpG:red>
                           <xmpG:green>102</xmpG:green>
                           <xmpG:blue>102</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=128 G=128 B=128</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>128</xmpG:red>
                           <xmpG:green>128</xmpG:green>
                           <xmpG:blue>128</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=153 G=153 B=153</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>153</xmpG:red>
                           <xmpG:green>153</xmpG:green>
                           <xmpG:blue>153</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=179 G=179 B=179</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>179</xmpG:red>
                           <xmpG:green>179</xmpG:green>
                           <xmpG:blue>179</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=204 G=204 B=204</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>204</xmpG:red>
                           <xmpG:green>204</xmpG:green>
                           <xmpG:blue>204</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=230 G=230 B=230</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>230</xmpG:red>
                           <xmpG:green>230</xmpG:green>
                           <xmpG:blue>230</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=242 G=242 B=242</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>242</xmpG:red>
                           <xmpG:green>242</xmpG:green>
                           <xmpG:blue>242</xmpG:blue>
                        </rdf:li>
                     </rdf:Seq>
                  </xmpG:Colorants>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <xmpG:groupName>Цветовая группа 1</xmpG:groupName>
                  <xmpG:groupType>1</xmpG:groupType>
                  <xmpG:Colorants>
                     <rdf:Seq>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=54 G=36 B=36</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>54</xmpG:red>
                           <xmpG:green>36</xmpG:green>
                           <xmpG:blue>36</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=158 G=60 B=52</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>158</xmpG:red>
                           <xmpG:green>60</xmpG:green>
                           <xmpG:blue>52</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=204 G=78 B=67</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>204</xmpG:red>
                           <xmpG:green>78</xmpG:green>
                           <xmpG:blue>67</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=255 G=98 B=84</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>255</xmpG:red>
                           <xmpG:green>98</xmpG:green>
                           <xmpG:blue>84</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=255 G=122 B=110</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>255</xmpG:red>
                           <xmpG:green>122</xmpG:green>
                           <xmpG:blue>110</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=255 G=171 B=163</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>255</xmpG:red>
                           <xmpG:green>171</xmpG:green>
                           <xmpG:blue>163</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=251 G=177 B=35</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>251</xmpG:red>
                           <xmpG:green>177</xmpG:green>
                           <xmpG:blue>35</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=255 G=215 B=138</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>255</xmpG:red>
                           <xmpG:green>215</xmpG:green>
                           <xmpG:blue>138</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=204 G=232 B=134</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>204</xmpG:red>
                           <xmpG:green>232</xmpG:green>
                           <xmpG:blue>134</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=143 G=194 B=77</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>143</xmpG:red>
                           <xmpG:green>194</xmpG:green>
                           <xmpG:blue>77</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=121 G=165 B=119</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>121</xmpG:red>
                           <xmpG:green>165</xmpG:green>
                           <xmpG:blue>119</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=97 G=198 B=194</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>97</xmpG:red>
                           <xmpG:green>198</xmpG:green>
                           <xmpG:blue>194</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=8 G=124 B=139</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>8</xmpG:red>
                           <xmpG:green>124</xmpG:green>
                           <xmpG:blue>139</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=46 G=96 B=104</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>46</xmpG:red>
                           <xmpG:green>96</xmpG:green>
                           <xmpG:blue>104</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=147 G=87 B=153</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>147</xmpG:red>
                           <xmpG:green>87</xmpG:green>
                           <xmpG:blue>153</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=192 G=39 B=45</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>192</xmpG:red>
                           <xmpG:green>39</xmpG:green>
                           <xmpG:blue>45</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=133 G=28 B=31</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>133</xmpG:red>
                           <xmpG:green>28</xmpG:green>
                           <xmpG:blue>31</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=191 G=67 B=70</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>191</xmpG:red>
                           <xmpG:green>67</xmpG:green>
                           <xmpG:blue>70</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=37 G=33 B=34</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>37</xmpG:red>
                           <xmpG:green>33</xmpG:green>
                           <xmpG:blue>34</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>K=86</xmpG:swatchName>
                           <xmpG:mode>GRAY</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:gray>219</xmpG:gray>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=51 G=51 B=51 1</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>51</xmpG:red>
                           <xmpG:green>51</xmpG:green>
                           <xmpG:blue>51</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=54 G=54 B=54</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>54</xmpG:red>
                           <xmpG:green>54</xmpG:green>
                           <xmpG:blue>54</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=77 G=77 B=77 1</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>77</xmpG:red>
                           <xmpG:green>77</xmpG:green>
                           <xmpG:blue>77</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>K=12</xmpG:swatchName>
                           <xmpG:mode>GRAY</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:gray>30</xmpG:gray>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=227 G=227 B=227</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>227</xmpG:red>
                           <xmpG:green>227</xmpG:green>
                           <xmpG:blue>227</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=241 G=241 B=241</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>241</xmpG:red>
                           <xmpG:green>241</xmpG:green>
                           <xmpG:blue>241</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>K=0</xmpG:swatchName>
                           <xmpG:mode>GRAY</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:gray>0</xmpG:gray>
                        </rdf:li>
                     </rdf:Seq>
                  </xmpG:Colorants>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <xmpG:groupName>Цветовая группа 2</xmpG:groupName>
                  <xmpG:groupType>1</xmpG:groupType>
                  <xmpG:Colorants>
                     <rdf:Seq>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=224 G=81 B=81</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>224</xmpG:red>
                           <xmpG:green>81</xmpG:green>
                           <xmpG:blue>81</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=163 G=43 B=0</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>163</xmpG:red>
                           <xmpG:green>43</xmpG:green>
                           <xmpG:blue>0</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=196 G=52 B=0</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>196</xmpG:red>
                           <xmpG:green>52</xmpG:green>
                           <xmpG:blue>0</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=191 G=99 B=44</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>191</xmpG:red>
                           <xmpG:green>99</xmpG:green>
                           <xmpG:blue>44</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=92 G=82 B=72</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>92</xmpG:red>
                           <xmpG:green>82</xmpG:green>
                           <xmpG:blue>72</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=168 G=140 B=111</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>168</xmpG:red>
                           <xmpG:green>140</xmpG:green>
                           <xmpG:blue>111</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=207 G=188 B=168</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>207</xmpG:red>
                           <xmpG:green>188</xmpG:green>
                           <xmpG:blue>168</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=51 G=43 B=34</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>51</xmpG:red>
                           <xmpG:green>43</xmpG:green>
                           <xmpG:blue>34</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=166 G=117 B=23</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>166</xmpG:red>
                           <xmpG:green>117</xmpG:green>
                           <xmpG:blue>23</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=251 G=177 B=35 1</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>251</xmpG:red>
                           <xmpG:green>177</xmpG:green>
                           <xmpG:blue>35</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=217 G=153 B=30</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>217</xmpG:red>
                           <xmpG:green>153</xmpG:green>
                           <xmpG:blue>30</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=200 G=224 B=45</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>200</xmpG:red>
                           <xmpG:green>224</xmpG:green>
                           <xmpG:blue>45</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=173 G=194 B=39</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>173</xmpG:red>
                           <xmpG:green>194</xmpG:green>
                           <xmpG:blue>39</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=143 G=194 B=77 1</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>143</xmpG:red>
                           <xmpG:green>194</xmpG:green>
                           <xmpG:blue>77</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=110 G=150 B=60</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>110</xmpG:red>
                           <xmpG:green>150</xmpG:green>
                           <xmpG:blue>60</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=112 G=153 B=87</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>112</xmpG:red>
                           <xmpG:green>153</xmpG:green>
                           <xmpG:blue>87</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=55 G=153 B=93</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>55</xmpG:red>
                           <xmpG:green>153</xmpG:green>
                           <xmpG:blue>93</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=121 G=184 B=166</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>121</xmpG:red>
                           <xmpG:green>184</xmpG:green>
                           <xmpG:blue>166</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=174 G=217 B=208</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>174</xmpG:red>
                           <xmpG:green>217</xmpG:green>
                           <xmpG:blue>208</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=48 G=89 B=81</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>48</xmpG:red>
                           <xmpG:green>89</xmpG:green>
                           <xmpG:blue>81</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=97 G=198 B=194 1</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>97</xmpG:red>
                           <xmpG:green>198</xmpG:green>
                           <xmpG:blue>194</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=55 G=187 B=196</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>55</xmpG:red>
                           <xmpG:green>187</xmpG:green>
                           <xmpG:blue>196</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=133 G=194 B=201</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>133</xmpG:red>
                           <xmpG:green>194</xmpG:green>
                           <xmpG:blue>201</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=5 G=80 B=89</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>5</xmpG:red>
                           <xmpG:green>80</xmpG:green>
                           <xmpG:blue>89</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=8 G=124 B=139 1</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>8</xmpG:red>
                           <xmpG:green>124</xmpG:green>
                           <xmpG:blue>139</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=0 G=113 B=163</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>0</xmpG:red>
                           <xmpG:green>113</xmpG:green>
                           <xmpG:blue>163</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=0 G=138 B=200</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>0</xmpG:red>
                           <xmpG:green>138</xmpG:green>
                           <xmpG:blue>200</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=12 G=87 B=153</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>12</xmpG:red>
                           <xmpG:green>87</xmpG:green>
                           <xmpG:blue>153</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=47 G=34 B=83</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>47</xmpG:red>
                           <xmpG:green>34</xmpG:green>
                           <xmpG:blue>83</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=160 G=130 B=224</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>160</xmpG:red>
                           <xmpG:green>130</xmpG:green>
                           <xmpG:blue>224</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=147 G=87 B=153 1</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>147</xmpG:red>
                           <xmpG:green>87</xmpG:green>
                           <xmpG:blue>153</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=191 G=67 B=70 1</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>191</xmpG:red>
                           <xmpG:green>67</xmpG:green>
                           <xmpG:blue>70</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=140 G=49 B=51</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>140</xmpG:red>
                           <xmpG:green>49</xmpG:green>
                           <xmpG:blue>51</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>K=81</xmpG:swatchName>
                           <xmpG:mode>GRAY</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:gray>206</xmpG:gray>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>K=75</xmpG:swatchName>
                           <xmpG:mode>GRAY</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:gray>191</xmpG:gray>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>K=53</xmpG:swatchName>
                           <xmpG:mode>GRAY</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:gray>135</xmpG:gray>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>K=50</xmpG:swatchName>
                           <xmpG:mode>GRAY</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:gray>126</xmpG:gray>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=153 G=153 B=153 1</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>153</xmpG:red>
                           <xmpG:green>153</xmpG:green>
                           <xmpG:blue>153</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>K=35</xmpG:swatchName>
                           <xmpG:mode>GRAY</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:gray>89</xmpG:gray>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=204 G=204 B=204 1</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>204</xmpG:red>
                           <xmpG:green>204</xmpG:green>
                           <xmpG:blue>204</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>K=15</xmpG:swatchName>
                           <xmpG:mode>GRAY</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:gray>38</xmpG:gray>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=237 G=237 B=237</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>237</xmpG:red>
                           <xmpG:green>237</xmpG:green>
                           <xmpG:blue>237</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=241 G=241 B=241 1</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>241</xmpG:red>
                           <xmpG:green>241</xmpG:green>
                           <xmpG:blue>241</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=252 G=252 B=252</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>252</xmpG:red>
                           <xmpG:green>252</xmpG:green>
                           <xmpG:blue>252</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=255 G=255 B=255</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>255</xmpG:red>
                           <xmpG:green>255</xmpG:green>
                           <xmpG:blue>255</xmpG:blue>
                        </rdf:li>
                     </rdf:Seq>
                  </xmpG:Colorants>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <xmpG:groupName>Цветовая группа 3</xmpG:groupName>
                  <xmpG:groupType>1</xmpG:groupType>
                  <xmpG:Colorants>
                     <rdf:Seq>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=184 G=66 B=66</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>184</xmpG:red>
                           <xmpG:green>66</xmpG:green>
                           <xmpG:blue>66</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=204 G=78 B=67 1</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>204</xmpG:red>
                           <xmpG:green>78</xmpG:green>
                           <xmpG:blue>67</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=255 G=98 B=84 1</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>255</xmpG:red>
                           <xmpG:green>98</xmpG:green>
                           <xmpG:blue>84</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=201 G=75 B=30</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>201</xmpG:red>
                           <xmpG:green>75</xmpG:green>
                           <xmpG:blue>30</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=241 G=90 B=36 1</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>241</xmpG:red>
                           <xmpG:green>90</xmpG:green>
                           <xmpG:blue>36</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=194 G=73 B=29</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>194</xmpG:red>
                           <xmpG:green>73</xmpG:green>
                           <xmpG:blue>29</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=247 G=147 B=30 1</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>247</xmpG:red>
                           <xmpG:green>147</xmpG:green>
                           <xmpG:blue>30</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=227 G=157 B=23</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>227</xmpG:red>
                           <xmpG:green>157</xmpG:green>
                           <xmpG:blue>23</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=251 G=177 B=35 2</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>251</xmpG:red>
                           <xmpG:green>177</xmpG:green>
                           <xmpG:blue>35</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=209 G=145 B=21</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>209</xmpG:red>
                           <xmpG:green>145</xmpG:green>
                           <xmpG:blue>21</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=251 G=198 B=95</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>251</xmpG:red>
                           <xmpG:green>198</xmpG:green>
                           <xmpG:blue>95</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=200 G=224 B=45 1</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>200</xmpG:red>
                           <xmpG:green>224</xmpG:green>
                           <xmpG:blue>45</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=111 G=198 B=194</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>111</xmpG:red>
                           <xmpG:green>198</xmpG:green>
                           <xmpG:blue>194</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=42 G=144 B=150</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>42</xmpG:red>
                           <xmpG:green>144</xmpG:green>
                           <xmpG:blue>150</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=55 G=187 B=196 1</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>55</xmpG:red>
                           <xmpG:green>187</xmpG:green>
                           <xmpG:blue>196</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=8 G=122 B=138</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>8</xmpG:red>
                           <xmpG:green>122</xmpG:green>
                           <xmpG:blue>138</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=6 G=90 B=102</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>6</xmpG:red>
                           <xmpG:green>90</xmpG:green>
                           <xmpG:blue>102</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=9 G=67 B=117</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>9</xmpG:red>
                           <xmpG:green>67</xmpG:green>
                           <xmpG:blue>117</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=12 G=87 B=153 1</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>12</xmpG:red>
                           <xmpG:green>87</xmpG:green>
                           <xmpG:blue>153</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=16 G=113 B=199</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>16</xmpG:red>
                           <xmpG:green>113</xmpG:green>
                           <xmpG:blue>199</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=85 G=146 B=201</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>85</xmpG:red>
                           <xmpG:green>146</xmpG:green>
                           <xmpG:blue>201</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=0 G=0 B=0 1</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>0</xmpG:red>
                           <xmpG:green>0</xmpG:green>
                           <xmpG:blue>0</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>K=89</xmpG:swatchName>
                           <xmpG:mode>GRAY</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:gray>226</xmpG:gray>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>K=75 1</xmpG:swatchName>
                           <xmpG:mode>GRAY</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:gray>191</xmpG:gray>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>K=50 1</xmpG:swatchName>
                           <xmpG:mode>GRAY</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:gray>126</xmpG:gray>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=153 G=153 B=153 2</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>153</xmpG:red>
                           <xmpG:green>153</xmpG:green>
                           <xmpG:blue>153</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>K=37</xmpG:swatchName>
                           <xmpG:mode>GRAY</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:gray>94</xmpG:gray>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>K=35 1</xmpG:swatchName>
                           <xmpG:mode>GRAY</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:gray>89</xmpG:gray>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>K=29</xmpG:swatchName>
                           <xmpG:mode>GRAY</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:gray>73</xmpG:gray>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>K=27</xmpG:swatchName>
                           <xmpG:mode>GRAY</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:gray>68</xmpG:gray>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>K=25</xmpG:swatchName>
                           <xmpG:mode>GRAY</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:gray>63</xmpG:gray>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>K=18</xmpG:swatchName>
                           <xmpG:mode>GRAY</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:gray>45</xmpG:gray>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=209 G=209 B=212</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>209</xmpG:red>
                           <xmpG:green>209</xmpG:green>
                           <xmpG:blue>212</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>K=7</xmpG:swatchName>
                           <xmpG:mode>GRAY</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:gray>17</xmpG:gray>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=242 G=242 B=242 1</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>242</xmpG:red>
                           <xmpG:green>242</xmpG:green>
                           <xmpG:blue>242</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>K=0 1</xmpG:swatchName>
                           <xmpG:mode>GRAY</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:gray>0</xmpG:gray>
                        </rdf:li>
                     </rdf:Seq>
                  </xmpG:Colorants>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <xmpG:groupName>Цветовая группа 4</xmpG:groupName>
                  <xmpG:groupType>1</xmpG:groupType>
                  <xmpG:Colorants>
                     <rdf:Seq>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=255 G=98 B=84 2</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>255</xmpG:red>
                           <xmpG:green>98</xmpG:green>
                           <xmpG:blue>84</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=247 G=147 B=30 2</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>247</xmpG:red>
                           <xmpG:green>147</xmpG:green>
                           <xmpG:blue>30</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=251 G=177 B=35 3</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>251</xmpG:red>
                           <xmpG:green>177</xmpG:green>
                           <xmpG:blue>35</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=200 G=224 B=45 2</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>200</xmpG:red>
                           <xmpG:green>224</xmpG:green>
                           <xmpG:blue>45</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=55 G=187 B=196 2</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>55</xmpG:red>
                           <xmpG:green>187</xmpG:green>
                           <xmpG:blue>196</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=8 G=122 B=138 1</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>8</xmpG:red>
                           <xmpG:green>122</xmpG:green>
                           <xmpG:blue>138</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=12 G=87 B=153 2</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>12</xmpG:red>
                           <xmpG:green>87</xmpG:green>
                           <xmpG:blue>153</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=16 G=113 B=199 1</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>16</xmpG:red>
                           <xmpG:green>113</xmpG:green>
                           <xmpG:blue>199</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=0 G=0 B=0 2</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>0</xmpG:red>
                           <xmpG:green>0</xmpG:green>
                           <xmpG:blue>0</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>K=75 2</xmpG:swatchName>
                           <xmpG:mode>GRAY</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:gray>191</xmpG:gray>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>K=37 1</xmpG:swatchName>
                           <xmpG:mode>GRAY</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:gray>94</xmpG:gray>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>K=35 2</xmpG:swatchName>
                           <xmpG:mode>GRAY</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:gray>89</xmpG:gray>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>K=29 1</xmpG:swatchName>
                           <xmpG:mode>GRAY</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:gray>73</xmpG:gray>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>K=27 1</xmpG:swatchName>
                           <xmpG:mode>GRAY</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:gray>68</xmpG:gray>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>K=25 1</xmpG:swatchName>
                           <xmpG:mode>GRAY</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:gray>63</xmpG:gray>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>K=18 1</xmpG:swatchName>
                           <xmpG:mode>GRAY</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:gray>45</xmpG:gray>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>K=7 1</xmpG:swatchName>
                           <xmpG:mode>GRAY</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:gray>17</xmpG:gray>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>K=0 2</xmpG:swatchName>
                           <xmpG:mode>GRAY</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:gray>0</xmpG:gray>
                        </rdf:li>
                     </rdf:Seq>
                  </xmpG:Colorants>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <xmpG:groupName>Цветовая группа 5</xmpG:groupName>
                  <xmpG:groupType>1</xmpG:groupType>
                  <xmpG:Colorants>
                     <rdf:Seq>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=255 G=0 B=0</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>255</xmpG:red>
                           <xmpG:green>0</xmpG:green>
                           <xmpG:blue>0</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=155 G=52 B=45</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>155</xmpG:red>
                           <xmpG:green>52</xmpG:green>
                           <xmpG:blue>45</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=239 G=111 B=98</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>239</xmpG:red>
                           <xmpG:green>111</xmpG:green>
                           <xmpG:blue>98</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=193 G=57 B=43</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>193</xmpG:red>
                           <xmpG:green>57</xmpG:green>
                           <xmpG:blue>43</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=178 G=84 B=71</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>178</xmpG:red>
                           <xmpG:green>84</xmpG:green>
                           <xmpG:blue>71</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=253 G=79 B=54</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>253</xmpG:red>
                           <xmpG:green>79</xmpG:green>
                           <xmpG:blue>54</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=162 G=51 B=31</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>162</xmpG:red>
                           <xmpG:green>51</xmpG:green>
                           <xmpG:blue>31</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=115 G=99 B=87 1</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>115</xmpG:red>
                           <xmpG:green>99</xmpG:green>
                           <xmpG:blue>87</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=244 G=168 B=92</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>244</xmpG:red>
                           <xmpG:green>168</xmpG:green>
                           <xmpG:blue>92</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=248 G=178 B=82</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>248</xmpG:red>
                           <xmpG:green>178</xmpG:green>
                           <xmpG:blue>82</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=249 G=221 B=181</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>249</xmpG:red>
                           <xmpG:green>221</xmpG:green>
                           <xmpG:blue>181</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=243 G=177 B=80</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>243</xmpG:red>
                           <xmpG:green>177</xmpG:green>
                           <xmpG:blue>80</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=251 G=197 B=111</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>251</xmpG:red>
                           <xmpG:green>197</xmpG:green>
                           <xmpG:blue>111</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=237 G=189 B=79</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>237</xmpG:red>
                           <xmpG:green>189</xmpG:green>
                           <xmpG:blue>79</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=140 G=137 B=130</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>140</xmpG:red>
                           <xmpG:green>137</xmpG:green>
                           <xmpG:blue>130</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=247 G=184 B=19</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>247</xmpG:red>
                           <xmpG:green>184</xmpG:green>
                           <xmpG:blue>19</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=252 G=241 B=211</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>252</xmpG:red>
                           <xmpG:green>241</xmpG:green>
                           <xmpG:blue>211</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=255 G=210 B=82</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>255</xmpG:red>
                           <xmpG:green>210</xmpG:green>
                           <xmpG:blue>82</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=209 G=174 B=74</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>209</xmpG:red>
                           <xmpG:green>174</xmpG:green>
                           <xmpG:blue>74</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=165 G=129 B=9</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>165</xmpG:red>
                           <xmpG:green>129</xmpG:green>
                           <xmpG:blue>9</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=249 G=207 B=9</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>249</xmpG:red>
                           <xmpG:green>207</xmpG:green>
                           <xmpG:blue>9</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=74 G=72 B=60</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>74</xmpG:red>
                           <xmpG:green>72</xmpG:green>
                           <xmpG:blue>60</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=88 G=175 B=96</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>88</xmpG:red>
                           <xmpG:green>175</xmpG:green>
                           <xmpG:blue>96</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=57 G=181 B=74 1</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>57</xmpG:red>
                           <xmpG:green>181</xmpG:green>
                           <xmpG:blue>74</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=0 G=104 B=55 1</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>0</xmpG:red>
                           <xmpG:green>104</xmpG:green>
                           <xmpG:blue>55</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=110 G=139 B=234</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>110</xmpG:red>
                           <xmpG:green>139</xmpG:green>
                           <xmpG:blue>234</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=241 G=238 B=247</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>241</xmpG:red>
                           <xmpG:green>238</xmpG:green>
                           <xmpG:blue>247</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=225 G=37 B=52</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>225</xmpG:red>
                           <xmpG:green>37</xmpG:green>
                           <xmpG:blue>52</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=193 G=39 B=45 1</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>193</xmpG:red>
                           <xmpG:green>39</xmpG:green>
                           <xmpG:blue>45</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=0 G=0 B=0 3</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>0</xmpG:red>
                           <xmpG:green>0</xmpG:green>
                           <xmpG:blue>0</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=77 G=77 B=77 2</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>77</xmpG:red>
                           <xmpG:green>77</xmpG:green>
                           <xmpG:blue>77</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>K=50 2</xmpG:swatchName>
                           <xmpG:mode>GRAY</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:gray>126</xmpG:gray>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>K=35 3</xmpG:swatchName>
                           <xmpG:mode>GRAY</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:gray>89</xmpG:gray>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=198 G=198 B=198</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>198</xmpG:red>
                           <xmpG:green>198</xmpG:green>
                           <xmpG:blue>198</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=230 G=230 B=230 1</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>230</xmpG:red>
                           <xmpG:green>230</xmpG:green>
                           <xmpG:blue>230</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=233 G=236 B=241</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>233</xmpG:red>
                           <xmpG:green>236</xmpG:green>
                           <xmpG:blue>241</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=242 G=242 B=242 2</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>242</xmpG:red>
                           <xmpG:green>242</xmpG:green>
                           <xmpG:blue>242</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=255 G=255 B=255 1</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>255</xmpG:red>
                           <xmpG:green>255</xmpG:green>
                           <xmpG:blue>255</xmpG:blue>
                        </rdf:li>
                     </rdf:Seq>
                  </xmpG:Colorants>
               </rdf:li>
            </rdf:Seq>
         </xmpTPg:SwatchGroups>
         <pdf:Producer>Adobe PDF library 11.00</pdf:Producer>
      </rdf:Description>
   </rdf:RDF>
</x:xmpmeta>
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                           
<?xpacket end="w"?>%  &&end XMP packet marker&&[{ai_metadata_stream_123}<</Type /Metadata /Subtype /XML>>/PUT AI11_PDFMark5[/Document1 dict begin /Metadata {ai_metadata_stream_123} defcurrentdict end /BDC AI11_PDFMark5
%ADOEndClientInjection: PageSetup End "AI11EPS"
%%EndPageSetup
1 -1 scale 0 -4000 translate
pgsv
[1 0 0 1 0 0 ]ct
gsave
np
gsave
0 0 mo
0 4000 li
4000 4000 li
4000 0 li
cp
clp
4000 4000 mo
0 4000 li
0 0 li
4000 0 li
4000 4000 li
false sop
/0 
[/DeviceRGB] /CSA add_res
.380392 .776471 .760784 rgb
f
2558.78 2943.56 mo
2594.32 3035.54 2564.96 3056.68 2542.91 3060.86 cv
2536.4 3048.84 2532.03 3033.89 2530.91 3017.49 cv
2528.65 2984.28 2540.42 2955.13 2558.78 2943.56 cv
cp
.301961 .301961 .301961 rgb
f
2569.49 2856.77 mo
2570.9 2857.27 2572.43 2857.55 2574.03 2857.58 cv
2561.95 2890.83 li
2560.84 2889.92 2559.45 2889.32 2557.74 2889.11 cv
2569.49 2856.77 li
cp
.392157 .592157 .607843 rgb
f
2527.45 2860.8 mo
2529.16 2860.64 2530.77 2860.21 2532.21 2859.55 cv
2554.69 2889.12 li
2553.25 2889.28 2551.63 2889.64 2549.83 2890.23 cv
2527.45 2860.8 li
cp
f
2460.62 3045.52 mo
2482.75 3024.5 2488.01 2992.26 2476.16 2965.29 cv
2475.5 2964.23 2474.02 2961.96 2471.77 2959.14 cv
2474.12 2956.57 li
2476.21 2959.16 2477.71 2961.36 2478.59 2962.75 cv
2521 2922.46 li
2519.13 2919.21 2517.06 2916.04 2514.81 2912.95 cv
2530.79 2899.71 2542.04 2892.81 2549.83 2890.23 cv
2551.63 2889.64 2553.25 2889.28 2554.69 2889.12 cv
2555.81 2889 2556.82 2889 2557.74 2889.11 cv
2559.45 2889.32 2560.84 2889.92 2561.95 2890.83 cv
2572.79 2899.73 2556.83 2938.6 2556.83 2938.6 cv
2557.5 2940.28 2558.15 2941.93 2558.78 2943.56 cv
2540.42 2955.13 2528.65 2984.28 2530.91 3017.49 cv
2532.03 3033.89 2536.4 3048.84 2542.91 3060.86 cv
2532.76 3062.78 2524.16 3061.11 2524.16 3061.11 cv
2433.89 3061.34 li
2443.61 3058.24 2452.77 3052.98 2460.62 3045.52 cv
cp
.776471 .776471 .776471 rgb
f
2525.6 2838.61 mo
2532.74 2838.12 2538.86 2842.7 2539.28 2848.84 cv
2539.59 2853.39 2536.66 2857.53 2532.21 2859.55 cv
2530.77 2860.21 2529.16 2860.64 2527.45 2860.8 cv
2527.34 2860.81 2527.23 2860.82 2527.11 2860.83 cv
2519.97 2861.31 2513.85 2856.73 2513.43 2850.6 cv
2513.01 2844.46 2518.46 2839.09 2525.6 2838.61 cv
cp
.301961 .301961 .301961 rgb
f
2573.82 2835.32 mo
2580.96 2834.84 2587.08 2839.42 2587.5 2845.56 cv
2587.92 2851.69 2582.47 2857.06 2575.33 2857.55 cv
2574.9 2857.58 2574.46 2857.59 2574.03 2857.58 cv
2572.43 2857.55 2570.9 2857.27 2569.49 2856.77 cv
2565.12 2855.24 2561.95 2851.67 2561.65 2847.31 cv
2561.24 2841.18 2566.68 2835.81 2573.82 2835.32 cv
cp
f
1693.84 2285.43 mo
1663.62 2494.94 1653.49 2390.19 1653.49 2390.19 cv
1641.05 2058.38 1624.24 2173.05 1624.24 2173.05 cv
1619.1 2465.48 1596.57 2302.02 1596.57 2302.02 cv
1538 2026.73 1538.45 2144.39 1538.45 2144.39 cv
1658.9 2599.09 1406.42 2664.83 1406.42 2664.83 cv
1406.42 2664.83 1648.57 2774.29 1679.97 2530.53 cv
1679.97 2530.53 1741.58 2208.61 1693.84 2285.43 cv
cp
1 1 1 rgb
f
1182.7 2285.43 mo
1212.93 2494.94 1223.06 2390.19 1223.06 2390.19 cv
1235.5 2058.38 1252.31 2173.05 1252.31 2173.05 cv
1257.44 2465.48 1279.98 2302.02 1279.98 2302.02 cv
1338.55 2026.73 1338.1 2144.39 1338.1 2144.39 cv
1217.65 2599.09 1470.13 2664.83 1470.13 2664.83 cv
1470.13 2664.83 1227.98 2774.29 1196.57 2530.53 cv
1196.57 2530.53 1134.97 2208.61 1182.7 2285.43 cv
cp
f
1149.32 3652.65 mo
1149.61 3652.65 li
1149.51 3653.13 1149.41 3653.6 1149.32 3654.08 cv
1295.36 3654.08 li
1294.01 3647.08 1291.73 3640.42 1288.65 3634.25 cv
1149.32 3634.25 li
1149.32 3652.65 li
cp
.345098 .235294 .184314 rgb
f
454.006 3654.08 mo
556.088 3654.08 li
600.043 3654.08 li
598.694 3647.08 596.411 3640.42 593.333 3634.25 cv
454.006 3634.25 li
454.006 3654.08 li
cp
f
615.277 3654.08 mo
717.358 3654.08 li
761.313 3654.08 li
759.965 3647.08 757.681 3640.42 754.604 3634.25 cv
615.277 3634.25 li
615.277 3654.08 li
cp
f
1314.56 3634.25 mo
1314.56 3652.65 li
1314.85 3652.65 li
1314.75 3653.13 1314.65 3653.6 1314.56 3654.08 cv
1460.59 3654.08 li
1459.25 3647.08 1456.96 3640.42 1453.88 3634.25 cv
1314.56 3634.25 li
cp
f
1514.75 2652.74 mo
1415.13 2652.74 1326.4 2674.15 1269.16 2707.49 cv
1266.39 2704.03 1263.51 2700.55 1260.53 2697.05 cv
1224.3 2654.54 1187.26 2626.62 1177.78 2634.69 cv
1168.31 2642.76 1190 2683.77 1226.23 2726.28 cv
1228.49 2728.94 1230.75 2731.53 1233.01 2734.06 cv
1213.26 2752.89 1202.19 2774 1202.19 2796.3 cv
1202.19 2798.02 1202.26 2799.73 1202.4 2801.43 cv
948.238 2762.9 553.856 2949.39 469.452 3095.69 cv
444.318 3078.8 411.013 3066.55 367.268 3066.55 cv
367.268 3066.55 414.94 3098.96 454.006 3146.54 cv
454.006 3634.25 li
593.333 3634.25 li
585.405 3618.34 572.201 3605.67 556.088 3598.65 cv
556.088 3280.76 li
573.902 3291.78 593.72 3302.01 615.277 3311.31 cv
615.277 3634.25 li
754.604 3634.25 li
746.676 3618.34 733.472 3605.67 717.358 3598.65 cv
717.358 3345.1 li
782.815 3361.23 856.904 3370.33 935.382 3370.33 cv
1012.23 3370.33 1084.87 3361.61 1149.32 3346.1 cv
1149.32 3634.25 li
1288.65 3634.25 li
1280.72 3618.34 1267.52 3605.67 1251.4 3598.65 cv
1251.4 3313.05 li
1274.5 3303.31 1295.65 3292.52 1314.56 3280.83 cv
1314.56 3634.25 li
1453.88 3634.25 li
1445.96 3618.34 1432.75 3605.67 1416.64 3598.65 cv
1416.64 3142.25 li
1416.71 3140.57 1416.76 3138.88 1416.76 3137.19 cv
1429.02 3048.69 1472.4 2939.86 1514.75 2939.86 cv
1687.36 2939.86 1827.3 2875.58 1827.3 2796.3 cv
1827.3 2717.02 1687.36 2652.74 1514.75 2652.74 cv
cp
.635294 .2 .121569 rgb
f
1807.29 2818.66 mo
1790.78 2818.66 1734.32 2753.29 1807.29 2753.29 cv
1880.26 2753.29 1823.8 2818.66 1807.29 2818.66 cv
cp
.11882 .11882 .11882 rgb
f
1566.13 2689.34 mo
1566.13 2703.87 1577.91 2715.65 1592.44 2715.65 cv
1592.56 2715.65 li
1607.04 2715.58 1618.75 2703.83 1618.75 2689.34 cv
1618.75 2674.85 1607.04 2663.1 1592.56 2663.03 cv
1592.44 2663.03 li
1577.91 2663.03 1566.13 2674.81 1566.13 2689.34 cv
cp
1 1 1 rgb
f
1671.1 2689.34 mo
1671.1 2703.87 1682.88 2715.65 1697.41 2715.65 cv
1697.53 2715.65 li
1712 2715.58 1723.72 2703.83 1723.72 2689.34 cv
1723.72 2674.85 1712 2663.1 1697.53 2663.03 cv
1697.41 2663.03 li
1682.88 2663.03 1671.1 2674.81 1671.1 2689.34 cv
cp
f
1750.04 2890.58 mo
1736.1 2890.06 1721.63 2885.49 1707.48 2877.07 cv
1693.07 2868.49 1684.12 2859.05 1683.75 2858.65 cv
1688.56 2854.13 li
1686.15 2856.39 li
1688.56 2854.12 li
1688.9 2854.49 1723.22 2890.33 1763.69 2883.06 cv
1763.69 2883.06 1750.94 2890.61 1750.04 2890.58 cv
cp
.11882 .11882 .11882 rgb
f
775.703 2976.31 mo
775.703 2994.4 769.275 3009.06 761.345 3009.06 cv
753.415 3009.06 746.987 2994.4 746.987 2976.31 cv
746.987 2958.22 753.415 2943.55 761.345 2943.55 cv
769.275 2943.55 775.703 2958.22 775.703 2976.31 cv
cp
.945098 .352941 .141176 rgb
f
971.333 2976.31 mo
971.333 2994.4 964.905 3009.06 956.975 3009.06 cv
949.045 3009.06 942.617 2994.4 942.617 2976.31 cv
942.617 2958.22 949.045 2943.55 956.975 2943.55 cv
964.905 2943.55 971.333 2958.22 971.333 2976.31 cv
cp
f
1164.57 2976.31 mo
1164.57 2994.4 1158.14 3009.06 1150.21 3009.06 cv
1142.28 3009.06 1135.85 2994.4 1135.85 2976.31 cv
1135.85 2958.22 1142.28 2943.55 1150.21 2943.55 cv
1158.14 2943.55 1164.57 2958.22 1164.57 2976.31 cv
cp
f
781.237 3237 mo
781.237 3255.09 774.808 3269.75 766.879 3269.75 cv
758.949 3269.75 752.52 3255.09 752.52 3237 cv
752.52 3218.91 758.949 3204.24 766.879 3204.24 cv
774.808 3204.24 781.237 3218.91 781.237 3237 cv
cp
f
976.867 3237 mo
976.867 3255.09 970.439 3269.75 962.509 3269.75 cv
954.579 3269.75 948.151 3255.09 948.151 3237 cv
948.151 3218.91 954.579 3204.24 962.509 3204.24 cv
970.439 3204.24 976.867 3218.91 976.867 3237 cv
cp
f
1170.1 3237 mo
1170.1 3255.09 1163.68 3269.75 1155.75 3269.75 cv
1147.82 3269.75 1141.39 3255.09 1141.39 3237 cv
1141.39 3218.91 1147.82 3204.24 1155.75 3204.24 cv
1163.68 3204.24 1170.1 3218.91 1170.1 3237 cv
cp
f
878.005 3105.53 mo
878.005 3123.62 871.577 3138.29 863.647 3138.29 cv
855.717 3138.29 849.289 3123.62 849.289 3105.53 cv
849.289 3087.44 855.717 3072.78 863.647 3072.78 cv
871.577 3072.78 878.005 3087.44 878.005 3105.53 cv
cp
f
1073.64 3105.53 mo
1073.64 3123.62 1067.21 3138.29 1059.28 3138.29 cv
1051.35 3138.29 1044.92 3123.62 1044.92 3105.53 cv
1044.92 3087.44 1051.35 3072.78 1059.28 3072.78 cv
1067.21 3072.78 1073.64 3087.44 1073.64 3105.53 cv
cp
f
1266.87 3105.53 mo
1266.87 3123.62 1260.44 3138.29 1252.51 3138.29 cv
1244.58 3138.29 1238.16 3123.62 1238.16 3105.53 cv
1238.16 3087.44 1244.58 3072.78 1252.51 3072.78 cv
1260.44 3072.78 1266.87 3087.44 1266.87 3105.53 cv
cp
f
684.469 3105.53 mo
684.469 3123.62 678.04 3138.29 670.11 3138.29 cv
662.181 3138.29 655.752 3123.62 655.752 3105.53 cv
655.752 3087.44 662.181 3072.78 670.11 3072.78 cv
678.04 3072.78 684.469 3087.44 684.469 3105.53 cv
cp
f
1592.44 2689.34 mo
1592.44 2693.73 1596 2697.3 1600.4 2697.3 cv
1600.44 2697.3 li
1604.81 2697.28 1608.36 2693.72 1608.36 2689.34 cv
1608.36 2684.96 1604.81 2681.4 1600.44 2681.38 cv
1600.4 2681.38 li
1596 2681.38 1592.44 2684.94 1592.44 2689.34 cv
cp
.11882 .11882 .11882 rgb
f
1697.41 2689.34 mo
1697.41 2693.73 1700.97 2697.3 1705.37 2697.3 cv
1705.4 2697.3 li
1709.78 2697.28 1713.33 2693.72 1713.33 2689.34 cv
1713.33 2684.96 1709.78 2681.4 1705.4 2681.38 cv
1705.37 2681.38 li
1700.97 2681.38 1697.41 2684.94 1697.41 2689.34 cv
cp
f
1981.9 2416.52 mo
1975.59 2422.98 1958.84 2440.13 1951.72 2495.85 cv
1951.69 2495.84 li
1951.64 2496.42 1951.56 2497 1951.42 2497.58 cv
1949.65 2505.16 1941.25 2509.68 1932.66 2507.67 cv
1924.06 2505.66 1918.53 2497.89 1920.3 2490.31 cv
1920.48 2489.57 1920.73 2488.88 1921.01 2488.21 cv
1928.17 2436.97 1943.54 2412.46 1953.64 2400.35 cv
1956.17 2397.33 1986.55 2397.17 1981.9 2416.52 cv
cp
.819608 .568627 .0823529 rgb
f
2081.68 2237.87 mo
2079.28 2207.35 2106.4 2161.42 2106.4 2161.42 cv
2106.4 2161.42 2085.13 2192.42 2039.77 2209.3 cv
2056.41 2214.53 2070.93 2224.6 2081.68 2237.87 cv
cp
f
1980.86 2211.65 mo
1936.65 2194.64 1915.91 2164.41 1915.91 2164.41 cv
1915.91 2164.41 1945.87 2215.15 1940.02 2245.41 cv
1949.8 2230.33 1964.04 2218.45 1980.86 2211.65 cv
cp
f
2199.21 2480.31 mo
2187.9 2417.89 2158.55 2351.45 2085.5 2344.13 cv
2095.49 2329.81 2101.36 2312.36 2101.36 2293.54 cv
2101.36 2272.43 2093.98 2253.05 2081.68 2237.87 cv
2070.93 2224.6 2056.41 2214.53 2039.77 2209.3 cv
2031.5 2206.71 2022.71 2205.31 2013.59 2205.31 cv
2002.02 2205.31 1990.98 2207.57 1980.86 2211.65 cv
1964.04 2218.45 1949.8 2230.33 1940.02 2245.41 cv
1931.04 2259.25 1925.81 2275.78 1925.81 2293.54 cv
1925.81 2321.3 1938.57 2346.05 1958.51 2362.23 cv
1957.9 2362.31 li
1957.9 2362.31 1927.67 2524.06 2004.78 2566.01 cv
2004.78 2566.01 1918.43 2556.14 1918.43 2593.15 cv
2204.42 2593.15 li
2204.61 2593.15 li
2204.63 2593.1 li
2204.79 2591.31 2209.57 2537.51 2199.21 2480.31 cv
cp
.984314 .776471 .372549 rgb
f
2012.83 2310.07 mo
1998.55 2310.07 1987.52 2281.45 2012.83 2281.45 cv
2038.14 2281.45 2027.12 2310.07 2012.83 2310.07 cv
cp
.11882 .11882 .11882 rgb
f
2040.18 2317.35 mo
2040.13 2317.37 2035.88 2319.65 2030.4 2319.65 cv
2030.36 2319.65 li
2030.14 2319.65 2029.91 2319.64 2029.69 2319.63 cv
2023.09 2319.4 2017.68 2315.96 2013.56 2309.39 cv
2013.32 2308.99 2013.07 2308.58 2012.83 2308.16 cv
2012.59 2308.58 2012.35 2308.99 2012.1 2309.39 cv
2007.99 2315.96 2002.57 2319.4 1995.98 2319.63 cv
1995.75 2319.64 1995.53 2319.65 1995.3 2319.65 cv
1995.26 2319.65 li
1989.79 2319.65 1985.53 2317.37 1985.49 2317.35 cv
1985.04 2318.73 li
1985.22 2318.83 1989.54 2321.15 1995.26 2321.15 cv
1995.67 2321.15 1996.07 2321.13 1996.47 2321.11 cv
1999.38 2320.94 2002.12 2320.14 2004.63 2318.72 cv
2007.75 2316.96 2010.51 2314.22 2012.83 2310.59 cv
2015.16 2314.22 2017.91 2316.96 2021.04 2318.72 cv
2023.54 2320.14 2026.28 2320.94 2029.2 2321.11 cv
2029.6 2321.13 2030 2321.15 2030.4 2321.15 cv
2036.12 2321.15 2040.44 2318.83 2040.62 2318.73 cv
2040.18 2317.35 li
cp
f
2034.78 2260.4 mo
2034.78 2263.07 2036.93 2265.24 2039.6 2265.27 cv
2039.6 2255.52 li
2036.93 2255.55 2034.78 2257.72 2034.78 2260.4 cv
cp
.564706 .47451 .352941 rgb
f
2034.78 2260.4 mo
2034.78 2257.72 2036.93 2255.55 2039.6 2255.52 cv
2039.6 2265.27 li
2036.93 2265.24 2034.78 2263.07 2034.78 2260.4 cv
cp
2039.66 2247.33 mo
2039.6 2247.33 li
2032.41 2247.36 2026.59 2253.2 2026.59 2260.4 cv
2026.59 2267.6 2032.41 2273.43 2039.6 2273.47 cv
2039.66 2273.47 li
2046.88 2273.47 2052.73 2267.62 2052.73 2260.4 cv
2052.73 2253.18 2046.88 2247.33 2039.66 2247.33 cv
cp
.11882 .11882 .11882 rgb
f
1982.63 2260.4 mo
1982.63 2263.07 1984.79 2265.24 1987.45 2265.27 cv
1987.45 2255.52 li
1984.79 2255.55 1982.63 2257.72 1982.63 2260.4 cv
cp
.564706 .47451 .352941 rgb
f
1982.63 2260.4 mo
1982.63 2257.72 1984.79 2255.55 1987.45 2255.52 cv
1987.45 2265.27 li
1984.79 2265.24 1982.63 2263.07 1982.63 2260.4 cv
cp
1987.51 2247.33 mo
1987.45 2247.33 li
1980.26 2247.36 1974.44 2253.2 1974.44 2260.4 cv
1974.44 2267.6 1980.26 2273.43 1987.45 2273.47 cv
1987.51 2273.47 li
1994.73 2273.47 2000.58 2267.62 2000.58 2260.4 cv
2000.58 2253.18 1994.73 2247.33 1987.51 2247.33 cv
cp
.11882 .11882 .11882 rgb
f
2204.57 2593.23 mo
2204.61 2593.15 li
2204.42 2593.15 li
2204.57 2593.23 li
cp
.945098 .352941 .141176 rgb
f
2465.07 2481.86 mo
2465.07 2481.86 2431.16 2567.29 2364.94 2497.14 cv
2364.94 2497.14 2257.68 2387.07 2199.21 2480.31 cv
2209.57 2537.51 2204.79 2591.31 2204.63 2593.1 cv
2216.52 2564.36 2469.81 2725.29 2465.07 2481.86 cv
cp
.819608 .568627 .0823529 rgb
f
2204.62 2593.15 mo
2204.63 2593.1 li
2204.61 2593.15 li
2204.62 2593.15 li
cp
.8 .560784 .301961 rgb
f
2044.31 2427.7 mo
2038 2434.16 2021.25 2451.31 2014.12 2507.03 cv
2014.1 2507.02 li
2014.05 2507.6 2013.97 2508.18 2013.83 2508.76 cv
2012.06 2516.34 2003.66 2520.86 1995.07 2518.85 cv
1986.47 2516.84 1980.94 2509.07 1982.71 2501.49 cv
1982.88 2500.76 1983.13 2500.06 1983.42 2499.39 cv
1990.58 2448.15 2005.95 2423.64 2016.05 2411.53 cv
2018.58 2408.51 2048.96 2408.35 2044.31 2427.7 cv
cp
.819608 .568627 .0823529 rgb
f
2082.43 2295.76 mo
2082.43 2304.52 2075.32 2311.63 2066.56 2311.63 cv
2057.79 2311.63 2050.69 2304.52 2050.69 2295.76 cv
2050.69 2286.99 2057.79 2279.89 2066.56 2279.89 cv
2075.32 2279.89 2082.43 2286.99 2082.43 2295.76 cv
cp
.847059 .670588 .501961 rgb
f
1971.81 2295.76 mo
1971.81 2304.52 1964.7 2311.63 1955.94 2311.63 cv
1947.18 2311.63 1940.07 2304.52 1940.07 2295.76 cv
1940.07 2286.99 1947.18 2279.89 1955.94 2279.89 cv
1964.7 2279.89 1971.81 2286.99 1971.81 2295.76 cv
cp
f
1973.11 3575.65 mo
1943.45 3575.65 1919.4 3589.64 1919.4 3606.91 cv
1919.4 3608.42 1919.6 3609.91 1919.96 3611.37 cv
2026.27 3611.37 li
2026.63 3609.91 2026.82 3608.42 2026.82 3606.91 cv
2026.82 3589.64 2002.78 3575.65 1973.11 3575.65 cv
cp
.61 .61 .61 rgb
f
1986.96 3413.48 mo
1948.69 3426.75 li
1948.69 3426.75 1900.64 3579.1 2044.79 3636.23 cv
2044.79 3636.23 1977.79 3573.09 1986.96 3413.48 cv
cp
1 1 1 rgb
f
2290.63 3504.83 mo
2286.48 3504.83 2282.52 3505.59 2278.88 3506.97 cv
2266.95 3511.49 2258.5 3522.66 2258.5 3535.74 cv
2258.5 3549.66 2268.07 3561.43 2281.23 3565.3 cv
2284.2 3566.17 2287.36 3566.65 2290.63 3566.65 cv
2308.37 3566.65 2322.75 3552.81 2322.75 3535.74 cv
2322.75 3518.67 2308.37 3504.83 2290.63 3504.83 cv
cp
.61 .61 .61 rgb
f
2010.71 3149.7 mo
2028.97 3106.37 2053.48 3075.04 2065.45 3079.71 cv
2077.43 3084.39 2072.35 3123.3 2054.09 3166.62 cv
2044.78 3188.73 2033.83 3207.71 2023.75 3220.38 cv
2026.55 3221.28 2029.35 3222.26 2032.13 3223.35 cv
2034.61 3224.31 2037.04 3225.35 2039.43 3226.44 cv
2050.61 3208.51 2061.79 3186.91 2071.83 3163.09 cv
2101.83 3091.9 2110.19 3027.96 2090.5 3020.28 cv
2070.81 3012.6 2030.53 3064.09 2000.53 3135.28 cv
1988.58 3163.64 1980.07 3190.85 1975.39 3213.81 cv
1981.21 3213.56 1987.11 3213.68 1993.04 3214.19 cv
1994.12 3197.88 2000.25 3174.51 2010.71 3149.7 cv
cp
.25 .25 .25 rgb
f
2065.45 3079.71 mo
2053.48 3075.04 2028.97 3106.37 2010.71 3149.7 cv
2000.25 3174.51 1994.12 3197.88 1993.04 3214.19 cv
2003.25 3215.07 2013.56 3217.11 2023.75 3220.38 cv
2033.83 3207.71 2044.78 3188.73 2054.09 3166.62 cv
2072.35 3123.3 2077.43 3084.39 2065.45 3079.71 cv
cp
.898039 .717647 .607843 rgb
f
2112.32 3204.23 mo
2146.06 3173.81 2180.23 3156.16 2188.64 3164.79 cv
2197.05 3173.43 2176.52 3205.09 2142.78 3235.51 cv
2125.13 3251.43 2107.36 3263.85 2093.22 3270.84 cv
2096.27 3275.26 2098.99 3279.83 2101.36 3284.53 cv
2118.32 3273.14 2136.58 3258.89 2154.77 3242.48 cv
2213.03 3189.95 2248.49 3135.28 2233.96 3120.36 cv
2219.44 3105.45 2160.43 3135.94 2102.17 3188.48 cv
2084.54 3204.37 2069.01 3220.45 2056.31 3235.58 cv
2062.38 3239.44 2068.04 3243.71 2073.24 3248.32 cv
2081.5 3235.41 2095.2 3219.67 2112.32 3204.23 cv
cp
.25 .25 .25 rgb
f
2188.64 3164.79 mo
2180.23 3156.16 2146.06 3173.81 2112.32 3204.23 cv
2095.2 3219.67 2081.5 3235.41 2073.24 3248.32 cv
2080.93 3255.15 2087.63 3262.73 2093.22 3270.84 cv
2107.36 3263.85 2125.13 3251.43 2142.78 3235.51 cv
2176.52 3205.09 2197.05 3173.43 2188.64 3164.79 cv
cp
.898039 .717647 .607843 rgb
f
2258.5 3535.74 mo
2258.5 3522.66 2266.95 3511.49 2278.88 3506.97 cv
2263.94 3464.43 2216.48 3416.96 2103.15 3373.7 cv
2103.91 3372.14 2104.63 3370.55 2105.31 3368.94 cv
2117.03 3341.14 2114.66 3310.91 2101.36 3284.53 cv
2098.99 3279.83 2096.27 3275.26 2093.22 3270.84 cv
2087.63 3262.73 2080.93 3255.15 2073.24 3248.32 cv
2068.04 3243.71 2062.38 3239.44 2056.31 3235.58 cv
2051 3232.2 2045.36 3229.14 2039.43 3226.44 cv
2037.04 3225.35 2034.61 3224.31 2032.13 3223.35 cv
2029.35 3222.26 2026.55 3221.28 2023.75 3220.38 cv
2013.56 3217.11 2003.25 3215.07 1993.04 3214.19 cv
1987.11 3213.68 1981.21 3213.56 1975.39 3213.81 cv
1930.81 3215.72 1890.73 3239.62 1874.22 3278.8 cv
1850.83 3334.32 1883.59 3399.5 1947.41 3424.4 cv
1960.21 3429.39 1973.28 3432.38 1986.19 3433.52 cv
1983.44 3578.39 2044.79 3636.23 2044.79 3636.23 cv
2237 3636.23 li
2237 3636.23 2270.46 3607.45 2281.23 3565.3 cv
2268.07 3561.43 2258.5 3549.66 2258.5 3535.74 cv
cp
.25 .25 .25 rgb
f
1981.31 3270.84 mo
1981.31 3277.7 1974.58 3283.27 1966.28 3283.27 cv
1957.97 3283.27 1951.24 3277.7 1951.24 3270.84 cv
1951.24 3263.97 1957.97 3258.4 1966.28 3258.4 cv
1974.58 3258.4 1981.31 3263.97 1981.31 3270.84 cv
cp
1 1 1 rgb
f
2038.28 3305.71 mo
2038.28 3312.58 2031.55 3318.15 2023.25 3318.15 cv
2014.94 3318.15 2008.21 3312.58 2008.21 3305.71 cv
2008.21 3298.85 2014.94 3293.28 2023.25 3293.28 cv
2031.55 3293.28 2038.28 3298.85 2038.28 3305.71 cv
cp
f
1967.98 3266.32 mo
1967.98 3269.66 1964.71 3272.37 1960.66 3272.37 cv
1956.62 3272.37 1953.34 3269.66 1953.34 3266.32 cv
1953.34 3262.97 1956.62 3260.26 1960.66 3260.26 cv
1964.71 3260.26 1967.98 3262.97 1967.98 3266.32 cv
cp
.11 .11 .11 rgb
f
2025.01 3301.19 mo
2025.01 3304.54 2021.74 3307.25 2017.69 3307.25 cv
2013.65 3307.25 2010.37 3304.54 2010.37 3301.19 cv
2010.37 3297.85 2013.65 3295.14 2017.69 3295.14 cv
2021.74 3295.14 2025.01 3297.85 2025.01 3301.19 cv
cp
f
1959.59 3339.93 mo
1959.59 3339.93 1909.19 3307.19 1938.12 3378.02 cv
2015.6 3362.73 1959.59 3339.93 1959.59 3339.93 cv
cp
0 0 0 rgb
f
2174.88 3613.07 mo
2141.62 3613.07 2114.04 3626.25 2108.95 3643.49 cv
2240.82 3643.49 li
2235.73 3626.25 2208.15 3613.07 2174.88 3613.07 cv
cp
.61 .61 .61 rgb
f
1991.08 3600.5 mo
1961.42 3600.5 1937.37 3614.5 1937.37 3631.76 cv
1937.37 3633.28 1937.57 3634.77 1937.93 3636.23 cv
2044.24 3636.23 li
2044.6 3634.77 2044.79 3633.28 2044.79 3631.76 cv
2044.79 3614.5 2020.75 3600.5 1991.08 3600.5 cv
cp
f
839.843 718.388 mo
839.832 717.941 839.817 717.493 839.783 717.049 cv
839.76 716.572 839.743 716.098 839.719 715.619 cv
839.638 715.622 li
837.399 698.964 818.596 685.959 795.732 685.959 cv
771.813 685.959 752.352 700.193 751.635 717.951 cv
751.523 717.954 li
756.839 824.286 730.062 902.792 674.088 944.986 cv
655.347 959.113 636.047 967.109 620.119 971.634 cv
620.119 593.329 li
620.119 545.523 579.815 506.767 530.1 506.767 cv
480.384 506.767 440.081 545.523 440.081 593.329 cv
440.081 780.252 li
423.132 776.116 401.188 767.982 379.961 751.98 cv
323.987 709.787 297.21 631.28 302.525 524.948 cv
302.413 524.945 li
301.697 507.187 282.237 492.954 258.317 492.954 cv
235.452 492.954 216.651 505.958 214.412 522.616 cv
214.33 522.613 li
214.307 523.092 214.289 523.566 214.267 524.044 cv
214.233 524.487 214.217 524.935 214.207 525.383 cv
211.161 592.557 219.921 650.682 240.27 698.172 cv
257.956 739.444 284.515 773.24 319.209 798.621 cv
347.951 819.65 382.764 834.958 419.884 842.895 cv
427.193 844.457 433.973 845.606 440.081 846.451 cv
440.081 1179.94 li
440.081 1185.88 444.846 1190.74 450.671 1190.74 cv
609.528 1190.74 li
615.353 1190.74 620.119 1185.88 620.119 1179.94 cv
620.119 1038.53 li
624.531 1037.82 629.225 1036.96 634.164 1035.9 cv
671.285 1027.96 706.099 1012.66 734.841 991.627 cv
769.535 966.245 796.094 932.45 813.779 891.178 cv
834.128 843.687 842.888 785.562 839.843 718.388 cv
.972549 .698039 .321569 rgb
f
gsave
549.42 613.882 mo
546.341 613.882 543.845 611.386 543.845 608.307 cv
543.845 605.228 546.341 602.731 549.42 602.731 cv
552.499 602.731 554.995 605.228 554.995 608.307 cv
554.995 611.386 552.499 613.882 549.42 613.882 cv
clp
543.845 602.731 mo
554.995 602.731 li
554.995 613.882 li
543.845 613.882 li
cp
.988235 .886274 .741176 rgb
f
grestore
593.901 613.882 mo
590.821 613.882 588.325 611.386 588.325 608.307 cv
588.325 605.228 590.821 602.731 593.901 602.731 cv
596.979 602.731 599.475 605.228 599.475 608.307 cv
599.475 611.386 596.979 613.882 593.901 613.882 cv
.988235 .886274 .741176 rgb
f
460.149 613.882 mo
457.07 613.882 454.574 611.386 454.574 608.307 cv
454.574 605.228 457.07 602.731 460.149 602.731 cv
463.228 602.731 465.724 605.228 465.724 608.307 cv
465.724 611.386 463.228 613.882 460.149 613.882 cv
f
504.629 613.882 mo
501.55 613.882 499.054 611.386 499.054 608.307 cv
499.054 605.228 501.55 602.731 504.629 602.731 cv
507.708 602.731 510.204 605.228 510.204 608.307 cv
510.204 611.386 507.708 613.882 504.629 613.882 cv
f
527.025 653.385 mo
523.946 653.385 521.449 650.889 521.449 647.81 cv
521.449 644.73 523.946 642.235 527.025 642.235 cv
530.104 642.235 532.599 644.73 532.599 647.81 cv
532.599 650.889 530.104 653.385 527.025 653.385 cv
f
571.504 653.385 mo
568.426 653.385 565.93 650.889 565.93 647.81 cv
565.93 644.73 568.426 642.235 571.504 642.235 cv
574.583 642.235 577.08 644.73 577.08 647.81 cv
577.08 650.889 574.583 653.385 571.504 653.385 cv
f
482.234 653.385 mo
479.155 653.385 476.658 650.889 476.658 647.81 cv
476.658 644.73 479.155 642.235 482.234 642.235 cv
485.312 642.235 487.809 644.73 487.809 647.81 cv
487.809 650.889 485.312 653.385 482.234 653.385 cv
f
527.18 574.068 mo
524.101 574.068 521.605 571.571 521.605 568.492 cv
521.605 565.414 524.101 562.917 527.18 562.917 cv
530.259 562.917 532.756 565.414 532.756 568.492 cv
532.756 571.571 530.259 574.068 527.18 574.068 cv
f
571.66 574.068 mo
568.581 574.068 566.085 571.571 566.085 568.492 cv
566.085 565.414 568.581 562.917 571.66 562.917 cv
574.74 562.917 577.235 565.414 577.235 568.492 cv
577.235 571.571 574.74 574.068 571.66 574.068 cv
f
482.389 574.068 mo
479.31 574.068 476.814 571.571 476.814 568.492 cv
476.814 565.414 479.31 562.917 482.389 562.917 cv
485.468 562.917 487.964 565.414 487.964 568.492 cv
487.964 571.571 485.468 574.068 482.389 574.068 cv
f
549.42 692.535 mo
546.341 692.535 543.845 690.04 543.845 686.961 cv
543.845 683.882 546.341 681.385 549.42 681.385 cv
552.499 681.385 554.995 683.882 554.995 686.961 cv
554.995 690.04 552.499 692.535 549.42 692.535 cv
f
593.901 692.535 mo
590.821 692.535 588.325 690.04 588.325 686.961 cv
588.325 683.882 590.821 681.385 593.901 681.385 cv
596.979 681.385 599.475 683.882 599.475 686.961 cv
599.475 690.04 596.979 692.535 593.901 692.535 cv
f
460.149 692.535 mo
457.07 692.535 454.574 690.04 454.574 686.961 cv
454.574 683.882 457.07 681.385 460.149 681.385 cv
463.228 681.385 465.724 683.882 465.724 686.961 cv
465.724 690.04 463.228 692.535 460.149 692.535 cv
f
504.629 692.535 mo
501.55 692.535 499.054 690.04 499.054 686.961 cv
499.054 683.882 501.55 681.385 504.629 681.385 cv
507.708 681.385 510.204 683.882 510.204 686.961 cv
510.204 690.04 507.708 692.535 504.629 692.535 cv
f
549.42 774.341 mo
546.341 774.341 543.845 771.846 543.845 768.767 cv
543.845 765.688 546.341 763.191 549.42 763.191 cv
552.499 763.191 554.995 765.688 554.995 768.767 cv
554.995 771.846 552.499 774.341 549.42 774.341 cv
f
593.901 774.341 mo
590.821 774.341 588.325 771.846 588.325 768.767 cv
588.325 765.688 590.821 763.191 593.901 763.191 cv
596.979 763.191 599.475 765.688 599.475 768.767 cv
599.475 771.846 596.979 774.341 593.901 774.341 cv
f
460.149 774.341 mo
457.07 774.341 454.574 771.846 454.574 768.767 cv
454.574 765.688 457.07 763.191 460.149 763.191 cv
463.228 763.191 465.724 765.688 465.724 768.767 cv
465.724 771.846 463.228 774.341 460.149 774.341 cv
f
504.629 774.341 mo
501.55 774.341 499.054 771.846 499.054 768.767 cv
499.054 765.688 501.55 763.191 504.629 763.191 cv
507.708 763.191 510.204 765.688 510.204 768.767 cv
510.204 771.846 507.708 774.341 504.629 774.341 cv
f
527.025 813.845 mo
523.946 813.845 521.449 811.348 521.449 808.269 cv
521.449 805.19 523.946 802.695 527.025 802.695 cv
530.104 802.695 532.599 805.19 532.599 808.269 cv
532.599 811.348 530.104 813.845 527.025 813.845 cv
f
571.504 813.845 mo
568.426 813.845 565.93 811.348 565.93 808.269 cv
565.93 805.19 568.426 802.695 571.504 802.695 cv
574.583 802.695 577.08 805.19 577.08 808.269 cv
577.08 811.348 574.583 813.845 571.504 813.845 cv
f
482.234 813.845 mo
479.155 813.845 476.658 811.348 476.658 808.269 cv
476.658 805.19 479.155 802.695 482.234 802.695 cv
485.312 802.695 487.809 805.19 487.809 808.269 cv
487.809 811.348 485.312 813.845 482.234 813.845 cv
f
527.18 734.527 mo
524.101 734.527 521.605 732.031 521.605 728.952 cv
521.605 725.873 524.101 723.377 527.18 723.377 cv
530.259 723.377 532.756 725.873 532.756 728.952 cv
532.756 732.031 530.259 734.527 527.18 734.527 cv
f
571.66 734.527 mo
568.581 734.527 566.085 732.031 566.085 728.952 cv
566.085 725.873 568.581 723.377 571.66 723.377 cv
574.74 723.377 577.235 725.873 577.235 728.952 cv
577.235 732.031 574.74 734.527 571.66 734.527 cv
f
482.389 734.527 mo
479.31 734.527 476.814 732.031 476.814 728.952 cv
476.814 725.873 479.31 723.377 482.389 723.377 cv
485.468 723.377 487.964 725.873 487.964 728.952 cv
487.964 732.031 485.468 734.527 482.389 734.527 cv
f
549.42 852.995 mo
546.341 852.995 543.845 850.5 543.845 847.42 cv
543.845 844.341 546.341 841.845 549.42 841.845 cv
552.499 841.845 554.995 844.341 554.995 847.42 cv
554.995 850.5 552.499 852.995 549.42 852.995 cv
f
593.901 852.995 mo
590.821 852.995 588.325 850.5 588.325 847.42 cv
588.325 844.341 590.821 841.845 593.901 841.845 cv
596.979 841.845 599.475 844.341 599.475 847.42 cv
599.475 850.5 596.979 852.995 593.901 852.995 cv
f
460.149 852.995 mo
457.07 852.995 454.574 850.5 454.574 847.42 cv
454.574 844.341 457.07 841.845 460.149 841.845 cv
463.228 841.845 465.724 844.341 465.724 847.42 cv
465.724 850.5 463.228 852.995 460.149 852.995 cv
f
504.629 852.995 mo
501.55 852.995 499.054 850.5 499.054 847.42 cv
499.054 844.341 501.55 841.845 504.629 841.845 cv
507.708 841.845 510.204 844.341 510.204 847.42 cv
510.204 850.5 507.708 852.995 504.629 852.995 cv
f
549.42 929.365 mo
546.341 929.365 543.845 926.869 543.845 923.79 cv
543.845 920.711 546.341 918.215 549.42 918.215 cv
552.499 918.215 554.995 920.711 554.995 923.79 cv
554.995 926.869 552.499 929.365 549.42 929.365 cv
f
593.901 929.365 mo
590.821 929.365 588.325 926.869 588.325 923.79 cv
588.325 920.711 590.821 918.215 593.901 918.215 cv
596.979 918.215 599.475 920.711 599.475 923.79 cv
599.475 926.869 596.979 929.365 593.901 929.365 cv
f
460.149 929.365 mo
457.07 929.365 454.574 926.869 454.574 923.79 cv
454.574 920.711 457.07 918.215 460.149 918.215 cv
463.228 918.215 465.724 920.711 465.724 923.79 cv
465.724 926.869 463.228 929.365 460.149 929.365 cv
f
504.629 929.365 mo
501.55 929.365 499.054 926.869 499.054 923.79 cv
499.054 920.711 501.55 918.215 504.629 918.215 cv
507.708 918.215 510.204 920.711 510.204 923.79 cv
510.204 926.869 507.708 929.365 504.629 929.365 cv
f
527.025 968.868 mo
523.946 968.868 521.449 966.373 521.449 963.294 cv
521.449 960.214 523.946 957.718 527.025 957.718 cv
530.104 957.718 532.599 960.214 532.599 963.294 cv
532.599 966.373 530.104 968.868 527.025 968.868 cv
f
571.504 968.868 mo
568.426 968.868 565.93 966.373 565.93 963.294 cv
565.93 960.214 568.426 957.718 571.504 957.718 cv
574.583 957.718 577.08 960.214 577.08 963.294 cv
577.08 966.373 574.583 968.868 571.504 968.868 cv
f
482.234 968.868 mo
479.155 968.868 476.658 966.373 476.658 963.294 cv
476.658 960.214 479.155 957.718 482.234 957.718 cv
485.312 957.718 487.809 960.214 487.809 963.294 cv
487.809 966.373 485.312 968.868 482.234 968.868 cv
f
527.18 889.55 mo
524.101 889.55 521.605 887.055 521.605 883.976 cv
521.605 880.897 524.101 878.4 527.18 878.4 cv
530.259 878.4 532.756 880.897 532.756 883.976 cv
532.756 887.055 530.259 889.55 527.18 889.55 cv
f
571.66 889.55 mo
568.581 889.55 566.085 887.055 566.085 883.976 cv
566.085 880.897 568.581 878.4 571.66 878.4 cv
574.74 878.4 577.235 880.897 577.235 883.976 cv
577.235 887.055 574.74 889.55 571.66 889.55 cv
f
482.389 889.55 mo
479.31 889.55 476.814 887.055 476.814 883.976 cv
476.814 880.897 479.31 878.4 482.389 878.4 cv
485.468 878.4 487.964 880.897 487.964 883.976 cv
487.964 887.055 485.468 889.55 482.389 889.55 cv
f
549.42 1008.02 mo
546.341 1008.02 543.845 1005.52 543.845 1002.44 cv
543.845 999.364 546.341 996.869 549.42 996.869 cv
552.499 996.869 554.995 999.364 554.995 1002.44 cv
554.995 1005.52 552.499 1008.02 549.42 1008.02 cv
f
593.901 1008.02 mo
590.821 1008.02 588.325 1005.52 588.325 1002.44 cv
588.325 999.364 590.821 996.869 593.901 996.869 cv
596.979 996.869 599.475 999.364 599.475 1002.44 cv
599.475 1005.52 596.979 1008.02 593.901 1008.02 cv
f
460.149 1008.02 mo
457.07 1008.02 454.574 1005.52 454.574 1002.44 cv
454.574 999.364 457.07 996.869 460.149 996.869 cv
463.228 996.869 465.724 999.364 465.724 1002.44 cv
465.724 1005.52 463.228 1008.02 460.149 1008.02 cv
f
504.629 1008.02 mo
501.55 1008.02 499.054 1005.52 499.054 1002.44 cv
499.054 999.364 501.55 996.869 504.629 996.869 cv
507.708 996.869 510.204 999.364 510.204 1002.44 cv
510.204 1005.52 507.708 1008.02 504.629 1008.02 cv
f
549.42 1089.83 mo
546.341 1089.83 543.845 1087.33 543.845 1084.25 cv
543.845 1081.17 546.341 1078.67 549.42 1078.67 cv
552.499 1078.67 554.995 1081.17 554.995 1084.25 cv
554.995 1087.33 552.499 1089.83 549.42 1089.83 cv
f
593.901 1089.83 mo
590.821 1089.83 588.325 1087.33 588.325 1084.25 cv
588.325 1081.17 590.821 1078.67 593.901 1078.67 cv
596.979 1078.67 599.475 1081.17 599.475 1084.25 cv
599.475 1087.33 596.979 1089.83 593.901 1089.83 cv
f
460.149 1089.83 mo
457.07 1089.83 454.574 1087.33 454.574 1084.25 cv
454.574 1081.17 457.07 1078.67 460.149 1078.67 cv
463.228 1078.67 465.724 1081.17 465.724 1084.25 cv
465.724 1087.33 463.228 1089.83 460.149 1089.83 cv
f
504.629 1089.83 mo
501.55 1089.83 499.054 1087.33 499.054 1084.25 cv
499.054 1081.17 501.55 1078.67 504.629 1078.67 cv
507.708 1078.67 510.204 1081.17 510.204 1084.25 cv
510.204 1087.33 507.708 1089.83 504.629 1089.83 cv
f
527.025 1129.33 mo
523.946 1129.33 521.449 1126.83 521.449 1123.75 cv
521.449 1120.67 523.946 1118.18 527.025 1118.18 cv
530.104 1118.18 532.599 1120.67 532.599 1123.75 cv
532.599 1126.83 530.104 1129.33 527.025 1129.33 cv
f
571.504 1129.33 mo
568.426 1129.33 565.93 1126.83 565.93 1123.75 cv
565.93 1120.67 568.426 1118.18 571.504 1118.18 cv
574.583 1118.18 577.08 1120.67 577.08 1123.75 cv
577.08 1126.83 574.583 1129.33 571.504 1129.33 cv
f
482.234 1129.33 mo
479.155 1129.33 476.658 1126.83 476.658 1123.75 cv
476.658 1120.67 479.155 1118.18 482.234 1118.18 cv
485.312 1118.18 487.809 1120.67 487.809 1123.75 cv
487.809 1126.83 485.312 1129.33 482.234 1129.33 cv
f
527.18 1050.01 mo
524.101 1050.01 521.605 1047.51 521.605 1044.44 cv
521.605 1041.36 524.101 1038.86 527.18 1038.86 cv
530.259 1038.86 532.756 1041.36 532.756 1044.44 cv
532.756 1047.51 530.259 1050.01 527.18 1050.01 cv
f
571.66 1050.01 mo
568.581 1050.01 566.085 1047.51 566.085 1044.44 cv
566.085 1041.36 568.581 1038.86 571.66 1038.86 cv
574.74 1038.86 577.235 1041.36 577.235 1044.44 cv
577.235 1047.51 574.74 1050.01 571.66 1050.01 cv
f
482.389 1050.01 mo
479.31 1050.01 476.814 1047.51 476.814 1044.44 cv
476.814 1041.36 479.31 1038.86 482.389 1038.86 cv
485.468 1038.86 487.964 1041.36 487.964 1044.44 cv
487.964 1047.51 485.468 1050.01 482.389 1050.01 cv
f
549.42 1168.48 mo
546.341 1168.48 543.845 1165.98 543.845 1162.9 cv
543.845 1159.82 546.341 1157.33 549.42 1157.33 cv
552.499 1157.33 554.995 1159.82 554.995 1162.9 cv
554.995 1165.98 552.499 1168.48 549.42 1168.48 cv
f
593.901 1168.48 mo
590.821 1168.48 588.325 1165.98 588.325 1162.9 cv
588.325 1159.82 590.821 1157.33 593.901 1157.33 cv
596.979 1157.33 599.475 1159.82 599.475 1162.9 cv
599.475 1165.98 596.979 1168.48 593.901 1168.48 cv
f
460.149 1168.48 mo
457.07 1168.48 454.574 1165.98 454.574 1162.9 cv
454.574 1159.82 457.07 1157.33 460.149 1157.33 cv
463.228 1157.33 465.724 1159.82 465.724 1162.9 cv
465.724 1165.98 463.228 1168.48 460.149 1168.48 cv
f
504.629 1168.48 mo
501.55 1168.48 499.054 1165.98 499.054 1162.9 cv
499.054 1159.82 501.55 1157.33 504.629 1157.33 cv
507.708 1157.33 510.204 1159.82 510.204 1162.9 cv
510.204 1165.98 507.708 1168.48 504.629 1168.48 cv
f
466.18 435.111 mo
489.431 470.228 li
514.961 427.462 li
532.584 472.911 li
552.073 428.23 li
575.811 472.016 li
600.495 437.892 li
600.495 437.892 639.002 506.139 534.366 517.788 cv
533.47 517.888 529.837 517.812 528.946 517.676 cv
424.881 501.706 466.18 435.111 466.18 435.111 cv
cp
.819608 .294118 .278431 rgb
f
3466.42 2597.04 mo
3466.43 2596.66 3466.44 2596.28 3466.46 2595.9 cv
3466.47 2595.49 3466.48 2595.09 3466.5 2594.68 cv
3466.55 2594.68 li
3467.94 2580.5 3479.59 2569.43 3493.75 2569.43 cv
3508.57 2569.43 3520.63 2581.55 3521.07 2596.67 cv
3521.14 2596.67 li
3517.85 2687.2 3534.44 2754.04 3569.11 2789.96 cv
3580.73 2801.99 3592.68 2808.79 3602.55 2812.65 cv
3602.55 2490.57 li
3602.55 2449.87 3627.52 2416.87 3658.32 2416.87 cv
3689.12 2416.87 3714.09 2449.87 3714.09 2490.57 cv
3714.09 2649.71 li
3724.59 2646.19 3738.19 2639.26 3751.34 2625.64 cv
3786.02 2589.72 3802.61 2522.88 3799.31 2432.35 cv
3799.38 2432.35 li
3799.83 2417.23 3811.89 2405.11 3826.7 2405.11 cv
3840.87 2405.11 3852.52 2416.18 3853.91 2430.36 cv
3853.96 2430.36 li
3853.97 2430.77 3853.98 2431.17 3854 2431.58 cv
3854.02 2431.96 3854.03 2432.34 3854.03 2432.72 cv
3855.92 2489.91 3850.49 2539.4 3837.88 2579.83 cv
3826.93 2614.97 3810.47 2643.74 3788.98 2665.35 cv
3771.17 2683.25 3749.6 2696.28 3726.61 2703.04 cv
3722.08 2704.37 3717.88 2705.35 3714.09 2706.07 cv
3714.09 2989.99 li
3714.09 2995.05 3711.14 2999.18 3707.53 2999.18 cv
3609.11 2999.18 li
3605.5 2999.18 3602.55 2995.05 3602.55 2989.99 cv
3602.55 2869.6 li
3599.82 2869 3596.91 2868.26 3593.85 2867.36 cv
3570.85 2860.6 3549.28 2847.57 3531.48 2829.67 cv
3509.98 2808.06 3493.53 2779.29 3482.57 2744.15 cv
3469.96 2703.72 3464.54 2654.23 3466.42 2597.04 cv
0 .407843 .215686 rgb
f
3669.43 2644.09 mo
3667.52 2644.09 3665.98 2642.54 3665.98 2640.63 cv
3665.98 2638.72 3667.52 2637.18 3669.43 2637.18 cv
3671.34 2637.18 3672.89 2638.72 3672.89 2640.63 cv
3672.89 2642.54 3671.34 2644.09 3669.43 2644.09 cv
.619608 .776471 .701961 rgb
f
3696.99 2644.09 mo
3695.08 2644.09 3693.53 2642.54 3693.53 2640.63 cv
3693.53 2638.72 3695.08 2637.18 3696.99 2637.18 cv
3698.9 2637.18 3700.44 2638.72 3700.44 2640.63 cv
3700.44 2642.54 3698.9 2644.09 3696.99 2644.09 cv
f
3614.12 2644.09 mo
3612.22 2644.09 3610.67 2642.54 3610.67 2640.63 cv
3610.67 2638.72 3612.22 2637.18 3614.12 2637.18 cv
3616.03 2637.18 3617.58 2638.72 3617.58 2640.63 cv
3617.58 2642.54 3616.03 2644.09 3614.12 2644.09 cv
f
3641.68 2644.09 mo
3639.77 2644.09 3638.23 2642.54 3638.23 2640.63 cv
3638.23 2638.72 3639.77 2637.18 3641.68 2637.18 cv
3643.59 2637.18 3645.13 2638.72 3645.13 2640.63 cv
3645.13 2642.54 3643.59 2644.09 3641.68 2644.09 cv
f
3655.56 2668.56 mo
3653.65 2668.56 3652.1 2667.01 3652.1 2665.11 cv
3652.1 2663.2 3653.65 2661.65 3655.56 2661.65 cv
3657.46 2661.65 3659.01 2663.2 3659.01 2665.11 cv
3659.01 2667.01 3657.46 2668.56 3655.56 2668.56 cv
f
3683.11 2668.56 mo
3681.21 2668.56 3679.66 2667.01 3679.66 2665.11 cv
3679.66 2663.2 3681.21 2661.65 3683.11 2661.65 cv
3685.02 2661.65 3686.57 2663.2 3686.57 2665.11 cv
3686.57 2667.01 3685.02 2668.56 3683.11 2668.56 cv
f
3627.81 2668.56 mo
3625.9 2668.56 3624.35 2667.01 3624.35 2665.11 cv
3624.35 2663.2 3625.9 2661.65 3627.81 2661.65 cv
3629.71 2661.65 3631.26 2663.2 3631.26 2665.11 cv
3631.26 2667.01 3629.71 2668.56 3627.81 2668.56 cv
f
3655.65 2619.42 mo
3653.74 2619.42 3652.2 2617.87 3652.2 2615.97 cv
3652.2 2614.06 3653.74 2612.51 3655.65 2612.51 cv
3657.56 2612.51 3659.11 2614.06 3659.11 2615.97 cv
3659.11 2617.87 3657.56 2619.42 3655.65 2619.42 cv
f
3683.21 2619.42 mo
3681.3 2619.42 3679.76 2617.87 3679.76 2615.97 cv
3679.76 2614.06 3681.3 2612.51 3683.21 2612.51 cv
3685.12 2612.51 3686.66 2614.06 3686.66 2615.97 cv
3686.66 2617.87 3685.12 2619.42 3683.21 2619.42 cv
f
3627.9 2619.42 mo
3625.99 2619.42 3624.45 2617.87 3624.45 2615.97 cv
3624.45 2614.06 3625.99 2612.51 3627.9 2612.51 cv
3629.81 2612.51 3631.36 2614.06 3631.36 2615.97 cv
3631.36 2617.87 3629.81 2619.42 3627.9 2619.42 cv
f
3669.43 2692.82 mo
3667.52 2692.82 3665.98 2691.27 3665.98 2689.36 cv
3665.98 2687.45 3667.52 2685.91 3669.43 2685.91 cv
3671.34 2685.91 3672.89 2687.45 3672.89 2689.36 cv
3672.89 2691.27 3671.34 2692.82 3669.43 2692.82 cv
f
3696.99 2692.82 mo
3695.08 2692.82 3693.53 2691.27 3693.53 2689.36 cv
3693.53 2687.45 3695.08 2685.91 3696.99 2685.91 cv
3698.9 2685.91 3700.44 2687.45 3700.44 2689.36 cv
3700.44 2691.27 3698.9 2692.82 3696.99 2692.82 cv
f
3614.12 2692.82 mo
3612.22 2692.82 3610.67 2691.27 3610.67 2689.36 cv
3610.67 2687.45 3612.22 2685.91 3614.12 2685.91 cv
3616.03 2685.91 3617.58 2687.45 3617.58 2689.36 cv
3617.58 2691.27 3616.03 2692.82 3614.12 2692.82 cv
f
3641.68 2692.82 mo
3639.77 2692.82 3638.23 2691.27 3638.23 2689.36 cv
3638.23 2687.45 3639.77 2685.91 3641.68 2685.91 cv
3643.59 2685.91 3645.13 2687.45 3645.13 2689.36 cv
3645.13 2691.27 3643.59 2692.82 3641.68 2692.82 cv
f
3669.43 2743.5 mo
3667.52 2743.5 3665.98 2741.95 3665.98 2740.04 cv
3665.98 2738.14 3667.52 2736.59 3669.43 2736.59 cv
3671.34 2736.59 3672.89 2738.14 3672.89 2740.04 cv
3672.89 2741.95 3671.34 2743.5 3669.43 2743.5 cv
f
3696.99 2743.5 mo
3695.08 2743.5 3693.53 2741.95 3693.53 2740.04 cv
3693.53 2738.14 3695.08 2736.59 3696.99 2736.59 cv
3698.9 2736.59 3700.44 2738.14 3700.44 2740.04 cv
3700.44 2741.95 3698.9 2743.5 3696.99 2743.5 cv
f
3614.12 2743.5 mo
3612.22 2743.5 3610.67 2741.95 3610.67 2740.04 cv
3610.67 2738.14 3612.22 2736.59 3614.12 2736.59 cv
3616.03 2736.59 3617.58 2738.14 3617.58 2740.04 cv
3617.58 2741.95 3616.03 2743.5 3614.12 2743.5 cv
f
3641.68 2743.5 mo
3639.77 2743.5 3638.23 2741.95 3638.23 2740.04 cv
3638.23 2738.14 3639.77 2736.59 3641.68 2736.59 cv
3643.59 2736.59 3645.13 2738.14 3645.13 2740.04 cv
3645.13 2741.95 3643.59 2743.5 3641.68 2743.5 cv
f
3655.56 2767.97 mo
3653.65 2767.97 3652.1 2766.43 3652.1 2764.52 cv
3652.1 2762.61 3653.65 2761.06 3655.56 2761.06 cv
3657.46 2761.06 3659.01 2762.61 3659.01 2764.52 cv
3659.01 2766.43 3657.46 2767.97 3655.56 2767.97 cv
f
3683.11 2767.97 mo
3681.21 2767.97 3679.66 2766.43 3679.66 2764.52 cv
3679.66 2762.61 3681.21 2761.06 3683.11 2761.06 cv
3685.02 2761.06 3686.57 2762.61 3686.57 2764.52 cv
3686.57 2766.43 3685.02 2767.97 3683.11 2767.97 cv
f
3627.81 2767.97 mo
3625.9 2767.97 3624.35 2766.43 3624.35 2764.52 cv
3624.35 2762.61 3625.9 2761.06 3627.81 2761.06 cv
3629.71 2761.06 3631.26 2762.61 3631.26 2764.52 cv
3631.26 2766.43 3629.71 2767.97 3627.81 2767.97 cv
f
3655.65 2718.83 mo
3653.74 2718.83 3652.2 2717.29 3652.2 2715.38 cv
3652.2 2713.47 3653.74 2711.92 3655.65 2711.92 cv
3657.56 2711.92 3659.11 2713.47 3659.11 2715.38 cv
3659.11 2717.29 3657.56 2718.83 3655.65 2718.83 cv
f
3683.21 2718.83 mo
3681.3 2718.83 3679.76 2717.29 3679.76 2715.38 cv
3679.76 2713.47 3681.3 2711.92 3683.21 2711.92 cv
3685.12 2711.92 3686.66 2713.47 3686.66 2715.38 cv
3686.66 2717.29 3685.12 2718.83 3683.21 2718.83 cv
f
3627.9 2718.83 mo
3625.99 2718.83 3624.45 2717.29 3624.45 2715.38 cv
3624.45 2713.47 3625.99 2711.92 3627.9 2711.92 cv
3629.81 2711.92 3631.36 2713.47 3631.36 2715.38 cv
3631.36 2717.29 3629.81 2718.83 3627.9 2718.83 cv
f
3669.43 2492.84 mo
3667.52 2492.84 3665.98 2491.3 3665.98 2489.39 cv
3665.98 2487.48 3667.52 2485.94 3669.43 2485.94 cv
3671.34 2485.94 3672.89 2487.48 3672.89 2489.39 cv
3672.89 2491.3 3671.34 2492.84 3669.43 2492.84 cv
f
3696.99 2492.84 mo
3695.08 2492.84 3693.53 2491.3 3693.53 2489.39 cv
3693.53 2487.48 3695.08 2485.94 3696.99 2485.94 cv
3698.9 2485.94 3700.44 2487.48 3700.44 2489.39 cv
3700.44 2491.3 3698.9 2492.84 3696.99 2492.84 cv
f
3614.12 2492.84 mo
3612.22 2492.84 3610.67 2491.3 3610.67 2489.39 cv
3610.67 2487.48 3612.22 2485.94 3614.12 2485.94 cv
3616.03 2485.94 3617.58 2487.48 3617.58 2489.39 cv
3617.58 2491.3 3616.03 2492.84 3614.12 2492.84 cv
f
3641.68 2492.84 mo
3639.77 2492.84 3638.23 2491.3 3638.23 2489.39 cv
3638.23 2487.48 3639.77 2485.94 3641.68 2485.94 cv
3643.59 2485.94 3645.14 2487.48 3645.14 2489.39 cv
3645.14 2491.3 3643.59 2492.84 3641.68 2492.84 cv
f
3655.56 2517.32 mo
3653.65 2517.32 3652.1 2515.77 3652.1 2513.86 cv
3652.1 2511.96 3653.65 2510.41 3655.56 2510.41 cv
3657.46 2510.41 3659.01 2511.96 3659.01 2513.86 cv
3659.01 2515.77 3657.46 2517.32 3655.56 2517.32 cv
f
3683.11 2517.32 mo
3681.21 2517.32 3679.66 2515.77 3679.66 2513.86 cv
3679.66 2511.96 3681.21 2510.41 3683.11 2510.41 cv
3685.02 2510.41 3686.57 2511.96 3686.57 2513.86 cv
3686.57 2515.77 3685.02 2517.32 3683.11 2517.32 cv
f
3627.81 2517.32 mo
3625.9 2517.32 3624.35 2515.77 3624.35 2513.86 cv
3624.35 2511.96 3625.9 2510.41 3627.81 2510.41 cv
3629.71 2510.41 3631.26 2511.96 3631.26 2513.86 cv
3631.26 2515.77 3629.71 2517.32 3627.81 2517.32 cv
f
3655.65 2468.18 mo
3653.74 2468.18 3652.2 2466.63 3652.2 2464.72 cv
3652.2 2462.82 3653.74 2461.27 3655.65 2461.27 cv
3657.56 2461.27 3659.11 2462.82 3659.11 2464.72 cv
3659.11 2466.63 3657.56 2468.18 3655.65 2468.18 cv
f
3683.21 2468.18 mo
3681.3 2468.18 3679.76 2466.63 3679.76 2464.72 cv
3679.76 2462.82 3681.3 2461.27 3683.21 2461.27 cv
3685.12 2461.27 3686.66 2462.82 3686.66 2464.72 cv
3686.66 2466.63 3685.12 2468.18 3683.21 2468.18 cv
f
3627.9 2468.18 mo
3625.99 2468.18 3624.45 2466.63 3624.45 2464.72 cv
3624.45 2462.82 3625.99 2461.27 3627.9 2461.27 cv
3629.81 2461.27 3631.36 2462.82 3631.36 2464.72 cv
3631.36 2466.63 3629.81 2468.18 3627.9 2468.18 cv
f
3669.43 2541.57 mo
3667.52 2541.57 3665.98 2540.03 3665.98 2538.12 cv
3665.98 2536.21 3667.52 2534.67 3669.43 2534.67 cv
3671.34 2534.67 3672.89 2536.21 3672.89 2538.12 cv
3672.89 2540.03 3671.34 2541.57 3669.43 2541.57 cv
f
3696.99 2541.57 mo
3695.08 2541.57 3693.53 2540.03 3693.53 2538.12 cv
3693.53 2536.21 3695.08 2534.67 3696.99 2534.67 cv
3698.9 2534.67 3700.44 2536.21 3700.44 2538.12 cv
3700.44 2540.03 3698.9 2541.57 3696.99 2541.57 cv
f
3614.12 2541.57 mo
3612.22 2541.57 3610.67 2540.03 3610.67 2538.12 cv
3610.67 2536.21 3612.22 2534.67 3614.12 2534.67 cv
3616.03 2534.67 3617.58 2536.21 3617.58 2538.12 cv
3617.58 2540.03 3616.03 2541.57 3614.12 2541.57 cv
f
3641.68 2541.57 mo
3639.77 2541.57 3638.23 2540.03 3638.23 2538.12 cv
3638.23 2536.21 3639.77 2534.67 3641.68 2534.67 cv
3643.59 2534.67 3645.14 2536.21 3645.14 2538.12 cv
3645.14 2540.03 3643.59 2541.57 3641.68 2541.57 cv
f
3669.43 2592.26 mo
3667.52 2592.26 3665.98 2590.71 3665.98 2588.8 cv
3665.98 2586.9 3667.52 2585.35 3669.43 2585.35 cv
3671.34 2585.35 3672.89 2586.9 3672.89 2588.8 cv
3672.89 2590.71 3671.34 2592.26 3669.43 2592.26 cv
f
3696.99 2592.26 mo
3695.08 2592.26 3693.53 2590.71 3693.53 2588.8 cv
3693.53 2586.9 3695.08 2585.35 3696.99 2585.35 cv
3698.9 2585.35 3700.44 2586.9 3700.44 2588.8 cv
3700.44 2590.71 3698.9 2592.26 3696.99 2592.26 cv
f
3614.12 2592.26 mo
3612.22 2592.26 3610.67 2590.71 3610.67 2588.8 cv
3610.67 2586.9 3612.22 2585.35 3614.12 2585.35 cv
3616.03 2585.35 3617.58 2586.9 3617.58 2588.8 cv
3617.58 2590.71 3616.03 2592.26 3614.12 2592.26 cv
f
3641.68 2592.26 mo
3639.77 2592.26 3638.23 2590.71 3638.23 2588.8 cv
3638.23 2586.9 3639.77 2585.35 3641.68 2585.35 cv
3643.59 2585.35 3645.14 2586.9 3645.14 2588.8 cv
3645.14 2590.71 3643.59 2592.26 3641.68 2592.26 cv
f
3655.65 2567.59 mo
3653.74 2567.59 3652.2 2566.04 3652.2 2564.14 cv
3652.2 2562.23 3653.74 2560.68 3655.65 2560.68 cv
3657.56 2560.68 3659.11 2562.23 3659.11 2564.14 cv
3659.11 2566.04 3657.56 2567.59 3655.65 2567.59 cv
f
3683.21 2567.59 mo
3681.3 2567.59 3679.76 2566.04 3679.76 2564.14 cv
3679.76 2562.23 3681.3 2560.68 3683.21 2560.68 cv
3685.12 2560.68 3686.66 2562.23 3686.66 2564.14 cv
3686.66 2566.04 3685.12 2567.59 3683.21 2567.59 cv
f
3627.9 2567.59 mo
3625.99 2567.59 3624.45 2566.04 3624.45 2564.14 cv
3624.45 2562.23 3625.99 2560.68 3627.9 2560.68 cv
3629.81 2560.68 3631.36 2562.23 3631.36 2564.14 cv
3631.36 2566.04 3629.81 2567.59 3627.9 2567.59 cv
f
3669.43 2792.23 mo
3667.52 2792.23 3665.98 2790.68 3665.98 2788.77 cv
3665.98 2786.87 3667.52 2785.32 3669.43 2785.32 cv
3671.34 2785.32 3672.89 2786.87 3672.89 2788.77 cv
3672.89 2790.68 3671.34 2792.23 3669.43 2792.23 cv
f
3696.99 2792.23 mo
3695.08 2792.23 3693.53 2790.68 3693.53 2788.77 cv
3693.53 2786.87 3695.08 2785.32 3696.99 2785.32 cv
3698.9 2785.32 3700.44 2786.87 3700.44 2788.77 cv
3700.44 2790.68 3698.9 2792.23 3696.99 2792.23 cv
f
3614.12 2792.23 mo
3612.22 2792.23 3610.67 2790.68 3610.67 2788.77 cv
3610.67 2786.87 3612.22 2785.32 3614.12 2785.32 cv
3616.03 2785.32 3617.58 2786.87 3617.58 2788.77 cv
3617.58 2790.68 3616.03 2792.23 3614.12 2792.23 cv
f
3641.68 2792.23 mo
3639.77 2792.23 3638.23 2790.68 3638.23 2788.77 cv
3638.23 2786.87 3639.77 2785.32 3641.68 2785.32 cv
3643.59 2785.32 3645.13 2786.87 3645.13 2788.77 cv
3645.13 2790.68 3643.59 2792.23 3641.68 2792.23 cv
f
3669.43 2839.54 mo
3667.52 2839.54 3665.98 2838 3665.98 2836.09 cv
3665.98 2834.18 3667.52 2832.63 3669.43 2832.63 cv
3671.34 2832.63 3672.89 2834.18 3672.89 2836.09 cv
3672.89 2838 3671.34 2839.54 3669.43 2839.54 cv
f
3696.99 2839.54 mo
3695.08 2839.54 3693.53 2838 3693.53 2836.09 cv
3693.53 2834.18 3695.08 2832.63 3696.99 2832.63 cv
3698.9 2832.63 3700.44 2834.18 3700.44 2836.09 cv
3700.44 2838 3698.9 2839.54 3696.99 2839.54 cv
f
3614.12 2839.54 mo
3612.22 2839.54 3610.67 2838 3610.67 2836.09 cv
3610.67 2834.18 3612.22 2832.63 3614.12 2832.63 cv
3616.03 2832.63 3617.58 2834.18 3617.58 2836.09 cv
3617.58 2838 3616.03 2839.54 3614.12 2839.54 cv
f
3641.68 2839.54 mo
3639.77 2839.54 3638.23 2838 3638.23 2836.09 cv
3638.23 2834.18 3639.77 2832.63 3641.68 2832.63 cv
3643.59 2832.63 3645.13 2834.18 3645.13 2836.09 cv
3645.13 2838 3643.59 2839.54 3641.68 2839.54 cv
f
3655.56 2864.02 mo
3653.65 2864.02 3652.1 2862.47 3652.1 2860.56 cv
3652.1 2858.66 3653.65 2857.11 3655.56 2857.11 cv
3657.46 2857.11 3659.01 2858.66 3659.01 2860.56 cv
3659.01 2862.47 3657.46 2864.02 3655.56 2864.02 cv
f
3683.11 2864.02 mo
3681.21 2864.02 3679.66 2862.47 3679.66 2860.56 cv
3679.66 2858.66 3681.21 2857.11 3683.11 2857.11 cv
3685.02 2857.11 3686.57 2858.66 3686.57 2860.56 cv
3686.57 2862.47 3685.02 2864.02 3683.11 2864.02 cv
f
3627.81 2864.02 mo
3625.9 2864.02 3624.35 2862.47 3624.35 2860.56 cv
3624.35 2858.66 3625.9 2857.11 3627.81 2857.11 cv
3629.71 2857.11 3631.26 2858.66 3631.26 2860.56 cv
3631.26 2862.47 3629.71 2864.02 3627.81 2864.02 cv
f
3655.65 2814.88 mo
3653.74 2814.88 3652.2 2813.33 3652.2 2811.42 cv
3652.2 2809.51 3653.74 2807.97 3655.65 2807.97 cv
3657.56 2807.97 3659.11 2809.51 3659.11 2811.42 cv
3659.11 2813.33 3657.56 2814.88 3655.65 2814.88 cv
f
3683.21 2814.88 mo
3681.3 2814.88 3679.76 2813.33 3679.76 2811.42 cv
3679.76 2809.51 3681.3 2807.97 3683.21 2807.97 cv
3685.12 2807.97 3686.66 2809.51 3686.66 2811.42 cv
3686.66 2813.33 3685.12 2814.88 3683.21 2814.88 cv
f
3627.9 2814.88 mo
3625.99 2814.88 3624.45 2813.33 3624.45 2811.42 cv
3624.45 2809.51 3625.99 2807.97 3627.9 2807.97 cv
3629.81 2807.97 3631.36 2809.51 3631.36 2811.42 cv
3631.36 2813.33 3629.81 2814.88 3627.9 2814.88 cv
f
3669.43 2888.27 mo
3667.52 2888.27 3665.98 2886.73 3665.98 2884.82 cv
3665.98 2882.91 3667.52 2881.36 3669.43 2881.36 cv
3671.34 2881.36 3672.89 2882.91 3672.89 2884.82 cv
3672.89 2886.73 3671.34 2888.27 3669.43 2888.27 cv
f
3696.99 2888.27 mo
3695.08 2888.27 3693.53 2886.73 3693.53 2884.82 cv
3693.53 2882.91 3695.08 2881.36 3696.99 2881.36 cv
3698.9 2881.36 3700.44 2882.91 3700.44 2884.82 cv
3700.44 2886.73 3698.9 2888.27 3696.99 2888.27 cv
f
3614.12 2888.27 mo
3612.22 2888.27 3610.67 2886.73 3610.67 2884.82 cv
3610.67 2882.91 3612.22 2881.36 3614.12 2881.36 cv
3616.03 2881.36 3617.58 2882.91 3617.58 2884.82 cv
3617.58 2886.73 3616.03 2888.27 3614.12 2888.27 cv
f
3641.68 2888.27 mo
3639.77 2888.27 3638.23 2886.73 3638.23 2884.82 cv
3638.23 2882.91 3639.77 2881.36 3641.68 2881.36 cv
3643.59 2881.36 3645.13 2882.91 3645.13 2884.82 cv
3645.13 2886.73 3643.59 2888.27 3641.68 2888.27 cv
f
3669.43 2938.96 mo
3667.52 2938.96 3665.98 2937.41 3665.98 2935.5 cv
3665.98 2933.59 3667.52 2932.05 3669.43 2932.05 cv
3671.34 2932.05 3672.89 2933.59 3672.89 2935.5 cv
3672.89 2937.41 3671.34 2938.96 3669.43 2938.96 cv
f
3696.99 2938.96 mo
3695.08 2938.96 3693.53 2937.41 3693.53 2935.5 cv
3693.53 2933.59 3695.08 2932.05 3696.99 2932.05 cv
3698.9 2932.05 3700.44 2933.59 3700.44 2935.5 cv
3700.44 2937.41 3698.9 2938.96 3696.99 2938.96 cv
f
3614.12 2938.96 mo
3612.22 2938.96 3610.67 2937.41 3610.67 2935.5 cv
3610.67 2933.59 3612.22 2932.05 3614.12 2932.05 cv
3616.03 2932.05 3617.58 2933.59 3617.58 2935.5 cv
3617.58 2937.41 3616.03 2938.96 3614.12 2938.96 cv
f
3641.68 2938.96 mo
3639.77 2938.96 3638.23 2937.41 3638.23 2935.5 cv
3638.23 2933.59 3639.77 2932.05 3641.68 2932.05 cv
3643.59 2932.05 3645.13 2933.59 3645.13 2935.5 cv
3645.13 2937.41 3643.59 2938.96 3641.68 2938.96 cv
f
3655.56 2963.43 mo
3653.65 2963.43 3652.1 2961.88 3652.1 2959.97 cv
3652.1 2958.07 3653.65 2956.52 3655.56 2956.52 cv
3657.46 2956.52 3659.01 2958.07 3659.01 2959.97 cv
3659.01 2961.88 3657.46 2963.43 3655.56 2963.43 cv
f
3683.11 2963.43 mo
3681.21 2963.43 3679.66 2961.88 3679.66 2959.97 cv
3679.66 2958.07 3681.21 2956.52 3683.11 2956.52 cv
3685.02 2956.52 3686.57 2958.07 3686.57 2959.97 cv
3686.57 2961.88 3685.02 2963.43 3683.11 2963.43 cv
f
3627.81 2963.43 mo
3625.9 2963.43 3624.35 2961.88 3624.35 2959.97 cv
3624.35 2958.07 3625.9 2956.52 3627.81 2956.52 cv
3629.71 2956.52 3631.26 2958.07 3631.26 2959.97 cv
3631.26 2961.88 3629.71 2963.43 3627.81 2963.43 cv
f
3655.65 2914.29 mo
3653.74 2914.29 3652.2 2912.74 3652.2 2910.83 cv
3652.2 2908.93 3653.74 2907.38 3655.65 2907.38 cv
3657.56 2907.38 3659.11 2908.93 3659.11 2910.83 cv
3659.11 2912.74 3657.56 2914.29 3655.65 2914.29 cv
f
3683.21 2914.29 mo
3681.3 2914.29 3679.76 2912.74 3679.76 2910.83 cv
3679.76 2908.93 3681.3 2907.38 3683.21 2907.38 cv
3685.12 2907.38 3686.66 2908.93 3686.66 2910.83 cv
3686.66 2912.74 3685.12 2914.29 3683.21 2914.29 cv
f
3627.9 2914.29 mo
3625.99 2914.29 3624.45 2912.74 3624.45 2910.83 cv
3624.45 2908.93 3625.99 2907.38 3627.9 2907.38 cv
3629.81 2907.38 3631.36 2908.93 3631.36 2910.83 cv
3631.36 2912.74 3629.81 2914.29 3627.9 2914.29 cv
f
3669.43 2987.68 mo
3667.52 2987.68 3665.98 2986.14 3665.98 2984.23 cv
3665.98 2982.32 3667.52 2980.78 3669.43 2980.78 cv
3671.34 2980.78 3672.89 2982.32 3672.89 2984.23 cv
3672.89 2986.14 3671.34 2987.68 3669.43 2987.68 cv
f
3696.99 2987.68 mo
3695.08 2987.68 3693.53 2986.14 3693.53 2984.23 cv
3693.53 2982.32 3695.08 2980.78 3696.99 2980.78 cv
3698.9 2980.78 3700.44 2982.32 3700.44 2984.23 cv
3700.44 2986.14 3698.9 2987.68 3696.99 2987.68 cv
f
3614.12 2987.68 mo
3612.22 2987.68 3610.67 2986.14 3610.67 2984.23 cv
3610.67 2982.32 3612.22 2980.78 3614.12 2980.78 cv
3616.03 2980.78 3617.58 2982.32 3617.58 2984.23 cv
3617.58 2986.14 3616.03 2987.68 3614.12 2987.68 cv
f
3641.68 2987.68 mo
3639.77 2987.68 3638.23 2986.14 3638.23 2984.23 cv
3638.23 2982.32 3639.77 2980.78 3641.68 2980.78 cv
3643.59 2980.78 3645.13 2982.32 3645.13 2984.23 cv
3645.13 2986.14 3643.59 2987.68 3641.68 2987.68 cv
f
3469.88 2541.63 mo
3478.96 2555.34 li
3488.92 2538.64 li
3495.8 2556.38 li
3503.41 2538.94 li
3512.68 2556.03 li
3522.31 2542.71 li
3522.31 2542.71 3537.34 2569.36 3496.5 2573.9 cv
3496.15 2573.94 3494.73 2573.91 3494.38 2573.86 cv
3453.76 2567.63 3469.88 2541.63 3469.88 2541.63 cv
cp
.878431 .317647 .317647 rgb
f
3799.26 2377.6 mo
3808.34 2391.31 li
3818.31 2374.62 li
3825.19 2392.36 li
3832.79 2374.92 li
3842.06 2392.01 li
3851.7 2378.69 li
3851.7 2378.69 3866.73 2405.33 3825.88 2409.88 cv
3825.53 2409.92 3824.11 2409.89 3823.77 2409.84 cv
3783.14 2403.6 3799.26 2377.6 3799.26 2377.6 cv
cp
f
792.623 2752.38 mo
793.432 2753.87 793.947 2755.46 793.947 2757.13 cv
793.947 2757.84 793.785 2758.53 793.632 2759.21 cv
751.952 2759.21 li
751.798 2758.53 751.636 2757.84 751.636 2757.13 cv
751.636 2749.36 761.108 2743.07 772.792 2743.07 cv
774.247 2743.07 775.666 2743.17 777.038 2743.35 cv
758.099 2689.1 li
762.073 2688.72 766.046 2688.21 770.017 2687.62 cv
792.623 2752.38 li
cp
.937255 .917647 .392157 rgb
f
739.732 2746.02 mo
740.54 2747.51 741.056 2749.1 741.056 2750.77 cv
741.056 2751.49 740.894 2752.17 740.74 2752.85 cv
699.06 2752.85 li
698.907 2752.17 698.745 2751.49 698.745 2750.77 cv
698.745 2743.01 708.216 2736.71 719.901 2736.71 cv
721.355 2736.71 722.775 2736.81 724.146 2736.99 cv
706.65 2686.87 li
710.977 2687.73 715.362 2688.37 719.779 2688.86 cv
739.732 2746.02 li
cp
f
794.278 2536.87 mo
793.647 2540.9 789.395 2556.56 788.906 2559.88 cv
782.97 2600.13 868.086 2599.7 933.161 2549.11 cv
949.499 2603.18 861.247 2673.95 770.017 2687.62 cv
766.046 2688.21 762.073 2688.72 758.099 2689.1 cv
745.198 2690.3 732.336 2690.27 719.779 2688.86 cv
715.362 2688.37 710.977 2687.73 706.65 2686.87 cv
642.574 2674.21 589.793 2621.19 588.857 2498.32 cv
588.851 2497.43 588.808 2496.59 588.806 2495.69 cv
504.825 2250.39 li
504.674 2249.95 li
504.674 2249.95 868.234 2064.38 794.278 2536.87 cv
cp
.223529 .709804 .290196 rgb
f
708.1 2532.44 mo
708.1 2532.44 715.734 2532.62 727.696 2534.1 cv
720.299 2567.25 li
726.506 2568.63 li
734.018 2534.97 li
738.334 2535.6 743.008 2536.37 748.009 2537.36 cv
740.342 2571.72 li
746.548 2573.1 li
754.233 2538.67 li
758.373 2539.58 762.667 2540.64 767.056 2541.84 cv
760.183 2572.64 li
766.39 2574.02 li
773.179 2543.6 li
777.528 2544.92 781.941 2546.39 786.373 2548.03 cv
780.997 2572.12 li
787.203 2573.5 li
792.371 2550.35 li
796.448 2552 800.516 2553.82 804.539 2555.79 cv
800.725 2572.88 li
806.931 2574.27 li
810.381 2558.81 li
832.173 2570.55 851.961 2587.5 863.066 2612.02 cv
863.066 2612.02 718.196 2624.35 691.051 2596.71 cv
708.1 2532.44 li
cp
0 .407843 .215686 rgb
f
740.342 2571.72 mo
748.009 2537.36 li
750.037 2537.76 752.118 2538.2 754.233 2538.67 cv
746.548 2573.1 li
740.342 2571.72 li
cp
.937255 .917647 .392157 rgb
f
760.183 2572.64 mo
767.056 2541.84 li
769.08 2542.4 771.12 2542.98 773.179 2543.6 cv
766.39 2574.02 li
760.183 2572.64 li
cp
f
780.997 2572.12 mo
786.373 2548.03 li
788.371 2548.77 790.371 2549.53 792.371 2550.35 cv
787.203 2573.5 li
780.997 2572.12 li
cp
f
800.725 2572.88 mo
804.539 2555.79 li
806.501 2556.75 808.446 2557.76 810.381 2558.81 cv
806.931 2574.27 li
800.725 2572.88 li
cp
f
720.299 2567.25 mo
727.696 2534.1 li
729.679 2534.35 731.812 2534.64 734.018 2534.97 cv
726.506 2568.63 li
720.299 2567.25 li
cp
f
629.65 2305.35 mo
629.65 2313.86 636.548 2320.76 645.058 2320.76 cv
653.567 2320.76 660.466 2313.86 660.466 2305.35 cv
660.466 2296.84 653.567 2289.94 645.058 2289.94 cv
636.548 2289.94 629.65 2296.84 629.65 2305.35 cv
cp
.266667 .188235 .164706 rgb
f
555.788 2398.85 mo
588.755 2495.14 li
588.757 2496.04 588.8 2496.88 588.806 2497.77 cv
238.333 2497.77 li
238.309 2497.68 li
277.525 2462.8 378.307 2393.65 555.788 2398.85 cv
cp
.87451 .792157 .294118 rgb
f
504.774 2249.84 mo
555.788 2398.85 li
378.307 2393.65 277.525 2462.8 238.309 2497.68 cv
237.782 2495.76 154.725 2190.68 504.774 2249.84 cv
cp
.937255 .917647 .392157 rgb
f
530.795 1560.07 mo
530.795 1535.48 548.635 1515.54 570.641 1515.54 cv
592.648 1515.54 610.487 1535.48 610.487 1560.07 cv
610.487 1584.65 592.648 1604.59 570.641 1604.59 cv
548.635 1604.59 530.795 1584.65 530.795 1560.07 cv
cp
682.25 1506.79 mo
682.25 1490.4 694.143 1477.11 708.814 1477.11 cv
723.485 1477.11 735.378 1490.4 735.378 1506.79 cv
735.378 1523.19 723.485 1536.48 708.814 1536.48 cv
694.143 1536.48 682.25 1523.19 682.25 1506.79 cv
cp
873.905 1560.07 mo
873.905 1535.48 891.745 1515.54 913.751 1515.54 cv
935.757 1515.54 953.597 1535.48 953.597 1560.07 cv
953.597 1584.65 935.757 1604.59 913.751 1604.59 cv
891.745 1604.59 873.905 1584.65 873.905 1560.07 cv
cp
953.597 1445.77 mo
953.597 1429.38 965.49 1416.09 980.161 1416.09 cv
994.832 1416.09 1006.73 1429.38 1006.73 1445.77 cv
1006.73 1462.17 994.832 1475.46 980.161 1475.46 cv
965.49 1475.46 953.597 1462.17 953.597 1445.77 cv
cp
1046.57 1096.12 mo
1031.9 1096.12 1020.01 1082.83 1020.01 1066.44 cv
1020.01 1050.05 1031.9 1036.76 1046.57 1036.76 cv
1061.24 1036.76 1073.14 1050.05 1073.14 1066.44 cv
1073.14 1082.83 1061.24 1096.12 1046.57 1096.12 cv
cp
351.267 1449.42 mo
358.807 1468.96 369.988 1488.72 384.499 1508.15 cv
395.552 1522.96 406.814 1535.28 415.934 1544.41 cv
411.811 1554.15 409.022 1564.17 407.686 1574.39 cv
406.766 1588.42 li
406.766 1588.42 li
406.766 1588.42 li
406.766 1959.8 li
487.651 1959.8 li
481.76 1948.01 467.97 1939.73 451.899 1939.73 cv
451.061 1939.73 450.233 1939.77 449.409 1939.81 cv
449.409 1701.1 li
449.409 1701.1 499.793 1722.11 534.271 1738.19 cv
534.271 1959.8 li
614.007 1959.8 li
608.116 1948.01 594.326 1939.73 578.255 1939.73 cv
577.805 1939.73 577.36 1939.75 576.914 1939.76 cv
576.914 1755.36 li
635.086 1775.48 704.435 1787.16 778.896 1787.16 cv
853.357 1787.16 922.706 1775.48 980.878 1755.36 cv
980.878 1959.8 li
1055.89 1959.8 li
1050.41 1948.85 1038.13 1940.93 1023.52 1939.87 cv
1023.52 1738.19 li
1058 1722.11 1108.38 1704.27 1108.38 1704.27 cv
1108.38 1959.8 li
1183.65 1959.8 li
1178.14 1948.79 1165.75 1940.84 1151.03 1939.85 cv
1151.03 1608.24 li
1151.03 1594.83 li
1147.86 1595.49 1144.59 1595.84 1141.25 1595.84 cv
1111.91 1595.84 1088.12 1569.26 1088.12 1536.48 cv
1088.12 1503.69 1111.91 1477.11 1141.25 1477.11 cv
1144.59 1477.11 1147.86 1477.46 1151.03 1478.12 cv
1151.03 1477.16 li
1148.41 1409.78 li
1142.43 1413.78 1135.44 1416.09 1127.97 1416.09 cv
1105.96 1416.09 1088.12 1396.16 1088.12 1371.57 cv
1088.12 1346.98 1105.96 1327.05 1127.97 1327.05 cv
1134.21 1327.05 1140.11 1328.66 1145.37 1331.53 cv
1141.55 1233.06 li
1134.87 1227.67 1130.52 1218.91 1130.52 1209 cv
1130.52 1200.02 1134.1 1191.98 1139.74 1186.54 cv
1135.76 1084.09 li
1122.96 1073.25 1114.68 1056.09 1114.68 1036.76 cv
1114.68 1019.28 1121.45 1003.57 1132.21 992.707 cv
1125.86 828.989 li
1123.67 842.918 1112.79 853.507 1099.7 853.507 cv
1085.03 853.507 1073.14 840.218 1073.14 823.825 cv
1073.14 807.432 1085.03 794.143 1099.7 794.143 cv
1111.99 794.143 1122.32 803.465 1125.36 816.122 cv
1125.36 816.122 1122.4 742.903 1121.55 734.373 cv
1121.55 734.372 li
1121.55 734.372 1121.87 618.884 1241.9 619.59 cv
1224.13 576.521 1221.36 537.498 1221.36 537.498 cv
1226.91 588.168 1339.9 610.343 1396.09 618.268 cv
1434.6 604.42 1463.4 572.319 1438.21 500.94 cv
1437.69 499.451 1434.27 494.983 1430.01 492.398 cv
1398.87 473.498 1262.65 393.354 1149.99 366.849 cv
1443.98 179.047 1147.74 273.613 1107.61 359.164 cv
1121.27 363.471 li
1087.53 372.587 li
1092.81 394.761 li
1060.6 378.922 li
1045.29 402.152 li
1040.01 375.227 li
1017.84 383.674 li
1019.24 377.668 li
1019.17 377.721 li
1014.19 371.745 1007.64 366.156 999.942 360.972 cv
999.634 360.765 999.327 360.559 999.016 360.353 cv
898.541 293.94 608.564 295.201 1008.84 407.81 cv
1000.68 841.674 li
1023.38 855.294 1038.82 882.067 1038.82 912.87 cv
1038.82 943.674 1023.38 970.446 1000.68 984.066 cv
1000.68 1155.22 li
1006.41 1151.67 1012.99 1149.64 1020.01 1149.64 cv
1042.01 1149.64 1059.85 1169.57 1059.85 1194.16 cv
1059.85 1218.75 1042.01 1238.68 1020.01 1238.68 cv
1012.99 1238.68 1006.41 1236.65 1000.68 1233.1 cv
1000.68 1392.01 li
1000.68 1392.01 951.104 1391.18 893.471 1390.51 cv
888.306 1429.45 858.267 1459.33 821.98 1459.33 cv
785.615 1459.33 755.527 1429.32 750.458 1390.26 cv
705.525 1392.07 662.828 1398.15 623.766 1407.73 cv
623.613 1440.37 599.888 1466.78 570.641 1466.78 cv
552.826 1466.78 537.059 1456.98 527.421 1441.94 cv
486.028 1462.22 453.247 1487.44 432.371 1515.85 cv
425.264 1508.34 417.24 1499.12 409.413 1488.57 cv
389.853 1462.22 367.452 1421.79 371.811 1378.83 cv
371.215 1354.43 381.504 1329.3 395.874 1306.33 cv
427.098 1256.42 346.487 1314.02 340.282 1375.78 cv
337.892 1399.57 341.588 1424.34 351.267 1449.42 cv
cp
.466667 .32549 .231373 rgb
f
1186.72 1972.6 mo
1186.72 1974.35 1186.55 1976.07 1186.24 1977.75 cv
1151.03 1977.75 li
1109.59 1977.75 li
1108.38 1977.75 li
1108.38 1959.8 li
1183.65 1959.8 li
1185.62 1963.74 1186.72 1968.06 1186.72 1972.6 cv
cp
.317647 .305882 .2 rgb
f
490.701 1972.6 mo
490.701 1974.35 490.536 1976.07 490.224 1977.75 cv
449.409 1977.75 li
413.574 1977.75 li
406.766 1977.75 li
406.766 1959.8 li
487.651 1959.8 li
489.615 1963.74 490.701 1968.06 490.701 1972.6 cv
cp
f
617.057 1972.6 mo
617.057 1974.35 616.892 1976.07 616.58 1977.75 cv
576.914 1977.75 li
539.93 1977.75 li
534.271 1977.75 li
534.271 1959.8 li
614.007 1959.8 li
615.971 1963.74 617.057 1968.06 617.057 1972.6 cv
cp
f
1058.95 1972.6 mo
1058.95 1974.35 1058.79 1976.07 1058.47 1977.75 cv
1023.52 1977.75 li
981.824 1977.75 li
980.878 1977.75 li
980.878 1959.8 li
1055.89 1959.8 li
1057.85 1963.74 1058.95 1968.06 1058.95 1972.6 cv
cp
f
1038.82 912.87 mo
1038.82 943.674 1023.38 970.446 1000.68 984.066 cv
1000.68 841.674 li
1023.38 855.294 1038.82 882.067 1038.82 912.87 cv
cp
.976471 .811765 .0352941 rgb
f
821.98 1459.33 mo
785.615 1459.33 755.527 1429.32 750.458 1390.26 cv
759.845 1389.88 769.327 1389.68 778.896 1389.68 cv
812.313 1389.68 854.713 1390.06 893.471 1390.51 cv
888.306 1429.45 858.267 1459.33 821.98 1459.33 cv
cp
f
1114.68 1036.76 mo
1114.68 1019.28 1121.45 1003.57 1132.21 992.707 cv
1135.76 1084.09 li
1122.96 1073.25 1114.68 1056.09 1114.68 1036.76 cv
cp
f
570.641 1466.78 mo
552.826 1466.78 537.059 1456.98 527.421 1441.94 cv
555.828 1428.02 588.295 1416.43 623.766 1407.73 cv
623.613 1440.37 599.888 1466.78 570.641 1466.78 cv
cp
f
1088.12 1536.48 mo
1088.12 1503.69 1111.91 1477.11 1141.25 1477.11 cv
1144.59 1477.11 1147.86 1477.46 1151.03 1478.12 cv
1151.03 1574.39 li
1151.03 1594.83 li
1147.86 1595.49 1144.59 1595.84 1141.25 1595.84 cv
1111.91 1595.84 1088.12 1569.26 1088.12 1536.48 cv
cp
f
1059.85 1194.16 mo
1059.85 1218.75 1042.01 1238.68 1020.01 1238.68 cv
1012.99 1238.68 1006.41 1236.65 1000.68 1233.1 cv
1000.68 1155.22 li
1006.41 1151.67 1012.99 1149.64 1020.01 1149.64 cv
1042.01 1149.64 1059.85 1169.57 1059.85 1194.16 cv
cp
f
1127.97 1416.09 mo
1105.96 1416.09 1088.12 1396.16 1088.12 1371.57 cv
1088.12 1346.98 1105.96 1327.05 1127.97 1327.05 cv
1134.21 1327.05 1140.11 1328.66 1145.37 1331.53 cv
1148.41 1409.78 li
1142.43 1413.78 1135.44 1416.09 1127.97 1416.09 cv
cp
f
913.751 1515.54 mo
935.757 1515.54 953.597 1535.48 953.597 1560.07 cv
953.597 1584.65 935.757 1604.59 913.751 1604.59 cv
891.745 1604.59 873.905 1584.65 873.905 1560.07 cv
873.905 1535.48 891.745 1515.54 913.751 1515.54 cv
cp
f
570.641 1515.54 mo
592.648 1515.54 610.487 1535.48 610.487 1560.07 cv
610.487 1584.65 592.648 1604.59 570.641 1604.59 cv
548.635 1604.59 530.795 1584.65 530.795 1560.07 cv
530.795 1535.48 548.635 1515.54 570.641 1515.54 cv
cp
f
1099.7 853.507 mo
1085.03 853.507 1073.14 840.218 1073.14 823.825 cv
1073.14 807.432 1085.03 794.143 1099.7 794.143 cv
1111.99 794.143 1122.32 803.465 1125.36 816.122 cv
1125.86 828.989 li
1123.67 842.918 1112.79 853.507 1099.7 853.507 cv
cp
f
1125.86 828.989 mo
1125.36 816.122 li
1125.94 818.579 1126.26 821.16 1126.26 823.825 cv
1126.26 825.587 1126.12 827.311 1125.86 828.989 cv
cp
f
1020.01 1066.44 mo
1020.01 1050.05 1031.9 1036.76 1046.57 1036.76 cv
1061.24 1036.76 1073.14 1050.05 1073.14 1066.44 cv
1073.14 1082.83 1061.24 1096.12 1046.57 1096.12 cv
1031.9 1096.12 1020.01 1082.83 1020.01 1066.44 cv
cp
f
1130.52 1209 mo
1130.52 1200.02 1134.1 1191.98 1139.74 1186.54 cv
1141.55 1233.06 li
1134.87 1227.67 1130.52 1218.91 1130.52 1209 cv
cp
f
980.161 1416.09 mo
994.832 1416.09 1006.73 1429.38 1006.73 1445.77 cv
1006.73 1462.17 994.832 1475.46 980.161 1475.46 cv
965.49 1475.46 953.597 1462.17 953.597 1445.77 cv
953.597 1429.38 965.49 1416.09 980.161 1416.09 cv
cp
f
708.814 1477.11 mo
723.485 1477.11 735.378 1490.4 735.378 1506.79 cv
735.378 1523.19 723.485 1536.48 708.814 1536.48 cv
694.143 1536.48 682.25 1523.19 682.25 1506.79 cv
682.25 1490.4 694.143 1477.11 708.814 1477.11 cv
cp
f
1167.75 418.467 mo
1158.75 418.467 1151.43 411.148 1151.43 402.152 cv
1151.43 393.156 1158.75 385.837 1167.75 385.837 cv
1176.74 385.837 1184.06 393.156 1184.06 402.152 cv
1184.06 411.148 1176.74 418.467 1167.75 418.467 cv
cp
1 1 1 rgb
f
1116.27 443.807 mo
1107.28 443.807 1099.96 436.489 1099.96 427.492 cv
1099.96 418.496 1107.28 411.178 1116.27 411.178 cv
1125.27 411.178 1132.59 418.496 1132.59 427.492 cv
1132.59 436.489 1125.27 443.807 1116.27 443.807 cv
cp
f
980.161 1416.09 mo
994.832 1416.09 1006.73 1429.38 1006.73 1445.77 cv
1006.73 1462.17 994.832 1475.46 980.161 1475.46 cv
965.49 1475.46 953.597 1462.17 953.597 1445.77 cv
953.597 1429.38 965.49 1416.09 980.161 1416.09 cv
cp
.976471 .811765 .0352941 rgb
f
913.751 1515.54 mo
935.757 1515.54 953.597 1535.48 953.597 1560.07 cv
953.597 1584.65 935.757 1604.59 913.751 1604.59 cv
891.745 1604.59 873.905 1584.65 873.905 1560.07 cv
873.905 1535.48 891.745 1515.54 913.751 1515.54 cv
cp
f
1020.01 1066.44 mo
1020.01 1050.05 1031.9 1036.76 1046.57 1036.76 cv
1061.24 1036.76 1073.14 1050.05 1073.14 1066.44 cv
1073.14 1082.83 1061.24 1096.12 1046.57 1096.12 cv
1031.9 1096.12 1020.01 1082.83 1020.01 1066.44 cv
cp
f
570.641 1515.54 mo
592.648 1515.54 610.487 1535.48 610.487 1560.07 cv
610.487 1584.65 592.648 1604.59 570.641 1604.59 cv
548.635 1604.59 530.795 1584.65 530.795 1560.07 cv
530.795 1535.48 548.635 1515.54 570.641 1515.54 cv
cp
f
708.814 1477.11 mo
723.485 1477.11 735.378 1490.4 735.378 1506.79 cv
735.378 1523.19 723.485 1536.48 708.814 1536.48 cv
694.143 1536.48 682.25 1523.19 682.25 1506.79 cv
682.25 1490.4 694.143 1477.11 708.814 1477.11 cv
cp
f
980.161 1416.09 mo
994.832 1416.09 1006.73 1429.38 1006.73 1445.77 cv
1006.73 1462.17 994.832 1475.46 980.161 1475.46 cv
965.49 1475.46 953.597 1462.17 953.597 1445.77 cv
953.597 1429.38 965.49 1416.09 980.161 1416.09 cv
cp
f
913.751 1515.54 mo
935.757 1515.54 953.597 1535.48 953.597 1560.07 cv
953.597 1584.65 935.757 1604.59 913.751 1604.59 cv
891.745 1604.59 873.905 1584.65 873.905 1560.07 cv
873.905 1535.48 891.745 1515.54 913.751 1515.54 cv
cp
f
1020.01 1066.44 mo
1020.01 1050.05 1031.9 1036.76 1046.57 1036.76 cv
1061.24 1036.76 1073.14 1050.05 1073.14 1066.44 cv
1073.14 1082.83 1061.24 1096.12 1046.57 1096.12 cv
1031.9 1096.12 1020.01 1082.83 1020.01 1066.44 cv
cp
f
1019.24 377.668 mo
1019.17 377.721 li
1014.19 371.745 1007.64 366.156 999.942 360.972 cv
1023.12 360.972 li
1019.24 377.668 li
cp
f
570.641 1515.54 mo
592.648 1515.54 610.487 1535.48 610.487 1560.07 cv
610.487 1584.65 592.648 1604.59 570.641 1604.59 cv
548.635 1604.59 530.795 1584.65 530.795 1560.07 cv
530.795 1535.48 548.635 1515.54 570.641 1515.54 cv
cp
f
708.814 1477.11 mo
723.485 1477.11 735.378 1490.4 735.378 1506.79 cv
735.378 1523.19 723.485 1536.48 708.814 1536.48 cv
694.143 1536.48 682.25 1523.19 682.25 1506.79 cv
682.25 1490.4 694.143 1477.11 708.814 1477.11 cv
cp
f
1087.53 372.587 mo
1092.81 394.761 li
1060.6 378.922 li
1045.29 402.152 li
1040.01 375.227 li
1017.84 383.674 li
1019.24 377.668 li
1040.36 360.334 1071.51 355.833 1107.46 359.478 cv
1107.51 359.374 1107.56 359.269 1107.61 359.164 cv
1121.27 363.471 li
1087.53 372.587 li
cp
f
1159.43 402.152 mo
1159.43 406.744 1163.15 410.467 1167.75 410.467 cv
1172.34 410.467 1176.06 406.744 1176.06 402.152 cv
1176.06 397.56 1172.34 393.837 1167.75 393.837 cv
1163.15 393.837 1159.43 397.56 1159.43 402.152 cv
cp
.14 .14 .14 rgb
f
1107.96 427.492 mo
1107.96 432.085 1111.68 435.807 1116.27 435.807 cv
1120.87 435.807 1124.59 432.085 1124.59 427.492 cv
1124.59 422.9 1120.87 419.178 1116.27 419.178 cv
1111.68 419.178 1107.96 422.9 1107.96 427.492 cv
cp
f
3737.59 1209.93 mo
3684.39 1060.84 3675.6 896.852 3712.19 735.337 cv
3739.94 612.883 3813.2 559.89 3813.2 559.89 cv
3813.2 559.89 3773.08 714.881 3762.91 889.486 cv
3757.98 974.036 3766.71 1070.73 3803.39 1171.73 cv
3804.75 1175.48 li
3805.61 1179.49 li
3806.08 1181.67 3811.77 1208.5 3817.25 1250.52 cv
3744.35 1250.52 li
3741.45 1230.48 3738.82 1216.21 3737.59 1209.93 cv
cp
.368627 .501961 .329412 rgb
f
3674.26 1250.32 mo
3720.51 1167.85 3738.21 1087.64 3725.53 1016.52 cv
3715.69 961.351 3690.55 928.476 3685.87 922.737 cv
3633 875.964 3609.87 804.318 3618.96 715.388 cv
3625.63 650.244 3647.13 598.649 3648.04 596.484 cv
3648.87 594.522 li
3650.02 592.731 li
3681.05 544.482 3692.74 496.18 3694.39 452.943 cv
3697.78 363.655 3679.57 281.914 3679.57 281.914 cv
3679.57 281.914 3726.46 314.617 3738.15 378.882 cv
3753.57 463.647 3737.85 546.043 3692.69 617.34 cv
3685.26 636.301 3623.55 803.586 3719.56 886.844 cv
3719.56 886.844 3759.38 931.238 3773.32 1004.39 cv
3781.37 1046.65 3780.5 1091.39 3770.74 1137.38 cv
3762.83 1174.59 3749.05 1212.68 3729.59 1251.18 cv
3674.26 1250.32 3704.33 1250.52 3674.26 1250.32 cv
cp
.466667 .627451 .360784 rgb
f
3691.31 920.189 mo
3734.1 803.028 3741.17 674.152 3711.74 547.223 cv
3689.43 450.99 3630.51 409.343 3630.51 409.343 cv
3630.51 409.343 3662.77 531.147 3670.96 668.363 cv
3674.92 734.807 3667.89 810.8 3638.4 890.171 cv
3637.3 893.117 li
3636.61 896.266 li
3635.84 899.741 3617.87 982.527 3618.98 1083.39 cv
3619.67 1146.15 3627.68 1202.2 3642.58 1250.52 cv
3706.24 1250.52 li
3653.38 1124.51 3686.41 944.756 3691.31 920.189 cv
cp
.552941 .745098 .360784 rgb
f
3729.59 1220.51 mo
3651.59 1220.51 3587.9 1250.35 3583.96 1287.87 cv
3875.22 1287.87 li
3871.28 1250.35 3807.59 1220.51 3729.59 1220.51 cv
cp
.901961 .721569 .278431 rgb
f
3155.63 2925.66 mo
3137.07 2925.66 3122.02 2908.9 3122.02 2888.23 cv
3122.02 2867.56 3137.07 2850.81 3155.63 2850.81 cv
3174.18 2850.81 3189.23 2867.56 3189.23 2888.23 cv
3189.23 2908.9 3174.18 2925.66 3155.63 2925.66 cv
cp
2991.86 2925.66 mo
2973.3 2925.66 2958.26 2908.9 2958.26 2888.23 cv
2958.26 2867.56 2973.3 2850.81 2991.86 2850.81 cv
3010.42 2850.81 3025.46 2867.56 3025.46 2888.23 cv
3025.46 2908.9 3010.42 2925.66 2991.86 2925.66 cv
cp
3073.74 2670.87 mo
2938.81 2670.87 2825.47 2763.65 2793.58 2889.13 cv
2869.36 2941.2 2965.99 2972.41 3071.24 2972.41 cv
3178.46 2972.41 3276.74 2940.02 3353.14 2886.18 cv
3320.23 2762.2 3207.62 2670.87 3073.74 2670.87 cv
cp
.74902 .239216 .196078 rgb
f
3655.15 3376.92 mo
3649.96 3359.26 3631.3 3349.2 3613.48 3354.45 cv
3602.16 3357.78 3593.9 3366.5 3590.72 3376.95 cv
3562.83 3419.26 3546.58 3425.16 3540.61 3425.63 cv
3524.84 3426.89 3498.9 3396.77 3476.01 3370.19 cv
3459.77 3351.34 3441.38 3329.98 3420.54 3311.42 cv
3395.11 3288.76 3369.9 3273.72 3343.48 3265.42 cv
3319.8 3257.98 3295.02 3256.05 3269.5 3259.62 cv
3281.8 3230.65 3300.74 3184.59 3318.35 3135.85 cv
3247.88 3176.29 3162.82 3199.93 3071.24 3199.93 cv
2982.36 3199.93 2899.64 3177.67 2830.42 3139.4 cv
2847.98 3187.69 2866.66 3232.99 2878.64 3261.17 cv
2849.83 3255.66 2821.88 3257.07 2795.31 3265.42 cv
2768.89 3273.72 2743.69 3288.76 2718.26 3311.42 cv
2697.42 3329.98 2679.02 3351.34 2662.79 3370.19 cv
2639.9 3396.77 2613.96 3426.89 2598.19 3425.63 cv
2591.99 3425.14 2543.25 3368.08 2542.11 3366.32 cv
2533.55 3353.08 2514.19 3350.38 2498.86 3360.29 cv
2484.26 3369.73 2478.6 3387.2 2485.49 3400.29 cv
2485.45 3400.31 li
2485.57 3400.49 2486.78 3402.47 2486.87 3402.6 cv
2503.76 3429.71 2519.81 3449.83 2535.89 3464.05 cv
2551.96 3478.25 2568.72 3486.93 2585.8 3489.89 cv
2588.19 3490.31 2590.59 3490.61 2592.99 3490.8 cv
2616.45 3492.68 2639.22 3484.2 2662.58 3464.89 cv
2679.7 3450.74 2695.55 3432.34 2712.33 3412.86 cv
2743 3377.24 2774.72 3340.42 2814.91 3327.79 cv
2858.98 3313.95 2911 3332.03 2973.81 3383.03 cv
2973.72 3384.63 2973.61 3386.25 2973.49 3387.88 cv
2969.51 3440.26 2951.93 3480.56 2921.23 3507.66 cv
2895.97 3529.96 2860.85 3543.64 2816.88 3548.33 cv
2761.88 3554.18 2608.95 3523.24 2607.41 3522.82 cv
2592.2 3518.67 2575.96 3529.63 2571.13 3547.32 cv
2566.51 3564.23 2574.01 3581.15 2587.98 3586.22 cv
2587.95 3586.32 li
2588.55 3586.48 2589.86 3586.83 2589.93 3586.85 cv
2590.02 3586.88 2759.3 3620.21 2823.65 3613.35 cv
2826.26 3613.08 2828.83 3612.78 2831.4 3612.45 cv
2887 3605.31 2932.83 3586.12 2967.69 3555.34 cv
2997.51 3529.02 3016.03 3497.26 3027.26 3465.24 cv
3024.7 3505.37 3025.87 3542.31 3030.76 3575.42 cv
3038.96 3630.95 3057.84 3676.34 3086.87 3710.31 cv
3105.51 3732.12 3128.5 3749.47 3155.22 3761.88 cv
3183.66 3775.08 3216.6 3782.79 3253.12 3784.8 cv
3253.13 3784.69 li
3267.05 3786.44 3280.57 3777.51 3284.45 3763.3 cv
3288.69 3747.76 3279.8 3731.79 3264.59 3727.64 cv
3261.32 3726.74 3168.91 3707.53 3142.91 3677.12 cv
3102.24 3629.55 3087.12 3546.69 3099.2 3437.49 cv
3099.41 3435.53 3099.64 3433.58 3099.87 3431.63 cv
3110 3470.08 3129.52 3509.67 3165.44 3541.37 cv
3200.3 3572.15 3246.13 3591.34 3301.74 3598.47 cv
3304.3 3598.8 3306.88 3599.11 3309.48 3599.38 cv
3373.99 3606.25 3545.63 3572.34 3546.65 3572.04 cv
3563.6 3567.05 3573.16 3548.8 3568 3531.26 cv
3562.84 3513.73 3544.92 3503.56 3527.97 3508.55 cv
3527.12 3508.8 3526.29 3509.09 3525.48 3509.41 cv
3525.48 3509.41 3372.19 3540.31 3316.26 3534.35 cv
3272.28 3529.67 3237.17 3515.99 3211.91 3493.69 cv
3183.7 3468.78 3166.57 3432.72 3160.89 3386.39 cv
3225.54 3332.82 3278.87 3313.65 3323.89 3327.79 cv
3364.08 3340.42 3395.8 3377.24 3426.47 3412.86 cv
3443.25 3432.34 3459.1 3450.74 3476.21 3464.89 cv
3499.58 3484.2 3522.34 3492.68 3545.81 3490.8 cv
3548.21 3490.61 3550.6 3490.31 3552.99 3489.89 cv
3570.08 3486.93 3586.83 3478.25 3602.91 3464.05 cv
3618.03 3450.68 3633.13 3432.08 3648.93 3407.35 cv
3655.67 3399.1 3658.36 3387.84 3655.15 3376.92 cv
cp
1 .427451 .380392 rgb
f
2946.65 3012.88 mo
2946.65 3009.76 2946.86 3006.67 2947.23 3003.61 cv
2980.61 3018.12 3023.9 3026.89 3071.24 3026.89 cv
3118.57 3026.89 3161.86 3018.12 3195.24 3003.61 cv
3195.61 3006.67 3195.82 3009.76 3195.82 3012.88 cv
3195.82 3066.61 3140.04 3110.16 3071.24 3110.16 cv
3002.43 3110.16 2946.65 3066.61 2946.65 3012.88 cv
cp
3318.35 3135.85 mo
3341.78 3071.03 3362.87 3001.48 3362.87 2961.09 cv
3362.87 2935.19 3359.48 2910.08 3353.14 2886.18 cv
3276.74 2940.02 3178.46 2972.41 3071.24 2972.41 cv
2965.99 2972.41 2869.36 2941.2 2793.58 2889.13 cv
2787.73 2912.14 2784.62 2936.25 2784.62 2961.09 cv
2784.62 3002.22 2806.48 3073.58 2830.42 3139.4 cv
2899.64 3177.67 2982.36 3199.93 3071.24 3199.93 cv
3162.82 3199.93 3247.88 3176.29 3318.35 3135.85 cv
cp
.811765 .337255 .294118 rgb
f
3195.82 3012.88 mo
3195.82 3009.76 3195.61 3006.67 3195.24 3003.61 cv
3161.86 3018.12 3118.57 3026.89 3071.24 3026.89 cv
3023.9 3026.89 2980.61 3018.12 2947.23 3003.61 cv
2946.86 3006.67 2946.65 3009.76 2946.65 3012.88 cv
2946.65 3066.61 3002.43 3110.16 3071.24 3110.16 cv
3140.04 3110.16 3195.82 3066.61 3195.82 3012.88 cv
cp
.176471 .156863 .192157 rgb
f
3155.63 2907.17 mo
3146.35 2907.17 3138.82 2898.79 3138.82 2888.46 cv
3138.82 2878.12 3146.35 2869.75 3155.63 2869.75 cv
3164.9 2869.75 3172.43 2878.12 3172.43 2888.46 cv
3172.43 2898.79 3164.9 2907.17 3155.63 2907.17 cv
cp
3155.63 2850.81 mo
3137.07 2850.81 3122.02 2867.56 3122.02 2888.23 cv
3122.02 2908.9 3137.07 2925.66 3155.63 2925.66 cv
3174.18 2925.66 3189.23 2908.9 3189.23 2888.23 cv
3189.23 2867.56 3174.18 2850.81 3155.63 2850.81 cv
cp
.988235 .992157 1 rgb
f
3155.63 2869.75 mo
3146.35 2869.75 3138.82 2878.12 3138.82 2888.46 cv
3138.82 2898.79 3146.35 2907.17 3155.63 2907.17 cv
3164.9 2907.17 3172.43 2898.79 3172.43 2888.46 cv
3172.43 2878.12 3164.9 2869.75 3155.63 2869.75 cv
cp
.176471 .156863 .192157 rgb
f
2991.86 2907.17 mo
2982.58 2907.17 2975.06 2898.79 2975.06 2888.46 cv
2975.06 2878.12 2982.58 2869.75 2991.86 2869.75 cv
3001.14 2869.75 3008.66 2878.12 3008.66 2888.46 cv
3008.66 2898.79 3001.14 2907.17 2991.86 2907.17 cv
cp
2991.86 2850.81 mo
2973.3 2850.81 2958.26 2867.56 2958.26 2888.23 cv
2958.26 2908.9 2973.3 2925.66 2991.86 2925.66 cv
3010.42 2925.66 3025.46 2908.9 3025.46 2888.23 cv
3025.46 2867.56 3010.42 2850.81 2991.86 2850.81 cv
cp
.988235 .992157 1 rgb
f
2991.86 2869.75 mo
2982.58 2869.75 2975.06 2878.12 2975.06 2888.46 cv
2975.06 2898.79 2982.58 2907.17 2991.86 2907.17 cv
3001.14 2907.17 3008.66 2898.79 3008.66 2888.46 cv
3008.66 2878.12 3001.14 2869.75 2991.86 2869.75 cv
cp
.176471 .156863 .192157 rgb
f
1467.66 1558.51 mo
1467.66 1558.51 1483.87 1720.7 1397.15 1794.35 cv
1397.15 1794.35 1522.51 1758.58 1578.76 1695.49 cv
1532.19 1655.27 1494.9 1603.77 1467.66 1558.51 cv
cp
.635294 .2 .121569 rgb
f
1912.97 1598.44 mo
1912.97 1592.16 1913.67 1586.03 1914.97 1580.13 cv
1855.08 1555.42 1801.35 1497.93 1787.55 1385.01 cv
1787.8 1381 1787.94 1376.95 1787.94 1372.87 cv
1787.94 1359.88 1786.64 1347.19 1784.2 1334.92 cv
1766.44 1245.84 1687.39 1178.69 1592.54 1178.69 cv
1484.63 1178.69 1397.15 1265.62 1397.15 1372.87 cv
1397.15 1401.11 1403.22 1427.95 1414.14 1452.16 cv
1414.15 1452.21 1432.56 1500.17 1467.66 1558.51 cv
1494.9 1603.77 1532.19 1655.27 1578.76 1695.49 cv
1607.17 1720.03 1639.05 1740.37 1674.19 1752.52 cv
1676.95 1753.47 1679.72 1754.38 1682.51 1755.22 cv
1711.97 1764.18 1743.66 1767.32 1777.47 1762.42 cv
1780.22 1762.02 1782.99 1761.57 1785.78 1761.06 cv
1836.85 1751.74 1892.65 1724.02 1952.85 1670.36 cv
1928.9 1655.37 1912.97 1628.78 1912.97 1598.44 cv
cp
.992157 .309804 .211765 rgb
f
1583.59 1461.67 mo
1634.53 1396.94 li
1532.66 1396.94 li
1583.59 1461.67 li
cp
.976471 .811765 .0352941 rgb
f
1532.66 1396.94 mo
1634.53 1396.94 li
1583.59 1332.22 li
1532.66 1396.94 li
cp
.521569 .388235 0 rgb
f
1670.68 1283.39 mo
1670.68 1292.27 1663.49 1299.46 1654.61 1299.46 cv
1645.74 1299.46 1638.55 1292.27 1638.55 1283.39 cv
1638.55 1274.52 1645.74 1267.33 1654.61 1267.33 cv
1663.49 1267.33 1670.68 1274.52 1670.68 1283.39 cv
cp
.0705882 .0745098 .0823529 rgb
f
1532.66 1280.61 mo
1532.66 1289.48 1525.47 1296.67 1516.59 1296.67 cv
1507.72 1296.67 1500.53 1289.48 1500.53 1280.61 cv
1500.53 1271.73 1507.72 1264.54 1516.59 1264.54 cv
1525.47 1264.54 1532.66 1271.73 1532.66 1280.61 cv
cp
f
1674.19 1917.89 mo
1669.21 1914.22 1662.26 1911.94 1654.58 1911.94 cv
1640.26 1911.94 1628.51 1919.85 1627.22 1929.95 cv
1674.19 1929.95 li
1681.95 1929.95 li
1682.51 1929.95 li
1682.51 1755.22 li
1679.72 1754.38 1676.95 1753.47 1674.19 1752.52 cv
1674.19 1917.89 li
cp
.207843 .192157 .25098 rgb
f
1777.47 1918.05 mo
1772.46 1914.28 1765.44 1911.94 1757.65 1911.94 cv
1743.33 1911.94 1731.57 1919.85 1730.28 1929.95 cv
1777.47 1929.95 li
1785.01 1929.95 li
1785.78 1929.95 li
1785.78 1761.06 li
1782.99 1761.57 1780.22 1762.02 1777.47 1762.42 cv
1777.47 1918.05 li
cp
f
2026.81 1593.49 mo
1992.68 1598.25 1952.61 1595.66 1914.97 1580.13 cv
1913.67 1586.03 1912.97 1592.16 1912.97 1598.44 cv
1912.97 1628.78 1928.9 1655.37 1952.85 1670.36 cv
1976.81 1649 2001.47 1623.54 2026.81 1593.49 cv
cp
.635294 .2 .121569 rgb
f
1808.03 1516.68 mo
1808.03 1516.68 1791.82 1678.87 1878.54 1752.52 cv
1878.54 1752.52 1681.84 1696.4 1670.68 1600.76 cv
1808.03 1516.68 li
cp
f
1555.76 750.186 mo
1483.75 775.116 li
1551.18 814.865 li
1547.88 806.262 1546.08 797.045 1546.08 787.454 cv
1546.08 774.088 1549.56 761.443 1555.76 750.186 cv
cp
.945098 .352941 .141176 rgb
f
1778.66 880.389 mo
1778.66 875.994 1779.16 871.706 1780.09 867.553 cv
1759.77 853.586 1743.5 830.077 1738.38 792.783 cv
1738.5 791.02 1738.57 789.244 1738.57 787.454 cv
1738.57 781.757 1737.93 776.192 1736.73 770.808 cv
1727.98 731.738 1689.04 702.28 1642.33 702.28 cv
1604.27 702.28 1571.38 721.824 1555.76 750.186 cv
1549.56 761.443 1546.08 774.088 1546.08 787.454 cv
1546.08 797.045 1547.88 806.262 1551.18 814.865 cv
1552.15 817.376 1553.23 819.837 1554.45 822.236 cv
1554.46 822.256 1563.52 843.295 1580.81 868.884 cv
1594.23 888.737 1612.6 911.328 1635.53 928.967 cv
1649.53 939.733 1665.23 948.655 1682.54 953.983 cv
1683.9 954.4 1685.27 954.797 1686.64 955.169 cv
1688.11 955.565 1689.59 955.929 1691.07 956.272 cv
1692.49 956.6 1693.92 956.906 1695.36 957.184 cv
1707.35 959.499 1720.05 960.051 1733.41 958.325 cv
1734.77 958.15 1736.14 957.951 1737.51 957.728 cv
1739.75 957.363 1742.02 956.93 1744.3 956.435 cv
1745.72 956.126 1747.15 955.792 1748.59 955.43 cv
1765.95 951.063 1784.35 942.833 1803.75 929.735 cv
1788.37 917.694 1778.66 900.056 1778.66 880.389 cv
cp
1 .843137 .541176 rgb
f
1691.07 1033.98 mo
1688.5 1031.9 1684.92 1030.61 1680.96 1030.61 cv
1673.59 1030.61 1667.53 1035.09 1666.86 1040.81 cv
1691.07 1040.81 li
1695.07 1040.81 li
1695.36 1040.81 li
1695.36 957.184 li
1693.92 956.906 1692.49 956.6 1691.07 956.272 cv
1691.07 1033.98 li
cp
.207843 .192157 .25098 rgb
f
1744.3 956.435 mo
1744.3 1034.07 li
1741.72 1031.94 1738.1 1030.61 1734.08 1030.61 cv
1726.71 1030.61 1720.65 1035.09 1719.98 1040.81 cv
1744.3 1040.81 li
1748.19 1040.81 li
1748.59 1040.81 li
1748.59 955.43 li
1747.15 955.792 1745.72 956.126 1744.3 956.435 cv
cp
f
1643.37 755.327 mo
1643.37 761.889 1638.53 767.208 1632.55 767.208 cv
1626.58 767.208 1621.73 761.889 1621.73 755.327 cv
1621.73 748.766 1626.58 743.447 1632.55 743.447 cv
1638.53 743.447 1643.37 748.766 1643.37 755.327 cv
cp
.0705882 .0745098 .0823529 rgb
f
1800.16 886.4 mo
1800.16 883.642 1800.51 880.956 1801.15 878.369 cv
1793.86 875.691 1786.76 872.135 1780.09 867.553 cv
1779.16 871.706 1778.66 875.994 1778.66 880.389 cv
1778.66 900.057 1788.37 917.694 1803.75 929.735 cv
1809.03 926.171 1814.38 922.251 1819.8 917.946 cv
1808.01 911.371 1800.16 899.705 1800.16 886.4 cv
cp
.223529 .709804 .290196 rgb
f
1800.16 886.4 mo
1800.16 899.705 1808.01 911.371 1819.8 917.946 cv
1823.73 914.828 1827.7 911.505 1831.7 907.981 cv
1824.67 901.579 1820.22 892.933 1819.83 883.359 cv
1813.57 882.259 1807.29 880.627 1801.15 878.369 cv
1800.51 880.956 1800.16 883.642 1800.16 886.4 cv
cp
0 .407843 .215686 rgb
f
1858.45 884.228 mo
1846.19 885.624 1832.52 885.576 1818.76 883.359 cv
1819.18 892.933 1824.04 901.579 1831.7 907.981 cv
1840.45 900.915 1849.37 893.021 1858.45 884.228 cv
cp
.223529 .709804 .290196 rgb
f
1607.03 850.379 mo
1589.86 872.318 1595.98 907.02 1619.71 934.078 cv
1629.49 920.151 li
1633.02 922.666 li
1622.71 937.354 li
1624.29 939.013 1625.93 940.64 1627.65 942.226 cv
1638.59 926.637 li
1642.12 929.151 li
1630.91 945.125 li
1631.94 946 1632.98 946.863 1634.05 947.71 cv
1634.84 948.34 1635.64 948.951 1636.44 949.554 cv
1647.89 933.255 li
1651.42 935.77 li
1639.96 952.091 li
1641.79 953.359 1643.65 954.562 1645.51 955.695 cv
1656.81 939.608 li
1660.34 942.123 li
1649.28 957.877 li
1681.28 975.54 1716.92 973.661 1734.32 951.427 cv
1754.55 925.576 1627.26 824.528 1607.03 850.379 cv
cp
f
1629.49 920.151 mo
1619.71 934.078 li
1620.68 935.183 1621.68 936.276 1622.71 937.354 cv
1633.02 922.666 li
1629.49 920.151 li
cp
.0627451 .443137 .780392 rgb
f
1638.59 926.637 mo
1627.65 942.226 li
1628.71 943.208 1629.8 944.174 1630.91 945.125 cv
1642.12 929.151 li
1638.59 926.637 li
cp
f
1647.89 933.255 mo
1636.44 949.554 li
1637.61 950.428 1638.78 951.273 1639.96 952.091 cv
1651.42 935.77 li
1647.89 933.255 li
cp
f
1656.81 939.608 mo
1645.51 955.695 li
1646.76 956.452 1648.02 957.181 1649.28 957.877 cv
1660.34 942.123 li
1656.81 939.608 li
cp
f
2254.71 680.039 mo
2274.36 661.626 2296.89 650.514 2316.23 648.042 cv
2318.81 638.796 2320.21 629.041 2320.21 618.954 cv
2320.21 603.481 2316.94 588.78 2311.08 575.514 cv
2305.86 563.702 2298.58 553.03 2289.69 543.967 cv
2289.48 544.133 li
2289.58 543.845 li
2277.78 531.85 2263.18 522.69 2246.86 517.454 cv
2236.83 514.238 2226.16 512.499 2215.08 512.499 cv
2169.49 512.499 2130.68 541.896 2116.11 582.991 cv
2039.27 670.362 1911.9 540.72 1911.9 540.72 cv
1911.9 540.72 1942.49 778.836 2121.53 782.232 cv
2123.49 782.269 2125.46 782.287 2127.45 782.268 cv
2128.94 782.253 2130.43 782.224 2131.94 782.177 cv
2131.94 782.177 2154.02 784.428 2183.54 777.382 cv
2185.48 776.919 2187.46 776.415 2189.46 775.867 cv
2199.08 773.238 2209.35 769.601 2219.8 764.598 cv
2212.02 742.045 2225.56 707.361 2254.71 680.039 cv
cp
.894118 .607843 .270588 rgb
f
2289.58 543.845 mo
2315.77 465.419 li
2246.86 517.454 li
2263.18 522.69 2277.78 531.85 2289.58 543.845 cv
cp
.964706 .882353 .278431 rgb
f
2349.36 497.546 mo
2289.69 543.967 li
2298.58 553.03 2305.86 563.702 2311.08 575.514 cv
2349.36 497.546 li
cp
f
2289.69 543.967 mo
2289.58 543.845 li
2289.48 544.133 li
2289.69 543.967 li
cp
.890196 .847059 .341176 rgb
f
2183.54 867.967 mo
2183.94 867.967 li
2189.46 867.967 li
2222.9 867.967 li
2221.98 860.127 2213.61 853.987 2203.42 853.987 cv
2197.95 853.987 2193.01 855.757 2189.46 858.606 cv
2189.46 775.867 li
2187.46 776.415 2185.48 776.919 2183.54 777.382 cv
2183.54 867.967 li
cp
.207843 .192157 .25098 rgb
f
2121.53 867.966 mo
2122.08 867.966 li
2127.45 867.966 li
2161.03 867.966 li
2160.11 860.127 2151.75 853.987 2141.56 853.987 cv
2136.01 853.987 2131.01 855.808 2127.45 858.729 cv
2127.45 782.268 li
2125.46 782.287 2123.49 782.269 2121.53 782.232 cv
2121.53 867.966 li
cp
f
2183.15 554.296 mo
2183.15 560.067 2187.44 564.746 2192.74 564.746 cv
2198.03 564.746 2202.32 560.067 2202.32 554.296 cv
2202.32 548.524 2198.03 543.845 2192.74 543.845 cv
2187.44 543.845 2183.15 548.524 2183.15 554.296 cv
cp
.0705882 .0745098 .0823529 rgb
f
2043.36 806.29 mo
2018.11 784.246 2105.9 591.721 2176.71 653.533 cv
2247.52 715.345 2068.61 828.333 2043.36 806.29 cv
cp
.964706 .882353 .278431 rgb
f
2077.57 775.867 mo
2075.66 774.46 li
2148.36 675.643 li
2150.27 677.05 li
2077.57 775.867 li
cp
.894118 .607843 .270588 rgb
f
2110.53 771.13 mo
2108.62 769.723 li
2160.92 698.639 li
2162.83 700.046 li
2110.53 771.13 li
cp
f
2071.65 742.521 mo
2069.73 741.114 li
2122.03 670.029 li
2123.94 671.436 li
2071.65 742.521 li
cp
f
2308.54 667.735 mo
2311.72 661.505 2314.3 654.914 2316.23 648.042 cv
2296.89 650.514 2274.36 661.626 2254.71 680.039 cv
2225.56 707.361 2212.02 742.045 2219.8 764.598 cv
2252.19 749.089 2286.36 720.427 2308.54 667.735 cv
cp
.909804 .67451 .427451 rgb
f
2686.58 2217.66 mo
2686.58 2512.75 li
.91 .91 .91 rgb
f
2686.58 2573.75 mo
2652.89 2573.75 2625.58 2546.44 2625.58 2512.75 cv
2625.58 2217.66 li
2625.58 2183.97 2652.89 2156.66 2686.58 2156.66 cv
2720.27 2156.66 2747.58 2183.97 2747.58 2217.66 cv
2747.58 2512.75 li
2747.58 2546.44 2720.27 2573.75 2686.58 2573.75 cv
cp
f
3283.1 2217.66 mo
3283.1 2512.75 li
f
3283.1 2573.75 mo
3249.41 2573.75 3222.1 2546.44 3222.1 2512.75 cv
3222.1 2217.66 li
3222.1 2183.97 3249.41 2156.66 3283.1 2156.66 cv
3316.79 2156.66 3344.1 2183.97 3344.1 2217.66 cv
3344.1 2512.75 li
3344.1 2546.44 3316.79 2573.75 3283.1 2573.75 cv
cp
f
2202.46 903.604 mo
2286.05 995.049 2383.85 1042.05 2493.2 1043.31 cv
2563.91 1044.12 2617.53 1024.6 2631.82 1018.82 cv
2632.02 1018.73 2632.21 1018.62 2632.41 1018.53 cv
2662.8 1004.29 2698.22 1015.78 2711.52 1044.18 cv
2724.39 1071.66 2711.86 1104.89 2683.53 1119.92 cv
2683.57 1120 li
2683.33 1120.11 2682.69 1120.41 2681.65 1120.87 cv
2681.3 1121.04 2680.96 1121.22 2680.6 1121.39 cv
2678.52 1122.36 2676.41 1123.21 2674.29 1123.94 cv
2651.55 1133.03 2589.28 1154.45 2508.19 1154.32 cv
2449.45 1154.22 2392.53 1142.94 2339.04 1120.78 cv
2276.35 1094.82 2218.43 1053.83 2166.72 998.882 cv
2166.72 998.882 2127.68 960.164 2123.83 951.96 cv
2112.59 927.952 2122.29 899.674 2145.5 888.799 cv
2165.57 879.394 2189.17 886.095 2202.46 903.604 cv
cp
f
2572.5 1952.73 mo
2577.5 1524.27 2951.67 1442.8 2994.96 1434.8 cv
2994.96 1434.55 li
3037.08 1442.29 3412.65 1523.27 3417.66 1952.53 cv
3420.07 2158.35 3209.89 2226 2995.21 2216.61 cv
2995.21 2216.81 li
2780.43 2226.26 2570.09 2158.63 2572.5 1952.73 cv
cp
.592157 .501961 .396078 rgb
f
2995.21 1434.75 mo
2995.21 1434.6 li
3038.49 1442.59 3412.66 1524.07 3417.66 1952.53 cv
3420.07 2158.43 3209.73 2226.05 2994.96 2216.6 cv
2994.96 2216.82 li
2780.27 2226.21 2570.09 2158.55 2572.5 1952.73 cv
2577.51 1523.47 2953.08 1442.49 2995.21 1434.75 cv
cp
.502335 .502335 .502335 rgb
f
3309.27 487.585 mo
3326.68 461.199 3326.81 432.349 3309.56 423.146 cv
3292.32 413.944 3264.23 427.874 3246.83 454.26 cv
3239.61 465.194 3235.38 476.547 3234.1 486.754 cv
3228.25 481.613 3222.26 476.658 3216.12 471.895 cv
3219.74 460.714 3225.27 449.176 3232.7 437.908 cv
3261.47 394.285 3307.91 371.254 3336.42 386.469 cv
3364.93 401.683 3364.71 449.381 3335.94 493.004 cv
3321.74 514.523 3303.25 531.026 3284.73 540.404 cv
3279.32 533.489 3273.69 526.774 3267.87 520.263 cv
3282.26 516.519 3298 504.668 3309.27 487.585 cv
cp
1 1 1 rgb
f
3309.56 423.146 mo
3326.81 432.349 3326.68 461.199 3309.27 487.585 cv
3298 504.668 3282.26 516.519 3267.87 520.263 cv
3257.25 508.378 3245.98 497.186 3234.1 486.754 cv
3235.38 476.547 3239.61 465.194 3246.83 454.26 cv
3264.23 427.874 3292.32 413.944 3309.56 423.146 cv
cp
.898039 .717647 .607843 rgb
f
2762.16 448.794 mo
2744.76 422.407 2716.67 408.477 2699.43 417.68 cv
2682.18 426.882 2682.31 455.733 2699.72 482.119 cv
2708.36 495.224 2719.64 505.252 2730.92 510.904 cv
2725.35 516.746 2719.95 522.77 2714.72 528.97 cv
2701.77 519.487 2689.45 506.688 2679.32 491.331 cv
2650.54 447.708 2650.33 400.01 2678.84 384.796 cv
2707.35 369.582 2753.79 392.612 2782.56 436.236 cv
2787.16 443.2 2791.02 450.269 2794.16 457.293 cv
2786.99 462.143 2779.98 467.248 2773.14 472.59 cv
2771.03 464.833 2767.38 456.704 2762.16 448.794 cv
cp
1 1 1 rgb
f
2699.72 482.119 mo
2682.31 455.733 2682.18 426.882 2699.43 417.68 cv
2716.67 408.477 2744.76 422.407 2762.16 448.794 cv
2767.38 456.704 2771.03 464.833 2773.14 472.59 cv
2758.22 484.256 2744.1 497.066 2730.92 510.904 cv
2719.64 505.252 2708.36 495.224 2699.72 482.119 cv
cp
.898039 .717647 .607843 rgb
f
2572.5 1952.73 mo
2577.51 1523.47 2953.08 1442.49 2995.21 1434.75 cv
2995.21 1434.6 li
3038.49 1442.59 3412.66 1524.07 3417.66 1952.53 cv
3420.07 2158.43 3209.73 2226.05 2994.96 2216.6 cv
2994.96 2216.82 li
2780.27 2226.21 2570.09 2158.55 2572.5 1952.73 cv
cp
2995.21 2287.46 mo
2995.21 2287.25 li
3336.33 2291.52 3673.97 2128.55 3562.14 1768.05 cv
3544.23 1621.51 3420.38 1290.9 3420.38 1236.14 cv
3420.38 1140.9 3374.35 868.272 3374.35 805.106 cv
3374.35 704.212 3340.64 611.831 3284.73 540.404 cv
3279.32 533.489 3273.69 526.774 3267.87 520.263 cv
3257.25 508.378 3245.98 497.186 3234.1 486.754 cv
3228.25 481.613 3222.26 476.658 3216.12 471.895 cv
3153.89 423.557 3077.56 395.088 2995.08 395.088 cv
2921.29 395.088 2852.41 417.875 2794.16 457.293 cv
2786.99 462.143 2779.98 467.248 2773.14 472.59 cv
2758.22 484.256 2744.1 497.066 2730.92 510.904 cv
2725.35 516.746 2719.95 522.77 2714.72 528.97 cv
2653.28 601.835 2615.82 698.74 2615.82 805.106 cv
2615.82 868.323 2569.78 1141.07 2569.78 1236.35 cv
2569.78 1291.11 2445.93 1621.72 2428.03 1768.26 cv
2316.16 2128.84 2653.99 2291.81 2995.21 2287.46 cv
cp
1 1 1 rgb
f
2957.35 725.975 mo
2957.35 725.975 3108.19 673.183 3032.77 876.81 cv
3032.77 876.81 2874.39 920.933 2806.52 798.315 cv
2957.35 725.975 li
cp
.91 .91 .91 rgb
f
2790.51 802.179 mo
2790.51 818.161 2805.61 831.117 2824.24 831.117 cv
2842.87 831.117 2857.97 818.161 2857.97 802.179 cv
2857.97 786.197 2842.87 773.241 2824.24 773.241 cv
2805.61 773.241 2790.51 786.197 2790.51 802.179 cv
cp
.356863 .317647 .243137 rgb
f
3054.63 882.72 mo
3076.04 881.242 3092.08 873.706 3102.28 860.319 cv
3119.29 838.007 3113.45 807.888 3113.19 806.617 cv
3102.63 808.751 li
3107.91 807.684 li
3102.63 808.742 li
3102.68 809.007 3107.73 835.466 3093.67 853.843 cv
3085.43 864.619 3072.04 870.718 3053.89 871.971 cv
3054.63 882.72 li
cp
f
3028.33 620.306 mo
3028.33 639.963 3044.66 655.898 3064.8 655.898 cv
3084.95 655.898 3101.28 639.963 3101.28 620.306 cv
3101.28 600.648 3084.95 584.713 3064.8 584.713 cv
3044.66 584.713 3028.33 600.648 3028.33 620.306 cv
cp
.94902 .94902 .94902 rgb
f
3053.48 638.278 mo
3043.47 638.278 3035.33 630.215 3035.33 620.305 cv
3035.33 610.396 3043.47 602.334 3053.48 602.334 cv
3063.48 602.334 3071.62 610.396 3071.62 620.305 cv
3071.62 630.215 3063.48 638.278 3053.48 638.278 cv
cp
0 0 0 rgb
f
2869.74 620.306 mo
2869.74 639.963 2886.07 655.898 2906.22 655.898 cv
2926.36 655.898 2942.69 639.963 2942.69 620.306 cv
2942.69 600.648 2926.36 584.713 2906.22 584.713 cv
2886.07 584.713 2869.74 600.648 2869.74 620.306 cv
cp
.94902 .94902 .94902 rgb
f
2894.89 638.278 mo
2884.88 638.278 2876.74 630.215 2876.74 620.305 cv
2876.74 610.396 2884.88 602.334 2894.89 602.334 cv
2904.89 602.334 2913.03 610.396 2913.03 620.305 cv
2913.03 630.215 2904.89 638.278 2894.89 638.278 cv
cp
0 0 0 rgb
f
3066.37 1507.6 mo
3192.21 1469.12 3281.65 1397.56 3332.22 1294.85 cv
3364.91 1228.45 3370.32 1169.17 3371.2 1153.13 cv
3371.19 1152.89 3371.18 1152.67 3371.18 1152.44 cv
3371.18 1117.45 3398.24 1089.08 3431.61 1089.08 cv
3463.89 1089.08 3490.26 1115.62 3491.95 1149.02 cv
3492.04 1149.02 li
3492.04 1149.29 3492.04 1150.03 3492.01 1151.21 cv
3492.02 1151.62 3492.04 1152.03 3492.04 1152.44 cv
3492.04 1154.83 3491.9 1157.2 3491.65 1159.53 cv
3490.14 1185.02 3482.67 1253.3 3445.94 1329.81 cv
3419.33 1385.24 3382.77 1433.99 3337.27 1474.71 cv
3283.96 1522.42 3218.32 1558.98 3142.04 1583.5 cv
3142.04 1583.5 3087.11 1603.24 3077.47 1603.24 cv
3049.26 1603.24 3026.39 1581.57 3026.39 1554.84 cv
3026.39 1531.72 3043.5 1512.4 3066.37 1507.6 cv
cp
.91 .91 .91 rgb
f
3051.57 1597.12 mo
3043.87 1600.45 3038.19 1604.43 3038.87 1606 cv
3039.55 1607.57 3046.34 1606.13 3054.03 1602.79 cv
3061.72 1599.45 3067.41 1595.48 3066.73 1593.91 cv
3066.05 1592.34 3059.26 1593.78 3051.57 1597.12 cv
cp
.247059 .188235 .141176 rgb
f
3043.17 1577.77 mo
3035.48 1581.11 3029.79 1585.08 3030.47 1586.65 cv
3031.15 1588.22 3037.94 1586.78 3045.64 1583.44 cv
3053.33 1580.1 3059.02 1576.13 3058.34 1574.56 cv
3057.66 1572.99 3050.87 1574.43 3043.17 1577.77 cv
cp
f
3034.67 1558.16 mo
3026.97 1561.5 3021.29 1565.47 3021.97 1567.04 cv
3022.65 1568.61 3029.43 1567.17 3037.13 1563.84 cv
3044.82 1560.5 3050.51 1556.52 3049.83 1554.95 cv
3049.15 1553.39 3042.36 1554.82 3034.67 1558.16 cv
cp
f
3026.27 1538.81 mo
3018.58 1542.15 3012.89 1546.12 3013.57 1547.69 cv
3014.25 1549.26 3021.04 1547.82 3028.73 1544.49 cv
3036.43 1541.15 3042.11 1537.17 3041.43 1535.6 cv
3040.75 1534.04 3033.97 1535.47 3026.27 1538.81 cv
cp
f
2117.13 922.301 mo
2111.26 916.304 2105.52 912.411 2104.3 913.606 cv
2103.08 914.8 2106.84 920.63 2112.7 926.627 cv
2118.57 932.623 2124.31 936.516 2125.53 935.322 cv
2126.76 934.128 2122.99 928.298 2117.13 922.301 cv
cp
f
2132.21 907.555 mo
2126.35 901.558 2120.6 897.665 2119.38 898.859 cv
2118.16 900.054 2121.92 905.883 2127.79 911.88 cv
2133.65 917.877 2139.39 921.77 2140.61 920.576 cv
2141.84 919.381 2138.07 913.551 2132.21 907.555 cv
cp
f
2147.49 892.612 mo
2141.63 886.615 2135.88 882.722 2134.66 883.916 cv
2133.44 885.111 2137.2 890.94 2143.07 896.937 cv
2148.93 902.934 2154.68 906.827 2155.9 905.633 cv
2157.12 904.438 2153.35 898.608 2147.49 892.612 cv
cp
f
2162.57 877.865 mo
2156.71 871.868 2150.96 867.975 2149.74 869.17 cv
2148.52 870.364 2152.28 876.194 2158.15 882.191 cv
2164.01 888.188 2169.76 892.081 2170.98 890.886 cv
2172.2 889.692 2168.44 883.862 2162.57 877.865 cv
cp
f
2361.23 2896.88 mo
2401.75 2858.39 2466.55 2860.83 2505.97 2902.33 cv
2509.19 2905.72 2512.13 2909.28 2514.81 2912.95 cv
2517.06 2916.04 2519.13 2919.21 2521 2922.46 cv
2478.59 2962.75 li
2477.71 2961.36 2476.21 2959.16 2474.12 2956.57 cv
2468.09 2949.09 2457.1 2938.33 2441.48 2934.39 cv
2426.77 2930.69 2411.2 2933.92 2395.21 2943.99 cv
2395.07 2944.08 li
2394.11 2944.83 2371.38 2962.66 2372.31 2986.23 cv
2372.68 2995.77 2376.9 3004.79 2384.87 3013.19 cv
2388.97 3017.5 2394.05 3021.64 2400.11 3025.61 cv
2400.28 3025.71 li
2402.95 3027.04 2405.75 3027.85 2408.6 3028.14 cv
2414.4 3028.73 2420.4 3027.16 2425.87 3023.48 cv
2435.21 3017.21 2441.22 3006.04 2440.47 2996.32 cv
2440.41 2995.43 2440.28 2994.57 2440.11 2993.73 cv
2438.79 2987.4 2434.51 2982.27 2427.82 2979.13 cv
2426.37 2982.21 li
2432.89 2985.27 2436.6 2990.24 2437.08 2996.57 cv
2437.09 2996.72 2437.1 2996.86 2437.1 2997 cv
2437.55 3005.47 2432.21 3015.13 2423.98 3020.66 cv
2421.31 3022.45 2416.9 3024.72 2411.58 3024.88 cv
2408.59 3024.98 2405.31 3024.41 2401.89 3022.71 cv
2385.04 3011.66 2376.23 2999.34 2375.71 2986.1 cv
2374.87 2964.82 2395.83 2947.83 2397.1 2946.82 cv
2412.24 2937.3 2426.9 2934.23 2440.65 2937.69 cv
2455.49 2941.44 2466.09 2952.04 2471.77 2959.14 cv
2474.02 2961.96 2475.5 2964.23 2476.16 2965.29 cv
2488.01 2992.26 2482.75 3024.5 2460.62 3045.52 cv
2452.77 3052.98 2443.61 3058.24 2433.89 3061.34 cv
2420.02 3065.76 2405 3065.77 2390.97 3061.45 cv
2387.74 3060.46 2384.57 3059.23 2381.47 3057.78 cv
2380.82 3057.47 2380.17 3057.16 2379.53 3056.84 cv
2379.53 3056.84 2365.15 3047.94 2359.23 3041.71 cv
2319.81 3000.21 2320.71 2935.37 2361.23 2896.88 cv
cp
1 1 1 rgb
f
%ADOBeginClientInjection: EndPageContent "AI11EPS"
userdict /annotatepage 2 copy known {get exec}{pop pop} ifelse
%ADOEndClientInjection: EndPageContent "AI11EPS"
grestore
grestore
pgrs
%%PageTrailer
%ADOBeginClientInjection: PageTrailer Start "AI11EPS"
[/EMC AI11_PDFMark5[/NamespacePop AI11_PDFMark5
%ADOEndClientInjection: PageTrailer Start "AI11EPS"
[
[/CSA [/0 ]]
] del_res
Adobe_AGM_Image/pt gx
Adobe_CoolType_Core/pt get exec
Adobe_AGM_Core/pt gx
currentdict Adobe_AGM_Utils eq {end} if
%%Trailer
Adobe_AGM_Image/dt get exec
Adobe_CoolType_Core/dt get exec
Adobe_AGM_Core/dt get exec
%%EOF
%AI9_PrintingDataEnd

userdict /AI9_read_buffer 256 string put
userdict begin
/ai9_skip_data
{
	mark
	{
		currentfile AI9_read_buffer { readline } stopped
		{
		}
		{
			not
			{
				exit
			} if
			(%AI9_PrivateDataEnd) eq
			{
				exit
			} if
		} ifelse
	} loop
	cleartomark
} def
end
userdict /ai9_skip_data get exec
%AI9_PrivateDataBegin
%!PS-Adobe-3.0 EPSF-3.0
%%Creator: Adobe Illustrator(R) 10.0
%%AI8_CreatorVersion: 18.0.0
%%For: (Alexutemov) ()
%%Title: (Animals_8.eps)
%%CreationDate: 4/4/2015 1:42 AM
%%Canvassize: 16383
%AI9_DataStream
%Gb"-6CTeRFE[CLo!W@e3!=Z>J\*m;1.PlDf$eu!On\Q=dh=doddfY/ukVd'!;,BpGmJZ\skF@@0W_66a*^0#:;HFK6E@\)q1*\%(
%H1K;\m/G8=?[h_FbMV3lq1!jAo;c+h[f:9PhP@U+Rl%VRaY3Y[ci3n/hn8g'>IUKa3ca3XjgLk^2&`qUoo>@8D7*"nIsgkYgFll]
%q9@fGrT<4B5Q'L!c0'#ZrkkpX*rbrobF?7qnU(/XMjsbDe`WR>q3RTJcX4?_YL_k(0AEDN?[r(?q4"S&Gk'&'I_1_E5%Wchs+@_b
%#N5'HpJ:h[$R>WDeMlAf&+/&[rQfra(\d)o)O3P%r(k)n3W6+irHGqeqm5"Km<?5krRp\tL;3cO5K@:%rc6V+J,AN3(LOrPk4P2s
%m7"e(8bVaKqrQ)_X+,HcmH<B*5<$Vgp=F6^r!&5W?Z,l*.o?5\<kEJunRqG8?)=e3naif7Iui@@rYtj.Dotf)HiE_W+7YAm)trZr
%2Z%Xj#3i6+JFZ?V&u5>JYJ0eso,$;sdN$lEh+g`8XLB-oj"4.c[(0)0;9Nh5ECUo"re=HfhY,2bBsudGaV8E1nAVI.pA3=Sr;,R5
%^O#G'X06sJn%Se`\$,g=S*%;!)uo*9ps$:?^\[fq^O6!>NTO!ieGT7;S'PDhDI7lUi;)Oha:5&.kPtL@^O,MDmpCKQ]`%!aD_XDi
%^)?5gs5D]crp%HE?\)(<^Z9=IHM-CW^%m`UlE=A`mA?+WPBiX<]1I:.S!bd=&aq-iek_0IT&5FGi$%W80!W/KpALJa?iU,uQbSPB
%qknr6p$9p6T'lDdk^S!6m5Y&'j$3"4IJ>bY]_XD[T(8ciIskK@g[/AJ(2nWpj_#*B^;(`d!LNPam/=A'5(E0Ns6XgBhq96grQ7?W
%KMVWc)f+s>90E!5?i10-DLD;iT7:Xkr/7c9I/DH$IeccX55E/Nmll*iO0<I#j/\O(]_U8nos:.&q8`ME(Opo*bMSSTIol@2GGX#C
%Hd[C\'?q;,Yshi"`p[j<Mq\+Gl"F1=h2L34:[e#DotK/sYJ9r*n*-@%g"3EFoNQ+SbP:Zrg7&p5BluPrG@et_&,OhcUMhaC6`PWh
%rOEaA]D^@INLoh0bQ%;$o/C%8rHdgcFPq(%J+;WYYAa2oTD8D8@uY>EHgqt6c&bM@blBBCLbl?6khk$^d?.Mfr5/d4fp9ET2G:7R
%>7CJqs7bAhqUGhalGY^^C`CU!00f?O:EQ.WeW?PX5?lp(!Ve22P2>gS*W,4G^\Gi.T>1BC([P2nY+3P'4fAU<n(Cdc[^rP1fjD9J
%DGCQaWFp%rn;DC0X>)mrlOJ;PF^!NR^b<G$k4QpD?iB\ZJ,&0VLTqu?cIZG&c'K@8YJ:%R5MuCpRl?u>oE!;"=SEdJkJ.oAZ6`VW
%D9(:OcA$0=l4EiFmem+O;c]rkoeVb(i1?JoZ[0b!If,0!I`B9`cTcpXqla@Sp!9gKrk)U$:I7&EF#iWieNY6g<skZ"SR6[1mgo9A
%hnJ.aHMWUM=T9Z)Ghr&+fQ?c!+dZr"2'3C]$$s[sX>-rWq^_\Zm&%t$RqJA,2P&tnS)nkNo@nb?n]f7,ri=ZNpcZ5%3;T7RIqbqX
%c#:@FrQQiAC$@Yu20OBi$>hBf`-'@N]r]OD*rOcf#OPI=1XCC.YC?0#)J6!.pKsM1q2;F`I.l99fO*P6o'a?ko#2EB?2i\P2p#Cs
%/uiX4q<%[_:O_i+55E1trlHfOrKF\&Q*&b9g\.af_g^`k\(ts5gZ/!DH_*.EktA%UV*4K.dS+lL5!>^^oIN/O>>@3AP0Fiec)dS0
%9d0O$c>UK[oTjaJgMas@pbmV/[Po8roXEO6i4\jH+7Y*+GQXSA2q03^'lU<0iu9njjSAE1c^m?bIs?GBr9jB.5+_N3qt'No4tk7R
%oCREWpAEUMB91@[T%uWCHT%JgBD]%/X?J/\o!@t)H[Phfm.'W9iUQp;mVtFN8$dUbpW)u0+%q"$%sl.krcd!6]&)tPhXCR7YW!!(
%K5[\IJ+i.*fAnJ=c=!\11BGaT2);89:Tr8p1VN_W\7H9Ag\]$$T`hQK0`Ulk0*&>=dU`U7>i45I&"EUTI[Y8/D(,+AXHPOh`\mMa
%F([_d32mimmD`:oHtN8AnJqRc62"r65-+0UBg'X/OO)C^oX)W9l$4_Lp=AibZ_r50kG`+GVe,ShqE4<=j)]"(Cds?-Cpj)pD4ZO-
%pRTS,K5n[_j+QStKuOqJpnJ_!FQ8^%HuirUo3bg62aeIA+!-Cpc;/lO1Z.fB\"@mE!DiX?k?YSQ@<BZ:G.Z!ri@D4Km%[PU'ma^>
%%?k-Gea5#,N*M?HN$G7jDO^%3b<Pr.i:3iq/AJT'hYlc4\iTCD(Irqc44s+qp2aj[EmI=nZs[?ZC,e6.R\8Z(UhR\6@B(ZP9%.\l
%Ag0cEVFc+qD43FZh=48p7Er5@gMQ?XXmYo3l`d!qs4u4PqsU5I1c9`2[)ZVnUh6&cX7lSIp=<Dc2?u/,Ze`$Ep@-0Wg1,JIh;,.G
%Bt(e3*f>HehY4S<gX"o?mU9PW,hgTDerK>XrUYZ6B^>M%9jb>eCb^BaYb-:>\XWA,b\fX'U,MR#>I2Oi5:4oSB%bBIT,<oS#Q)%R
%GP3ftros-_A%k/&L!=YCT56`K1@mO$X4tYC+8W\Lgu/EMd!N74lg8??;;\]m5N^!sP4uNWp>a'._u7KDIIqdJ&%cg^I4,WZ1mH6E
%qUndb"JJZdCr6=*Yr1i$s0?LR]UMoQ@_4M.@?T_hOmqD'5^@Edj(V,KrAkn`QP(A0gDs.M4f$;5fD`Q$5?TIqGDi<fFO);_-15`k
%28)aZmsR6toXjk]XP"rO\816=I%MMO@t&%LBsXp'Rm,_'TC9dLZeUlP'6;E9F%n!:,_`g&T*Iu[kOtY*au`X9o%rMmSpf0deT^]c
%Nr"LE+he%c@dE?UZ\Df!;`?Zmo"3rZei.4<`kjBGVO7topMTpl`\_dNf`Sk\;E[.Lp#tFWBHs3J>;)gOj(J*-N]$ZWTtR4^lmI+X
%RE4aR*Yu]Zjc@d(^L'5);6/An_2%pbq`>I0_aMh"hsTfY\^1$7M9J!SoA%f9?dHDKp\3HQg\ss]FudKiT6btNqmlIarppLM]o:@O
%p@CjOTCb"\<kXL_23q=)I?^MI+Z\*9)!u+BTD%#crg)F7[M&5')H',;!dOt2/+$Qdr%mHc-+db`Lc_&eS/Zq/a(AQ)4#F16p6_I%
%'?`I+@X4uQIBW:S1\la0Qi,"UUa3]%Ff/m%R\2GOe!3VUTtYX#mS-c/1pub^#m"7rVC+Z&l6c8gIV0YoB^4Gdk"^r%\h,GmbcO*A
%Ps&8[2NGnTj)["N+7C9=mdKT3VC;rPDSKt2ord(]Ze`+dg_S?`23>Ghm:gS2o>St8jCn(*fXl4pG$k1'HqfdMNQ^_0\35]'[79gC
%Wl>SI\bFX#8+h/C(:Tm2-cS]Z_oD6!9u/esTi(^<ju]\r+4*JM_!I"Xg:DbjB@A<[i#S<cLUQuWN;[Yk]`05^<IV]@au;\O<5-KH
%l^%!4VEA!:&!nS@:J9j,[sV\/D>Q.G3_^#6)D.@FZ_F"Vbe4c$%1?Au]pN6U9Pa$m^J<6hn%4u7VV=9j]4a![2jrN,@-O%:]UP'G
%9LHNM?29%to/!_DYV.BQW=/CbAstUliaKFm*VFAUB%5#?hQXAq4*\<AXdES`VV:<L[YAs08KA/JXf?Z%J+!,BbET)e,m#TVg'RI7
%>E-aJ55j,1fdas:it(K(.d+6pnMC-a+*t,?./%4V6;tUJG56F_o]J`U'VBf`_f,':G'3%$5$>`;]Q+;11V]<?BIeLPNk(&#a!GE<
%0d^WOf:7N]igg_;o>rZ,5J]Y26gs*1`CKV8I'bmU($?h%,dXSj9B)fREmpGK`)5p?;1fY?h;YKU$Wl"RE6cTRmQ1./i%X\g\Er.\
%i3q*q4n8'SIt!Uqpt8)FS7T^')TEG'6fCBl,5C,rr,AE^/rU>$Lk?epgM^77E200PGiJ-S4E9Kj8XJ@na7mXk=PGoSn+!iV=e$):
%&b>'8EDA8ZggQA$r#lPq_B4R23HuhEUn>.Cpk:h?4Rr,0pZJ/u9s0VNnAKGE3R#MoDstmA-%FY_hraF/]K>m,4<;Gm*P!'#*4ql&
%?<^k")5S31f@4'nI,NZ$*H0;qp5J9FV>C[9iA9N0@_C<0&g*(]P4@.A*-FK;:&A\cSS%e?B,pKt325,s:RembgKCiL+hR+YpU2G3
%2iY&/G1_eFmVJqKI!B7H6S_rQRTA+t2>R%Bb^J1aos-t;XXrp!SW\L!.*KqH8)?UjrW!tj4`'\l'meFhpSu?12M^tQ]kNa\[,aD-
%q9SKm4+l^tRC"@h2,`=*MEE\/nmHM"c6Ng'U:X!f8iN`;6)O69[pa]lRD66,T>h&*:=`%8CMI(%:06ca?*eLuG*@630&17^n7Dme
%1R!e/`aO)2B@]S:R_/)q2=AX7:Ug8WVX`'Do%nV4dVT$:5c(4u_7a8UrFju6%cBbML@,\/8Bq7&^-XaegO/(=O$)rp-U.+>#P#aO
%FRO'V`,G)Mq=-,j9joAeBs2D;^VbO#JIUKM+oD?/f+0R[IqK+AWWHAOT6pQCYM8M,P+uj)m4UoClkNRu%r5PnWonVR=\<n*@e"sD
%l'o`PnR$M?p2D*opV./4,c?h<o#\Z,^O,]0hfHXVr$Qm;q!X@3nEfd+RXN6&-bkc3S1;r"#hEQ8puc=@>Q^\L9;TD$0C@FjkSmNt
%l&,CIesWO4ASG%ZQc]e\*Qn5SdUXgg(%a35#1]UV2pjB\-n*qK\Y3hD^J2Pi<3"\Y&!tb;;@cO[qifq5;_B3tqlqO"'l[:F]B+AI
%cW^akg[_p=0!F%.nrV&T%*rF.SKW,+nmL8M%/HBW$Y3-p][2bZ&'GauRI'odrlCQ=q$[R8.&HM_^Q<*!dX(^:IY\^<&/jn5eb]l>
%i?'D_5P`9$L55(Q7,7hAA:jDW#.9DMF4BK(AT($:QAc@PXGE6\(>(+@;.,m/-F)5.JaEK-"1ADM%%GL%2MB2s!*]I^!c.u5fE*K#
%91ctY)l&i8Nd$2MT=L.9f"t0LEmdX/TI]=g%?3\ueP7LBUf.WGW+T^cCc6FhVQ`68AmA"KGsCcsH2gceZ@ktWMYuT.YW\a_j+7+>
%*&5MHie[`.0WoZ_1%lj+%ZUgD!&mUJG8N[p07X]WN=3N(fY`Wh<SP3R^9dF/q[Z'cbkASgkM(V:B0=V!rk8>.KDL,1cJcJ"*gV-7
%+gabRoYEV.7n%6s:fRY!)Dar!Yf_a%ho*Rol@6<'q8_INO3b;o.$VJcQo(ZPoTM)ulq[F1a6[i7f\eu:bt;/p>P:A.OUlJ3I(u%s
%,&6M%h^*IEk8iea\_94UXi.ZMfl!2,A31@F\Q4BaRcZMDBIS!@@H;J0iQ"/N0oN0gE&$3-91l8MM[LMckdf4]9uh]uWkpa/s$nqj
%7E`9IftRElc(=(3%=Uh4HW/DEDG>UCCLTN&FhH=j_#a5tG+&[V<V:[I$G!CAo<t(F]kW!\T[aQR#uac"B_CB34aDVBr[T4X6iGbt
%DW5f%HMCthT4:)V(<r`Q\U72j=D%Cu[`pJm]VfZWL5QLlnIr2=Sn+PS&Y'=oJ:CSjRqR3`NSgS:s4A]DY0E#@rDVVQ,:>RQJuQ;Y
%)^j:nm$i+og3kaN)bo>g7?+lec*E:ZK+i_--U.nL^,KTsc@B3A>^,2B5AGXmibJ,rp]#9&5)m$9S@5p$f_=9e:%B@?^jG^qe`r\H
%L%f;UDf5`i)6%\k.t@H\DoCa.5^UYa#OPk%2rY.sj\488^&R>!o\H],l!0O!48kZ.hmX?i,P'Yk/F2[k2_!HVr;>H?L/q'k>u)-\
%hC?Efc]cXo[_jdqhjtO(*6DX@FKVMo[NFR@HY5+_SSO$WT(LjbHI%f#Nk]f4lE+^4,MhrQ$64;QD^i;6]A8UuH+EIemsJ%OmjtRX
%f4Fc]F3,m&r4h\.T55>4oj#XXRHUo?^N(lhe:!Uu-r9c/:Hb/-m`g-W069;:n:eU")i?#Uf,K#j9&FQ9IZG:8cZl(%i^WQaRF#^U
%IchC8G<Op;[GK[74*r)+rho3n7TA*jPC;dis&Zk;b(&l6oi;PHNUpckq`e?6s*#dr/=4mKSQ9C4Prl-bWQK@+G=q?(mbkti4hS1Y
%)jV=>[C"#8JAZM\?%NM,C5>-m42MD"-S#HYI".gJXY@X)BNUr43EK]^\2u?5VHc_9_Q!:D^s"MoCOG>eN\P!nAqamS'qg+S_IuLh
%]i1_ppAOpV+O)3#o0G[2A+Z.IomJ]C)TV<HUc[,@>t4I#&]o;,@hauDoT<Ck(>Q?M?1/f]GDEi&MYX.n0-AScNotTi]jaB>4O7H>
%LJs2mR4"OU5I`WA4X7OcZKU&J9$f*50m[qJ)s@(=\(?B-p.6?d?IU@:f+6['r^TN_>)L.#aaYD(3dOEbaq6XC=SJ?2--tXrpa*[n
%lUC%5fR1HkLMg^;2fhqi4:b!CH$IV&T$10*p:)n@5!5P%B.53^2S\5]5O3Qc;C?skn[u3".]rDoQkB::U\UMOAEq"W3hAm'n-%jF
%BfoNPoNgMQ;b$CrMt'BXhc3h(j_[HZT`$BA;ZD*U>i)V2po(!;<)Pq1W?7DTO%S\uHf@OAoqR]H5Knq4<)WbZ;,VJ6KA/DQ+J>c.
%.$@I^5P4*!`MO`89g9D_IOmDU=D[i=f^r[Yl,R8^O2[t<Mo\'t(4P>$O$)rp-U&<8rZ&nS57lkFk9K4N*^RB<4r#GFm>Cm"=RhtO
%p^[-pmC1>pgqIIYmUbfFWAXS0Xkr+qDiN/%535Ohr56;-cYmq<a$fmD+*IO3g>Dpg;?+V,G4X<Es62ad2kPN8<klH[nZ$j'bnkJT
%4FQ,3?X:aR@t/WM`k/5%7f`JcdslT9of%r8?fK_8(LR44k1B1;r4DhbDa)4@>Wutr$46a]q\LpcWsp]-WVZ6G4F$(>7>q0Ts'&k0
%Dnjh$*qe39'/620esncN%U,JU@7dHEQ;rVM0V_VbGlR8bbt>V(!;YM&+N%Y^5W(pgVV@`OjDI3_S/qr<QmD/o8]^#U-/6siRmq=h
%k0\1'f]J5:[l)EE"<4&#-RsDc9"B4TZT[+_U\C7?DA,fgX8?a*RltE<e+[=TlaK$drFV;KXcDAD1[9u-*`+5W9o[NHD^4=R[ui?o
%Y"RI2\_0HPfi1O=7p1rd>3R5id\d?s+(*Vtf@+NCgKMW'B9jiHYP3'!9PqM3f`l`s\$c0X[ZWnG*._]D>K>"T\(T8E?(5(UQHHZ`
%f](Z2jLQ]r/9Qiu3%IHQ[<dX<;Yk(\n78;7GX1Isb.>n5F]"U!D#u`Oj]e4]K_hk)E7<,$R)>e9k?OH\`G]ULX1-c_NJUB#8L,5W
%*6,I3hNkTZY5lZ"DGsgJHF_pV1H;,jDCf?#05]b#_uc=&hPSu.Bemsc2F_)5IAEEuQ>D:_#/B@X5j!aeaTop94)1fa_(u^]aH$7O
%4@Gb@"R!\r??$>+m7,;^][c.<P\f[>S*&ICp,gAFqg;lfH/8"e[Tkd/BUEBglj7s:l<NEOF57\Q9Hjt'D+9/BaUd%PmAMJDa&[ld
%9f$%oYXaad^Y^d([URY=@H1Y&_/\OXl_P^7bT_d#Q^p(Dc,Z<3F'p$T=d4>Wf>sI/OrJ<qj07_N%H@MIBaLTB@Xmp&j#."iQrC1I
%fQ[$ga;o[bq2n,N[X&,Sn+IdlRFVuUpDImlY,kcED1h3u%.JZ$+O%WL[cH`A>m6MZgo/sqp,E?6=D7+^s0%:[/i8/o+SjNifWU:g
%D8c5A@S:W+.Lf^&`r<QPnU3A4Yh7;Ae[-;8d:j7UX`r?#PIL<Jqi5)0^gG#*g6cQ<n2:P,;a#"+(7NKZR@=f:/n(uVa-5#t7#+X]
%,TpoJX:]8oTUfptB&]#YV\8Bc"q=NN$X@n&/>!%$-NV,Df.F7i;mfca.BC_Aa']Aj[arW:EsFF6UMP:u5dqmJr8VaVU@F6M7H1JE
%(%8HKQrOXub!k\N*J9mAD4oT2K$%'u6GX)`%Ujdc,X>2cH=(/k`0A:f[<T"e=IMad@FE?1)\7B8F24?B6gE;o@>aekF(SWMmZ?9`
%M7.t1&1GNro9.t^9jH9Y<\Yqg[Q6JCX::q8He!"-AC?!dHbBr]1Jge&']"Kqbm<)rfcrTbKQFKEoHFi*ISA5!N17uR,Tq_lc`QNn
%ZH9(Dn]<?;[FK"bf_F48G,sOolW_?9h.X,/EllmA7aJ]+(q'\0#Af$iqWo4haaV(8RXT;jB;!tbCld_/j-jlk@=qN;a\LC.#d>cg
%H/H7(32cqrA(P0W1Frat'?7IMR".b6;O@9XrFq.o4l&;bb(B/MBekqqQQb91),5iVU0sQe=U//'<0:U4:2fH[_=kI!l*`1JS!`g'
%\i]N92M&Qb[RAV8A#3ihXi@3dFsN#2<ig'@7P1(`Z;'2@9p=Nmp5qnuYc$IjLp<dQbi(YbTgf)A,s8m6+[X%<2$Luhm<IGF9b?!,
%A'.X,j+gc4=9O%N[jQW5T<Xm"k9"==.lK+3VU\?gS;g1MB\3Zcj^H9"1:Uh0I^t\/Hpi`0(qbd=>^(J`Q4D#Ks!6^uEG5`I$M#d-
%37fpFC.i;ng8alHN2:!Mplj=^:XH,eHtXM(gd%^K+MeI3&>W0S^a59lYJ"3dg9^=-bn[^5lnS8Xq_Ml!!j7!0n1kCQmC[G.%5*Dh
%2bE&Z9M74-nYXt5VqBG-Lp34>FU"p9"Y!q/_Oe8UqFeg5V&4'EOomKNY%=LhaQV*\EW"*_Bl1Q1TX!tI:n`hEYS]0B4es7_gA0N-
%>-):6n[JZ9HpX%i74#:GQKE9P1kSH#*B6d%65.>;ZH[i8F*(@ICMiT>2laq&ZnX9n>DcY4rC5T]'I>!j\0$C@ASUORZU%#APCuH<
%\_47h'mYBV<"guUTN#JabYkFo/,f(@>Hidrq3W<:VTHCgqpU6oQ5%.:LGF&Z*A1$a8m(d0R#)'bQrp=LFQL>%FmdEq!>W;WFm,H]
%[0_H3W'oBrc([;.6Y#TEZ$gi$A"Qb[a,NMLA/Z7DZpO*Q%UODd7A$@2gjV$-ba,:!3"/[l\I'3id^.X?1(,ei!K,S8QPN#PQt^0S
%5bJg]*FVk',m+k7*n+2d:k73gF`qWm7!CMi"=#10Wges=eSMR#iV(bn]+G(LfX/KuV&/O'itu2hQ@a7J97\%9NEpZqUmZWd?kjUW
%EL<sSB3A]h=J=!>4VZntRX$R,"tS)e5\n@S6."A&I<-30\!\F;Z&MU3%4TrjQ$1_)i<cI&,W@VM>VV<Rf_K=Sr@qaL0]oe2Q_hcR
%g9ZXQl;J,n[5JT;RL-:W#13\k9&=;AZ*91e.0a3>.E^&S/rg20.0?kqDs)G8brr\.;J(D-3?W0[juFa_>fnK)VQ$)t$$V=gYs?t1
%NnrQ/B%)e$!PgmJ855lMFeEc+k+Ne(KRl99_^3[%m.MQ2b3eF"YLQpHKUfj]G`M/N,`FUL-<)G^^rS3)0ul@L87QXS49r^4@p_=e
%U(0+-mI=G[0QnU0bN<Q/Y+;7l]imA2bct^mrd]W_!G`<G/?&&Ud#]nP&$IYuYpBQd<d4^n8;C_J$'[TJErUl>M3JU.hjN8Q*n\Uh
%.$t_3bTT@!W2=d^TVK1%!n7CZpumqY*59t+FH%uu#%#1JM+N7N9EK$,k_4d'91b#FW<6_l<1,dEZg@d2?.!A>PmFQ%^fDLccFN-H
%'R"IucGlR220u>XqAAG?=g,`Sb9f@0c%1ZQJPIR(W4p,LR%%E;cX,us8757MAe0RN36DM[U1$,WA*J<tqRf!cRC5\^j@;F-LEb1%
%$^9PFZ@3]J*gQe<>o#[9SM&$4A><#\gSiIRD/Z[DfeJh&fLkY\,t'bhVsU&.I9b^IMNq[dcE([81h2HDef\lHc&,g$MW$u[.+B,<
%i&6X.eBFk=J]I7d$sF-r$()dHQ0HO!&M5j`(Wh\:S,-S]0JbWP$J.V>*j?Y_-)_[s-/9HlV_E/5ViG8?hV-#9jjPn5)9Sn#Vk0HT
%:8dMH'Eh)uQZ9I&Bm[ehK]Z9upt#f*Q*EL?@.c-`bM,=TK?H\A=Yb/uYXgGk>cZb]H"P`kCNn=/[(c/jkXU8Z=5fF>igJaY>1^q[
%Jh;0$"I$]GUK\dn['!,<;a>XR-c4\329!S!)u=Y_H`D<4Wd2&?Oe/CK`-,LDC(iY$Ju"t*V;._sMq]a?h+VMa&^/"2HOEdj"&R0L
%ro`Q!(l3`/e[2k/+chfl&`au0#NYs*$PZM\7-V[X&JSbfM6b+`K:H@X?CL$/Q.eFOPcVZkA1\J/K2,/\WZ?h'"tRTHKT2*u?FH-U
%]0#o#46TTN?H*r??E#nd#&>f#?eE`R(c6eld4maV085(1(8oJ4(',_Zl4d\/Q.+#K0;LQ"D3AFSi(;l?_l&(o8:d>-9liP4P]dH.
%84\0a-af$69mDtP8V'?b"ZYZ0D`[,0[NjEKZH:)&JW*'N%,hH1dS)E+\`I_&5i?itZ"CGHND^eQT\h#=h\Ai1+(!M,F^e5KD0#<=
%KkM).X1iDuL3!BZB'u9J&A>QB]59ig5QsRt>C6]U6;l14P%=6hQIHI3DD80f/=OW`"+nc'mt;4)'P$LnDKV/XA-Fk&"7!&!^pTc=
%9X*2Y[!=@[o!W7<@C)X<&oKIL'iPe;^pQYV/F<eU]F9RbA0f7ncJ'7;*4cAZ(PR9kIh6C7[B*jOR4^ARR,Rt;7kj8"483upE*Y$0
%Pc!-0L$]5(h/0gc$I$UN,:j0c^tiYZQ\O=6@a##ji,N]K_"Bk39/F*Y^^+a,4oc[>FXklQ&EG?sViVkj9QGK#l^rSH/R;dD10*>u
%MAGr4G^N*AgS*-C[@\Tl"",39,PY[C(]1Af$%E+3Cn5Zh;`KO8`!AVIg'H-/^^9*(%IZ(MFEHa#(soI0Gje=7-T/e?Qmd5-Crk\h
%_mjat\ee\-?ZL<LaA$PK:?*dF1.,kC4r>Fd&i*a#388:j`m,p=,"&!+$M%Tp?pW7,jnqA`d+@B\XUZF?T+h!g(A!3/AAbong&blP
%RC?MTi<fZEE@4)+`g64<UQ#DdA<"s?c`VFQr#?!>_3F#5TT'h_m'Vp?Y<*'T[&ukkCmX,K_$?--VT/f_RqQVAa(G^.%@/T)bdk9V
%2fDl[A!<"p\Cb#tY<H=l9r=IY+cpZ&r(^QCF9]U\[Nn/SdTk%-C).84=Z5hHFMuD=A%9Em9b:(FD\G%H<%PsZC$%d;U3"5c/eH[j
%DJ#"omrN-#LtBI/$H"Prb]UHm9@J@?oWAoQ!=A2p(#"$F4WAg>]OZ6t^X)#kM@'WfD6LU3*_dl\=2AV%9cqSp2hp&m,(P,WE$7%g
%10:/DOC=bIU<Oma=O#b5WLDNARh,^[0dG%^8jYmmAh,)HX_:taWW4:d"7<o1<9*a3\>LMXjmDPQ@p%c\%(-)+U]Z[?K0kQQYm#)M
%%pt_BDDjc"ee@p%*.'@H3D%+GV.NuM.+V@Ffj=u.G,&/Q%H/.9,Ran!(o5"XAF(b#qU#_p&OB[i,'`tR(`YIY:j0Dq)<Nuo06qA`
%_]a?W@seh#C++rt]FkFH$!Kd5,'jLM:XQu;qbJ_g2hW[`#::4&"7EJVkZQ@bpDhHaoF6]lr\88%S,AbO7'N"D_UVWUAg>b8b_Ip3
%!?&oi_HZ:&"QakY>TiAS9faj!l3`5:FKn6D+6Sa'dP\f%+mmPA*Aji\GIN^6Dg$>A6N&!!?6cm2DicOm3&89[PJQ0V'gBpTgL/Mr
%B5E5D[m;Ss.qFq02.`FC9,F9W&+'ah^3Ce6&jU#%Ng/V\@+aft1Z2de5bQ`5P`;;H+[@a^Ri#LN>?<Yd^gYf!Z*Ou(L:tL\YqLBo
%UrC0<-aB;N8e;fm]cB&5h77F2gRt9kRXCSjMD-,*"*O2Pfm^5Hd#LR"r&r\l&/QTZeLEG8&O8`iT[3'W<pL7Pl2i?V$Z(u,q?E:,
%&>V+@%#E5Mgt&M1AD_(K+jNQt?UGBPGst"VK*50E*Wf3Y1j%)q`t4JdKI"%p7jIF=D0%(u&a58H],9"LeA,"De:iojKIImkZ)'Z&
%]3:IAS0"a49?Ldt?b8'mUqjoC',$..j14Qt2%7>Z(dUee"A7-%BsTguboh4\g`?S?_]l5E\1PlmCm2cXefn)'QKL!p,%B#VGd6_i
%#%nJ*$,kk<f@P;d=@#?$$u!n<pA8`;M4e/;?sm3DXhW/f*sYbu4f>oOn/.ss@&j?9JRE::_VrES<@IsA1<)8''AMS5AV*^51Bd[W
%%uSGdJ;gIA;cU`Z,Jg/kHm]>DF`bro&*3:hg[_<j3-,1EctY<;rQusCkfQ]W^Cu9sDh6'`Dg$K):BgF$>:"E5_WcYagR8/]'"?"S
%cn8*fj3Y]rUmlREMUXo+_WlRUL9+bje&?LDDNiraAe]G>KE>u=iM`gd$ka51ghGFME@W9pSKG>_r<:&#2<2[df/d1R84>d%!:FU5
%KOY:K4Tu7<kT1BY3'!rL*Zl6IW`Tpi(1W:PDCb:5j<!Z!N(D@>jAm$q+PJF2%shGSLEF^O`D.;_+hV!%7CoHCfkm>01_jg.[kClY
%.^h.^6=fb?!7eK?1$eX$N>nM)cQe5O0Z#fhk:jua*V*Tr"J&8AEP'b!9T>09hjMMaQoPF)$E?e=Fdj7M1uJR9EY)Z1U'-[[:kmLf
%m*LMdU]U,@p'2O)H)@H/1:RRmR.s(,+3(h3R%0c'=5a%mILMba)a^7+Y[e_Yfr]>B_%EuD9m)24TXGO;`-(p^fn)1HYEAMl<H.[M
%fj:BNb(Zd40:QG*d-i\X0G:u8OgrYGelA\:E)o:S>uhD%?uig:P*m&,?m<aOi0?(@:17)fbfXT,[3e=+B@f=46K&tsS30ia/.XUc
%1%J&+EWC#]amLB`Js-XJ6--^Hj6K0I$s%pr/<m0H3-@c>P!3!4CZB#$;BQuZm#N:1<-)Q-#u`N0ECX=B/"E%^i3N-5[o#Q1e&&bt
%lj8g\SmsOhh'P:mCm*R6Jm>21O[\-THleSOoPac$s1`+&;W(S&B_1gR6%JFD:kQ:8-J\uJ5PpHP]M`[)5_$m`VDf't+TdU!+MLrW
%L-9`VW1o2(nM[qMiV8%O)h_cS;SFB8'>?G$.j(sk_H@%h<,S/`Z@TkmUoi"R>1RH3RWBmtFGJG*1Y/M[i%"X6Yg85_C[:Oe<]Nq@
%`B@Acr@oLe2LIP`#s_n2+[Z#NN0B$Z3G`q$o>_K<:"Y<\!etTQi"d$G16hq9&8Qm?)&*I#MCbaf%IPM"%XGSHm3+%,<9u-JL6E_D
%*HI-W@VOtOjE*4gel$[P%g]O\5_'2;![J)bS?T>,L,VGE)9JKX#9@';V8uemBqd%g9/<Wf"o-j=n+;OTe3o<FDTZ81r2n($LX_U,
%jbfiiC=:'YHC/O\'CZ3AJS[)-Qsrui^8+NC>s<)-)LB,&..@Fe#<0W'O(QUlo@2(HITqaRV%2A%A[ojQm_,.77`L8T'4>fgHR/]M
%3oXpiZ[.G7dmiIRo+Oa?CpGX5F3>-O/,"7'5.03@I.-!(13eOA<WoJpY"VH$Fd&dtjlFMce`7gO)`*kC3k8;rLaGKB",hj!,+m_,
%f1O>WJBYW%jhbej>7aEg$ur4IZct$Pc7Y[T8BdU$UR't!k^\QCQo@D.rNP"lXslB>LJFDO,Ys9bmQ/;?gtF2_&AR=YL&0]_08Xhs
%/[)cu#l-]N)?hSp"'K*&ll8KWMb>'%kcQ:A`P[#"*f5t5S_sTV6JEJReo=K:aY5e3$oT[sI2fK)YX@>W<7BU!]`:?B`;L:-@h]qD
%G*!A`*N7=VOD)[r#D.,<G;65+WZ>,(DLg$ARP?r+<3!P>b$S6,-UVns5j`1?k>Ghp<u+ge8o8(@)mgTp&*VSp&aB*(>k%`<6X_)S
%34("V0sG)AcCUC+Rib5gVl[0Tcf(HX_&@tUJoYmn/H\!=_H8A/N5dtFV*cgh1D/l[Vfn;/I.EE-\P!'m_:d1^fa5_E$'.mNg7"MS
%Z%k"\pqBd7^HuriglR=b1=Win)<aV/DTaX:[5/=s*gGLT/7^_=Rt<EAkDXK3)r62:guSUQ2%>5(mKl3]?M;ehW4k&l)^fnR2VX"o
%3]chFoYBX&)GloDG.=^>Oc8+eQk7U9\KFT_!G*So_[Te7?fFDR8]F$,0RgJg]cTQHbQ@o0i#jQuo7l=&>Fltc=1,SO+4$XuT"BR1
%"r26:=iMkPTZ-st";]q3$DVo&Br("b?"EA&9e16aMW,3VTYQ#0)iVB;(p(t\YT,-efI,J@S#k,)n=70?"]KsMq.54(BGL!-3s'P4
%6fnd_;Afk;A%5k@LEP$V"I2'5&a5Paj1sPI6Ig^T;e%t+=%NnY?Jtq<+VCbaIWQ%R=4"A@IeS9\M:?2CPUG-.b;SQ&jEAg1TRM[C
%#H3#tiRZT8'C_<VGe!+s<GhHQ?Qm$@g!p&tc+j/C2da?!o(P)X]YD4.q=<8nIe2]k(V'9TR@37*;Oq267e4-J07p8N"d#QrF]kT;
%0F)4]6n8%G=)JV`E(o3j)01Irh;?%*>#I8^qI+pALd<ei!0K0cp\@ho;.3U&pE@u_$]:u)]96T_q^,Gf6*=L*Q\WD#'n/;61RXc3
%S"bT<_i+&2>Inp[d+bN\6"Gc3A[!IVK#/(:das`)!CCgaP/Ep!gpF28bX<ON=NT$e%OA#9"Vf+[AaZOHCP_H+Ik!;]Lb].TYE:OM
%q6DhdmQlXQdCr/Cl%=Lko=:Zh!_#2oF9\!Wn*EY/"G+j=&<]g@o5r=hWqgDM@/TAKpQ<8&3Vu#$=-CpUc+VcE%`Y.Ni:%RfAk&PP
%MB:&[Lb<pqZ'?@*-(ELs,))B60:Qb2fE/>O8\bF)i3h>pe2Pd#:rVI$3ImW+WpZ>X0t:ZZI'e1(@l2MCmg:hE-A$/klpqJYEMn.c
%-8:/aIMN-9F&mG)5fPT>Q>p&;_7@Z%?L;EB%1d1"/>@'Q_97e5/P)C[48[Nc-VNot$d7PW38DNQAGi2Vm?&msZILAHZ15)0QMK0m
%l2dDsHk*U^h7%BB[eYG4[p:23XWrl=$7rQ&N"VY@d),_@LA\71SYtPA>iJ['s'0t("i4\#?.&Xo)`CsfO/>T!Q40SnS:VB.V<ha<
%^ZcSSkTcJIWDapSb&+U&Gq`B([m$s?c00u&$'gO/XF"1lju*X=dD^pB*>M!;_mr!`!!@Ifm::%REiWKc_hqbu!usm::2Wug:>\0d
%Y8REPg,o7F)GA$HR$hgK[MQpH(rqCd!"Vn\o+TXbckjh[cYN(&<TQDsTH^Ti@7()1Ei9R?!`8Qo0ao,#/+L&>!p>Y@VV%kg:O'K@
%=_AAiXI7'GL2S'c5GL\sD;$5BH>hk4G9#U@B`IcOjZ#&[>e/Z\)%@4hW4&h_8lONIHWKW%R'PGZSPr#lIqH\Gm.!aj^cDb87.b!?
%'q.Rk2\J9:Vhsf@`kI#8aC7%E)j!':#aZf'!3f#-e#Gn8%jm>Lkd=n3%ltF7a*DDi3t+pF4^8G`OfV!&F:q:%+hb,:Tj8nY)_4TW
%i[oNYcri&RPJ6XDQu-S@\-pl)"&hKi7l;e5&(Xc[aF0$Q">E"YiH]m+8SE&sY,Mo;Hn+_f8!/(o-)G9<"0&fm5#eB%Ohe>S.MH<?
%)D)JaP_/oH(hA08F9&/9+f1c1)pkM;iM#ff.dZt)r.,nZ-.PJa+P6l)`sioHE2XF&^Et1NF8-)4d[@u3W7&NG(,*<h=F;)\&q!V/
%D$!k1)0I;uk>I2S>XAS9Q_DGIZLeoiQuWdoR"Z6'BCTFO;GOcOMBHiT4^>4FQk&M+?;0Y%pN+5ZaX&7=TfdaV8MS17Y;MB[l_p4+
%\an38(2kK&CIhj+,Iu!Y/X_S$[s0p]9\`.[CbmadAmeMJXR8bK:*5\8d^ba))2rYZ:n?Oa=t)QF,>YTbEhl3MA]NM>Q*h-`*Bso<
%GYA`<.cW,dR-N7nE4FMah=%giSjed/4BToD(_Un[l8kKKHfZk^0Ib4!<d[P-s7qWTQ4:'EC1q!S]pFnfAtTbm.0=eCoK'NhL<lX5
%_$osI-q44Uo/8:Xfj-^6>[`'+0(hJV5e*FASD+_IRn`]0E5mIH$_?]0%+oI7LaYbTHH2%hDH=a:7:;qT:`K3k(,8>_1$t/Ja6>^D
%e.2a&Z@$]h3i($\[p;:I6pBO#*EW;84SA?Rio)2sN0T#/?/"L*@S%m$5_Z7E23s2%(Ksh>U814+/BK#"m007m=lFR0duB*QB:N<6
%cZnLD+Z'_nQ:ET`OtNtjpCIr3@VQ+g-=LeA(&gMK%\g>.O;!idlE,f2^sf>0O>hcVgaIh2CBiu6b]J04B'ur-F@B])Al^B$NmHg&
%CXNP:nAJ29=$?'UPmObQOPPsBG2]rh$4J[H_nlY-!Q`pH(`^j##%6B+)_OU'-eF*WgJRYLD]G9>^Y05?7@XK)3qs"=P^KZ.JXF%b
%b6@"'#kubga&5W-c]3="ADF73o#.8N\CAC'L*B&u\[mYg!d]]j5u4D%ir=1TZY:)KOAGM.+X;=McQB;Ic>!kPO">cXnldVmM0:Va
%Cu&#m`VDO+.KD76?]QI%q:%@>YiL3*jGclj_OrYbO*lccp;f!.R8JJkiI!).!#;IS3NIgjKLV;gVsEA/1c?%>EF3%;EXbgZ#!Xrj
%l(scl93#4t5K)X)Kf;-WN4KE\n+9+)j:4h[jHI^0&3ok*:mkn>9Rsu.:03:0Mt)tlLc@MW8F\35Fd9!5^4b7M4$H+_1>I9FP+9@"
%QPFe1.Mm5'"elEe;H;5u<EE[&@*l\0$WFa[*D."\aRCrq#d1XVkY"n;n#eG^2sY\n!ZK/Sm'E><@7)Wq$aOu[<WRc.(8ti"\%-`c
%lu8[dT.8<Rn=$C#`?UBoPfF[sq8SpXT0*Wp;@FhEiGdm9YPLcG,9i,l$WhbAn$;uIE)06bQ*\nnd^h_0@'b+nltRk_F@>fL:?[G0
%QlIca>rG4)n5`iF.a?G8=cC;SO%>&-%Uai3>c`+@\u^5$WhLHhKl)b)>DUbfhVQi0IXVEB@+(]HP]Xmn&3sW7(C1<7J?U#/TN9kp
%osD4=%RRgg_Q7mV4hck\P."sC$HAf66jtsZaMKK"HrP*!$8mI]k(S*9^JaVhLU%n_SsN=0"h!'(Z],#Q'!O6d:.P,XKjHfFT3g-'
%U/8_s8AD@6eDtgAhDY1T.)47hS0C0^dKrad!f^'HGDXc)S]Tq`G$82i.XCNN,GN@"H>E`FqWs>"&BNa#.a;]u7fs)3Wu$Mp2c/b>
%Y*g&%]EHRrS0WQ:<?c:eH(%WS4Jo4FZ3\8uoo5%hX@!mUf;/1R0i@TXhi.s=kNrM2/kS.o#S[R:2'q.&8Ed',4BHgNQal<<VAL:M
%B,Wh#B00[KLodd!MYO3`eDI4n7t(n_eZ0rB=Pre\?#5PtAYPDscj#IC='MB$13t-_T[1IHki2*9@k,2sF[i8>d%u$=W8Ku_lK'oE
%X@^cF;i*X_0I3`2\=,.Y!G,EGj"LKKnKnF(el.k4:LFo&810han0L/`T!93$C)$,-^n:98n6haKco+0Mp_L*u9Ah")qDVZ<d'!-.
%F`4mYH4j_gT9-juJj=I#%(_VloG.R!o\.DL_UE3F,4J=i4Wm*'Q@Q/u.PB_GLtSF$@HGK_fXVB/NZX8MA;2qsUQB4=)e]gGnqR@\
%>*%EMpL-oR/OG)37\I&^KtfK"LOTjNNuJSs!`R#2LR:%Vs0:WSP%/46iiYAU&sI<*]))=_&g1oXS<[K5#Tc[+m^?_rShSk]`16%I
%S:(uS2]:+mem2sM0GUo#_:([ep!V'`8@9S\UN`iGSuAu'F!0mb%g[dQH,eMX:gn@uKMJ@WKei!2@65d'/aCu:X+K@H3RK'$hM+CY
%N-l*Ij4=DHEo7E?ORYB;&5Gd;nA\c,fHN/IiCR+-9;:r7eNMo?4WafFB:OOq6r9#fa0IX;!m#R.l3.e<i?bAn'OLq1M'-%(aYQ'h
%&]fd8bug2fl,c%cECe&X`*?/C9pp1\)%5''&<3n9X*&`j5kcZF1,ABZ\7PodoGT\Ok<Q"eK`uHC3X^N#7`u&92XZLPQS4ma/$BMS
%WFQ*!#/*Eb0d&/*pC)9oG<+LDGkF!B8\a6]52/@S_-)iF!eD9Mn;?eeN^F7*2KIBsTf[qSbIY]KNdcT8K;42JYeWh/H"E9?L`MkU
%'-(@>4Zr\Z5L:"r5aHCH_`.`%DE*mbZ3GV>ja4%DQo_fGL'%'BdNXBL(J>S#5r+K\SF^N*LbDA3U+H'2R'(,1c[>q8OZg75Z]kMa
%%q7`@6kK80PP\9XkK`b1m4(8a\q>,q35V>uT]g9HX;_bZTcBirEHl60,;:+f78.-fT+dk=[)@<-X/jCQO/&lSPV>:]g1jb5OE-iN
%O%<RA?89QKNf9V`\%8Ghf!S<gZWEF4FZNSu">/)L_h<#D%K8N7^IAePl\r&W25geRE?Eoi^`gFR"+:`L._mds5OIKqIcT&JeUJ*6
%8oU1u;-dWD;'sZ1>2.Gho=+:T!ICJL,fcnC/JNJ$mV%A1lDYfn'W\`iT:,p_^2g\pP*[Y1cc#rWW<*V5Yl82.W>64o)1ki4Wo$td
%0LSDD0Z[':3@NAi2RhuXePI4kKh6%9&h\qkS]2bJ4+[Ot^64uS/r\sH>o_NM]AaqGne$)8Sn[grD0l!1'f0DLs'/?Hn&*u_@f2RB
%q"1as]`.KNLGrT=n^BGs6r;pYq"i7E?hm(Hh;gMu^3]J3Roc51C+jl/p3H8Q5JR#LrsO=))u98!668A1NJ=3PmcB=VN7FEUZL``p
%8Br2oa7*44C'"*3BDCKgNG%ScrO=/'Z@a5dVa]Ib)>b7oq']`=+2bIn2_X6%fO0ZsSUliaKM9<Oa$%F"H5j*/\>H9GL-9,nW<@=4
%iQ45:Nk=kQk7bpHjArjPPWd]g(leY[DTFNLnibqP,PsRQZJ^a?0tJf*KK1K_+Ebcb"7>kW-&unth?$gm=N@g/`pO#q\-<Re5TNoS
%kd_[(a0hkGmL")A4lOtSNo@`ikbO<#S+!^#UgrJ<$<>/uNZ!YVkl<c!)b:V#N,oD'81s^g3C\QP6NduQ@X^Q`:I'r&%ZoC(0TMWA
%65RKnYP0F>`[&iT^`2;gK\ZoUA%\r2oa/-J6bn]@?eEB>gFTSd!o"QHSPU]Zd)M3t\r_nq#68,H`_=`0:LK/j.hp=1iqD*<Z=X3g
%)#L\l%j1W_\+>"hLrOk7&>ZShU9a.nBH1#UNb=:P3QguE1[Y9\G!Rp=8url2K,OFB2IBi0pZaX#B.2g.cAt4G2C!sZRK,+7?EA@e
%0h,I5:nABW8Tmi.<hL;i3fPYE1"rl.>7eg'$O%Nd(tobtoa?<?fG,#.r*laB(p<sIN5!3X\=aW_R1+g>J/>Og(]knsMn)Cl-gq*@
%]t#I/i5OJ!*JKm=`@L?C!aa*P2aS+&dHROAI`4Wmc.pK^!<_(fiWaQ\L*&&$^b.O7K-B\>FReukQU!1Sap',m,8YD;LZ@`Q>V,0A
%$XaeS.M)CX/DF-dGC_@nhn[4iaMh,!p2Oe8n)ae`Ge,+WE/Oa?_9=4OU.&KWlW;HmW>b8V/.Utp&<!I`W%NV>+C]<o?83E6n>QXt
%1&B9;ic_`o;K3_Y)!_/;CS^AB^Q0hS-`H#2CV$p-<(nVo/p<msCo:*m00$q$M1mf&0Z@l9dPkQkRmWiR:l:a?/-\^$0HRGh"/HbF
%%lglRJl1=YY8.\g."'%(!hpO`S)?[FbX06;"qm.@TU6&XALr4<kS;J:cg\lkkt5HZ'CUfT"u\2`m,4KD2DONVpDhPu8>#HqTUjDE
%4taXheZ4u;Ql$Z\?0)F;bTP3h5-D-.#T6T-*)f6+*+<c.JJ."S$h4#^k6,7&5S>l]Jt,%K'%a,jd0h(:EPWN;`,L+!mb6WUTlW()
%0GcQTRT6Zs(if7d.BnW#.W^C&do2^?NK:_ZObcm4JHR7W&-HQtJ]"k#qN]]RL*7%+NBeY!Qr"'3*.B`eqYa8hgcWD1+GfP7K)Rj=
%E'l?E[\bh\0e5TQ!E74bAg4R\C(fKH(a*J`@?fij64WKnPdYA7Qj8HJ=@S2.)0ra&q<^GbkfWuo$oPF":A@'p#0JcMSH1d1l^]G?
%ng34_jf2t7@>+Z3'cVtH>dYu-&X)(`4Q?mG?k=8X^^Ze#7GP(3)fG-ZWpoW\)b/<t>!cU+"3Gd(A?b>:RP6iV8Aif$TPat\0OtSZ
%-]U!Ahd\Do0Z-UE%fnGEO<%<p^_gsfU<;j10asfFCQqc-L@>_(@7ZZ072L]=7Y"ME(IgG/ejj*U".oeU5o43C6pT..7i"R?j\0q#
%$WfQ]idr])9T-#*=CG`'30#E+'4?>6]J#qp5d<_fCL@LuF?jab;A^OL>his[@H>[uRMV\P+[918JASh9d1[<YiB.:/(N@5o:<!8I
%7[qi/:r9&b[iJ$W@;HT+$V7cANQMDp(t#rHE-=#,/ms56&%nB\DQg[&#UB2.bG$/"K]Z].#]JdW17pf;)tstd6jUZ^$8khd(YFaQ
%lP''O9rE=hoO+$r><foU2oS_!fYIQqlhu>DhLoPS^qgu/hZYnTHPbIDJJsLF9l)'_27V(>\6oLCq%rqJJdgL8]XSN*VpLm8JAI'$
%D11@HUCO4TYi+l9KU7Z7;,p;)?j6/!Oq4MLWH?Q=;K.t]>!Tp&l@\UB35KT_JI)fqTEJ&9#9<a[!3EEXcPXJH0Ei:ag]HM%nTEu8
%Xm7c.E"E*n(e%2EmXb[eQFidl:I_YU!XAqb!#1m;#2X#iC\8aZQR`k%Y^qpl_J8VV#2Ya0<lPjn)!b10ed`2f/%epP[>ka0Z%tB)
%.lo@6@[ZEmi5!^W8mg5dFA95fKa%aY,k.3A);+_=Z>fmIdipG@E.Ml6@RUE));n"%is8ap8.E.20!N,.;CX:rA$?Q:><)^`;)c'M
%StH,mY:L]e^mfuM"XYqY2e?5;J`3F0,YB0\,HHT"\cN"h1tmmY/pP1aE0/ojE54_J@'NZF$,I3RaqY=Eq_;E;"jEub_Aam6!8#S&
%01`n3UM^)8N,Z8aR61Y\a_c-S!J]Tgg>%2Z`_\1\>AePY9#A8_!<E[>?iVF4AW3uMJ2o)I00/.2,:s7='*uCp<If#s!+>_r=Cc%E
%i8Qr/_#Gumk8s--a8fTXeYrh8=P\dg3;>-l"=DMd6jKSCot<0R0D#oKTKrL1_ujOlJGM16'%$E4r(CV9*(391:WU:jI6mj<6q@5n
%fK/;&^qW[qgd;U,8(uA:cG71Ul!u@#hc.:VC]XP[@:C]hjokUOM?fIan1X3>]HD`SELN=klF6ioP0=(#5jnkF;4.F`9e;C]o+U%h
%A8-!<Ng@;\^VKdoL#';trh^;Vgk#>Qi)YV.;hTn)*ltn'i;O>r?:dW'rC'@J8-8OP:prNkN/oeXO9G[N\A.g^nG!W=)?,=eXpaU"
%d!faj@"8!'b[Ck2?iDN8>k3F[QA:e=#4+"<?sB**ln9`BK(K-AMbo[J@Li9nYu1QJ@"6,s%)JKCIi4tj8un`d&o!Y,,"MUnnH!`p
%?;Q.A#3B;!l7]`E:gKanntC1!?=87]%VW\/rFME5_.j)GQPB#g"o"?XQ+#hb^SEOe0lVV.@J.VTpQpE@c3&auKjU'U?OQXqr^B9b
%ca^`Ke7i2Kn1WTf$HDnaSBV^_0>P=fW[OGB#0Ro=PY;r(fO#UoVShuMW5#Z-_6&@ho![Bbb[3Jg[1m8l?hf75_#a=(\!QAN*:ju=
%U9NGWo63qOoRQk1aYOe9nJ>Vjj?WSIi%Ma*KEi%'hr1On$h"l7@ae]BIRj*B]Kl>t6(!T@p)C9#/(QArfNUS%Id*ITIVtlAni`-,
%MY,*\As.'trGi7#qt+ul>`ndPK(M--S*;WAn:]2ojtOQ[L=U`Aq$!l+S<k9L4Fk.Ja7ptKl.3!K^M.c-[Xe.LF.Rao&Sp`n_Qc45
%r)0[0/itb93V)fG42roY$bs5[r6gS^bC]NN2,qSGpa*bMJIdQDKn*?6&AO+Mbe,'I)8uVk_Zf$9]r(32&AKbQ_F>RX^\AFMVk,&\
%GsDQ2&qTQ\M9hII(r%%,ed\3:IS%Komi]@r,)<op5^l",o\orC$Yj&Omok6IRoP":P/&m<c60mGhF*)nJGetgQR3f_nfNBkJA'ro
%nuI.5HXEHDnhq8<3m)@JBVGm]0;shF"OM(_I1#-r&I)rS@=CLQQ=Rf/P(9)d@"(]*R6P>S?c[6g(d$$H:1BT;i;=e!:)S5kq$!$Q
%6f@lo5Z!c^q'CTWmUr>&;/I]_l'Doi"f<OCK#!81$dp\(Z+sEDd]Y,f&F$8Kp&27M$du5=;qoJ^qSc#ogscGj(KoS5_0HQe?flYB
%n67moeY/<Mka0n3mk`<DW<tHgCR5q!7<&HE)`<`W00$^=&^Q>Y0UIIU3^F8^SDTV1IDP`U!iU8,5ee-apEV`F0.I.tQOD.naNF;c
%TO1NCqf8?:;Wo44!<&d;!/9J2nl^X7%%L\crQj^sE!OZA5#g6<i;@W)<kR&snXoq<;Kr6=ATei0>6<t(%9;'t356:=+[K@PIZ^Mr
%pr/9b$PlZmA)R9^k3%P,EIM%;'OjY5eSnY@"ikV3WOrmbk)An).WrG?q%^l\+f4WZ[JsbM5g4+<LHg<<"YPql!r@W+AM1@mrJD'H
%IKfQo'oH2qrSm'8cjl^U&@cR_J:8BQ+2TWALsG.Eo)\J66EaI`?bDF3mK!+F.M8$qeLp2/%et2mg`b1&MNiYeAXkTTL#EC?2>2&Z
%qLrn[5UVBg)+('ej8A>,4^5J6r.;F=*q.H=N:7,6(MUq:1=$fP4I/f]A@h>Ta8YXVE&i9V!rVW5AH`d(le!5Pf9(E"\8XOVI\m$'
%g6U3Ll3K7#^jY8>%.:`@%dlE+G7Mu+!84YMkmZt6]p=!#,eWBWp%?KaWc*t=e(6Y,]EuXN*?5#<,Phm']+7<eZ$E.`dfG1Jcs6'f
%LK?hJShH[nn6Nj*N_O>;61aJm]MX4TG0^1!/72d=&?>4.j\&k1=r*8SY>\^l^2S6_5[88U5m5XAN%_?M0nJ<lO#UQscQKskLhB"2
%1#*!U320i4iCfef:0._Yh6i))nAY5+?u[=ap,Mm,%,_LqY'lUihhr_=&BYCUhE<Bsi/HMcRW+9)b!m=\A-[92d$0to[Tf/e^`=qP
%>KFJ`Y,5MG\/1NB4guqZ02iohcKh^J#T)fg6\1g_[SZf8[$N/tZ2dsn]r3"i^]o#(?M#K&,ht1b009801C*:&h.@).?:(k>#O2`L
%b@3Dd-V*K68K@NL_0V/tS?R=kfqf2/)^gM]CM>k,0Ao"Ws7,\#\5bQgmYF5,c7$BI78qU4h_\nd"\,[_MHpd>$2jl-57).26@B;n
%h>e+ti:@E`!tK]b,knX0bMd^I3".6b60Fg0,qj4DR'&Q^_i(GQq@(W\BTC:E]GuON*Z=KiaIcmdVh=@>.PL-K`uf8:.].CTJ?T-@
%(K;\Tb9=kVP]i_jdSOqnh:#f0^mnjo8*D):(X#/>'fnGE?qTf(PntA[7<>-m65_A,EF_r.nG)nbP8=uNJq\ctb<BdSb7FHlW^44(
%nl!6<#6uTZ<"%Y&HQniL0mpgu?.q_Tnq+Xg=CC]_^iJm"-8/@UG2=s!#t)O]iuF9W/LBLekq@NY9O<&1+>tj>]VI=Ln!LcYhj(nu
%Gj1J<;Z@VuQTc4a4FtUIe-nNIR(UnA&h]9YpiP6g!QhribG\s*H]>Jm"d2rb@S4g`0;96of&]!KV)Zt_ld1bY!g5L4GCdiYZ:FQT
%K#gUZ(&0QrH0JUbfbTCVoStVoIR`C(C8E0GOs.*M!g34:pYq.QH`"r6jh?F6j<[8blW6>XVV"s=QA+-\:upCJ+Raj`EX(T9g*:e5
%!9=k3>8ms3(GeXPklSqa!Ys@aJ]N`f.g!hlpil#aPRAHaZDnlVSAGg5CfV+f=%;m.MU#VBFJc;+`6igp8upFKPLA2@V:,U,=%#@Y
%.mK0B&Lpu6BkBSio8L[>D]h\]]R"=Nj4XXV9/fmH=$0eKH=4Dh*:IkB(21@^*6IdZ`p7;CNl9[B?irtaFVV#aE-OZ!.bS?=?MD=j
%5iM+E/1r'X8?a>UPWTQ6!DETI\&[0:B*@)Z#PS?$Dsq#:lc]DH%O(#]n@LZ<"7e@sGBYI&>?^7&6jK:['mpet:W+Z$n6I/%e^bN0
%/eOfR'mY"a1Go<J]@3AcW4TYH))%Yp9L]U,0;JD(U*Qf+?`.!`U$Z)-GBn?hicU9kb6%>n(>s*'/?]H</oq&*?Z<V:4q]:jJ[Pq'
%d?^DtmD9E'GV-^S@1hj90!&>`,?t*J[>P/)Sm:2E]0%/aN<QZs@+]cofgU$3@]9C6gJD.d&9a1jK<4eT^b1GVm0d8;krZ$?"d=l:
%*Z-aNFPTE)dTk_A:$7M-g/uD9'j2>qoZU0VoFG^*YRV[T(F:r_f07+;!jRBU]/Zg.o7MSr<#=X]!0Y'(l@K:C>%$V^Y>.^[%V,Q&
%jG^$qCj.0!3hUB^@`Cr:"JA*/!BLJ^%DI&3]&7[=++\>49c#+`#\RDXFJmk`JYbI,BVp=.7Ck85p!-CFaFo8^5*0lK?O_WOJ96p'
%%6*/^7lM'g"%ILGmlXEgE?-]9.(Tfmhua'M2a$g8U,tJos+6r&i^MS+NhJNT9edc4V`Ttn#eGg]0Lopi-aji&7iLfIcFP.^P)=r8
%#eGl>VKjcs>rpB>(uTqkjY?"=1BrLb[XEK"!^\ibW=rnMh;_pj<:dXo$k-EB/AULr_9aJ4"+;e^U!)@F%q0Yj?,_\:]jg2'60#Ks
%rMTbXT$gBSVHstK_]SS.UZbHs4'Y'nB,h`V&@uiS(ADlJ+i1mb*)cN%^mPZH\+"J%N&/0f4r<T'`OVZ)Z>?ki+\;+Xl*\,(M(>d"
%/!gK_Y)4E,52D$I],9<4nD#8(F@OTQ#4IG*.Ks65nN>#6aErJEF$[U<__?-0]6aTL&L-X`%1;dpXbJlH.A1`^(GsUc_TjH]E'P6+
%>dhEl$1(oG2q1F>c<]$<ls0CLM0In1\LM/3F(+5eQ<"0$HNF9&gaWd">S)ud[BO_O.gm$b<."uu$]8CYkJI&@UHp-0(cN-PocDJj
%lr9ql3B+p^&:p@pJd$t_$Z[l!>j?)g2A\62S4bSleTF1'V/@]Ogb-"l("E<0"bFA!+Qq0.7Gf+HQe<0/,m-2p,%K[aE\7f$$sXq<
%K#,!G#'-l@SRl,iEs^3Ekmui[7Gi/ifXV7sE)84?\O9"t<J+fEJj9u'Y]COWB_rN+QamlN6NqWc#t7t,>P1NT]-?D^VPaH5&WNEg
%\,nZ,G;Ltl5EKrKPsLaG+QkNPLJA%!0%+pc#t`a$(IO>VFVhCnSsA6L\VRq\;(fYpTJE#b<?8#2e@u)G(L\M6ShA*p`-m9_)T]H3
%d$GWk\KjFI\KL&J$)u'YXaC@?,=,1GjBT-'[Ef^N2_cttQA(ieEo?3iLJA<:1%=[ESre".7GGsOc=Ob[Zj*(l<#fQ<Jt*4K?K]D?
%WALeEEo^I<@,YCQF$XB3>p/>$2NEA6kOQa:nR)kE+=,djEU<a<Qt#3k#'TDY>ekCkWh\b:napZ$/8eqjF=C;`>f:[I1g@G#[seBA
%pE6!REu-^\F&P?""aY(Ujomk+eU?E=ZH=(d:uLIkU8F+_N`8:WVmJH9BS=iBc3.r9@q%kJbbMIr9OBXX9a0>Ah)T:(IgZGOJt#D(
%0eC)Tc"2,rVlkd-T"V/jKUYVZ`f7S5EHAs"b0UFL>V7T=CnHb!WDjoY3#@p7&.IK%&?$7JJ9+"fC2>$UP2HSt.YS34#27DE\K#K8
%J<$/CW,MGiV$WCB&)+`?k@1IQY6s>qU*+Ou+KK%Mm"L<5jBUh&A0KWAM.]<[?I65j59BfHL!Bk4`U9FY^uD'%"eA9n"6:9^>X":#
%PQ@>uN'@Nf"$.54V6M&^\^X.fPBGqklE!C.$05@R`=W:3KUfZ1$TXP8eatY723A_/_S9B<F$URc3H?_X%&kl?>i$Z,eh_>!adf=q
%c5$!*E%G8q>%EK+.s*DM!#Z"OkZjp`#UCpJAgrV%Y1U;W$?PD54.#'&9V$3#>cn'Uq\_J^(/HuI1I*;hNH#O_^ps^#Z&EoeM'&EA
%#ihgDq4BqLB3?"d4&3#jWlRsD2&AkKXgA)QKtA2imL*Xp/g&)bbh\OL^(>@@lMn&<\OPq;`tbd#ab+">LW^]X9][-D(Y7MnDUVa%
%'i;H4^NtUV7?o-u,!=Z_8#Q^Q`D;W=MK`BWEfjB4L]Rh(Kj,#:`IU8^#[h2E>[VS<7)!u?jMD/3NJ3LQ&craT>p+0MJmN\JU_%Qd
%4aATS&9;cMd]s6G/tn#:D$3$TP3e<JZ$M2\@G2SH0K4_pQuK,o&9k=NpGt5u"AT#>T>5H/0nb2"-#F#0*%87:ADFK^V"HMp/l[f=
%42Xp8Gnf.:(+:dH"tO[IcBu,<-t-OMiZdD'J-W+`"9eLtY)'T\+r2&H\9JMSfbYcK.6<(SMMGDT!'qA=/jclm!t1,T&DT+i.i*$a
%.[USNQS,^L((r6YJ"djOJT0T:W!<_`$>m.9.kC\1pPhEi-PSlY!S\2'\7d^Ub2P%39uii3&9(LSadI2M>[f"pY&XAD,\DSGcLA;6
%Oi]^88B(/@g41D!^i,o?ndP=MAf0=*%'_hb/a?^[ltuLN`s_/a@e6>A-L$PB&WjJ86YMN:j=TqCZ>)a,V27Q#pE"jo80c;EKK\gB
%nVID#FgtWa!EYE\5iJG23fNP^EoGU`H6jd=%&):XTPbY$+74r-$R.Es!4n/!lG0rA`#iX;SRHD]PXVPZj`XYB3ll1.1@>Ok/M[jC
%i%LApJA[gZ%>\55HQdD_#e.b5894gendH$S^proglSc`thA/LY/-ia<+?E>,'B$<D;f]+sV3Sr6N@]X2[Y;kh7p3pA-ipAEE,D!V
%JU@f[[0?1/<fs02@MFn?H3(DW&]'4;Ziqj)SFlns$R"rqdhU:h0PU[:(>$?HEC=#9,$3b*BT"$bXr;PnAbXsca([gk"bl[gbn``D
%/:^YB$1>ne0.^<A<FI%WTPRd!!&o=e_dAY$+$d8jPj\JW@uGRYjEn\piYk'5JRXOQ<7bA?Ci`U]p;4&9c9QucD%o31&8Vq[nJX.f
%?r,:]"2>V1b:JH*I'!up#Y(4$G#$%M*P<./-`D,'n62C(S.=o>b$*9s\e`/!N$l]S9mAu4\2O/ClF=60MOL]P[=]j2VhJ;9aNXs'
%/bVkenenbL?k^JjGK<rI-Ng$-k<n\ZC-BD`.b/1*eTOa8ENn0`"]8@*>%9>GFtB^uc\#M"[0/C4MH%d*2sUKDX*nQqeCl4t,q^mZ
%n8uti8hKh(-UKd`/TZ<^'9(Wh*@DtEZgZ_$:s7k]<j)M28H.9=Ju==id<+BQctQ>^[ABebZpGiDE8&=l5>tt=@S^Ngj9;#r""4bt
%F<$bc%SAso>Nm^YCOr=2*oOEph@&[s"C?T3A61bkdT_V!c`_[_VIDhu^hJq5!#>oXg4611BNg)97]TU$=r?s0YQC1--/qa5".-HA
%!TF9K('85#6.E^a-6n7O08&Sn?QZ^HbJIft86Wq\OTl_[Zik!olP5MiGsu@*V1D2AM&84Y^esVMfmuUSOt^!i#h'_rK4E:1rQ!C+
%%ObKlZ"X=TmIV&+*/PH@SIh;-+Bj$8@715./a@lM2bWHR,W[e9.(!K_Lau;8LYJ6u0AAYDGep&,")k2WK>\cs#rapKD-UEZBS.-%
%[,%ER"'Dun1<]oN(0RDSX>k2F.5(]c]<9K4ZU##`g$WaY5b@A'6u`7!7G_hq)Qb!l9mTFIc?<"V]qEYo5Ku/QB=k)&"N2in]r9?;
%AHlm"cPL`Bg#:lU!B?!:]tdZSOL+H5'ceAb(C.-t.A`5iWj8uaGdG;MHie2/pjl'=2`ppCnI+(;E(em#Ak/Y:3nA,cA^=2Z!Kn-f
%ZX`c55QN]'4S.Tj1HR]a)DJM(W6cngAq=]dje"_%AkC3X@Ec%)a9uGm764Np(PLIe*$n)[,k66Y*r*%BF33eV0+1/p\=!D(G'`u@
%!gi"^q>iM[[d7t7bWqI_'LXgN%P3OPn3#kAY&"(D03DBLM7&Lt.Z<""<[h?OA`84dn9F)?W@T8JAWLJo+_=/s1`]G:.*N@oZ*E:A
%E3dRE'O7cuA4OR*![P3ULP!-gaT>7l3.jLcY\,"JZ:pAJo*LL0O@?T@*B:?X)JS5^OmS_pE^>iTIYdb#ObK/h6H?s)21i(-/eG<M
%4Nor/&@/NDM.%5<ZAWZ+OZeLeOkh&XAq??C*1:5J$s@2pn2@a%:gUIUa,h[ackP9Y'gibYokfc][@kW;a!5[+=dUnr?'7\`'-X5P
%r*b!L#WP5-.KP+.d22FW?tggoB7\)I\jj2Ka,]Nf@!oeN76m&LYW6eVmAd>$:dds$as*4`Q1BJ-WT#/<S@4lOIC4T8@C=0"GK,WE
%E%\#8N&V(hCC7R>6"mmcT1`AHA46:?!]641*4%3?fVdHI_p>J=IDh*C@@4;^T8Ts=#[J+aSebQNE$Gs=E*%uo)<@Ga"UhYAX.K:O
%iN3+*`."!YNkE=]L.jPA-*,UEH30i\3=aL@8F>8U%#knu\aMhS_4Jj\"4*LQ;ok&lg;p0?OZ5'9",`?%8FWiA:G!UO?*<Ftd!^eW
%n5ps8is+;L\A"38O*h*bN)G2c,VhJ?.qEd65C=I'87A+d@1o!,YS[us57\efY+jP1mMqaZHmEp-aB=Oue@b>d'VYmf*6baN5UksI
%[.1ZbliI]?3]abR-80PfVGf/,!$CMDL?8`-oA!_Ue`_IQ3Yo8Bo_"t!<<iinPpcV`,oWb=:(`).eQk6*fY*QSCO$K`IM?no0RN"t
%36Sm0K'j,mL?#Fn&^(iUBY=I0C"ZfR\I%bCf`?R/;[mD$:r%+a`^o9PV3.gL5[e&=ZLe/ng6"RX4Q%!15k.63;"giGdj\`pY8$O2
%-69up!dre1WH.a!.o$o"00Cc!(*,E_"DkF!;F+SAb$s"O\D'M=HJsehVI=MF@+O:u$$eb?97bQ2!/&L7"AmeZ\M5Oa\2ZjDaGJ'.
%L:_KF;I/%"QoMS7eWPcP3?g/Md'(;f0^&ZI?'GY9i-a/\GnX-Fn(:W("R_q2!8)[:TK!;LPi"ep$KpgGFDEG6W,^tAerp>^qk7G#
%4p7aF@gfh<9P`K)Clst=FX&$H88([Dh\AR@=r.*dQWB4N&:kO?)Y<*(V2DS$jeip6JuhX1_U,SWog4"Q'2-fA;&$@Z4ttl@oC<*W
%eYrWs+K)Q+5$)&l57]Hi/8mg\3B2dF`7Q4AELuV)3"=m$j.7k#*'A)/)=q,d0A`X+*:OH0Ce';@WlH2*KkH&p/j.!B8PLFDNkgZ7
%)agT-J6mc1n4tVsn<$4YTPaobFlRF?5#*b,#D,OS]M0YQ()9QG9QC?tc:H=/2&#\&RFVpd;tW2.^rbG.29!tg!=IDA?cKH,97q!g
%'>7-@6!oc=S6/RJ+O6>]0_e]rIjHXX_Iimi@jXDLOR>*R2:r%THX.d]OEnEG#Gh,A%b5HQCc@mQ_N+.p*AT#MM0ViHdZ6q2n-5l"
%biSm/NdafZc@a1@,E&GPO\(X/7dL`>:IL*Fi\2VP`&o.g.>[9;%#@p]NpcF)efkT]^B4EWjM,0BW$OLc+NTLQ&W@`sl3"I4!mp;*
%hFpOEHT)9o!TG^e(jd'41nR0s,WD*i/W2^8P1]t\:K4cr`5FZh4I-5u*:B[*h\*7odKnqK6sG7gbf)sejBY]V)>lj:0R4fL&A\&<
%m`\+QI%L>!,BW8R)@:$hX;FX0!Np.PE7)VQG79(DL-\,<M?a9iJ-qNA:YM2]IGi&]WW7`c8)P-'<[WUR'4AV'J.?h;5m!?,K9eC!
%N;uB'r!QUfQfpVk01?>%Qmatt8bL;O%LL!-<%")H3kS)_jjH5E<`]0\io5;t@Zjh5.=4op&%ASe.T?#u3R'[SH&n/<pBZ"q$rjL=
%#6G[rJJ_2pV!fK\s/aBhe@(H4fEY5T*sX2*C2BP>6S:^XMl'AB8lIk:N%UgkR'Fr35'\L-joAY^\E;?>d$Af!]XGtgW"(?o#@S7L
%U%P6j!`OC]L`(mMO%LS\4AU^TIY&G1.8(98YBP547Ram.-Yj5lTJIlk(pN8Yk)#tgogGBob%&WU'.JBt%dnn`a!]5eI2ON>:tTbQ
%6L,+"5o+-o\9akXiUe^==u[X,:u$J&*"3;r]^d>nieLb>b%.Sq[lk5"_85T(kH#C_2Q$=r=]FQDJnV_r(@-ugE5Us8;_=E]!X`^l
%fTPjH1P"(#C?Q[?94t7Y4`r0@K4j19E+MhRllPa]"II^2:ir0@>2jt/b_7FSl2\.6gL`=nB+Pf,dlUP#aV02Z%Y*$^@%amEEp.Lf
%clSo3i*(Jt[fGAP2/`/ef0^Aq_YPF^<Ll&n3$=`o6[?eK>M\GpTQ>J/9aQ_g8Am;pEFHK@@CJe*@am&H^Y7GbHn:;gO#)$Kk([P#
%"(at4Bg?,Nhg->XGB'A&E*'\#Pjb*s3,H__0f[RAF]24P&%e<"eNs'G9B0DGf'MG*B8UdIR)MiQj+bfij`umuTo=mQ;9Y('G)Af.
%WhQf>NAs7eRq3+Zgt"3gB,u2-[\Ym1IDJcLSV*?*"DhN_KYVQX.S'CERHfI+6!0WOH<Q]dV0*.>(dW&"!8d4(6=T"0FjX]:A1=&j
%1;X0sZ5(#dBT,WZnJjN;0d%`tXHU=q'`:7T;o?dXZm*6eO$DP=.!$:e]L.]P-C@\t3$^35TR830bu+"q,n(drf],:Klq^W?]FL4`
%F^1O+bG'rD#k5&(#0N.A]]ni>PK=2)&l^&1;tJ\#74H*soTkF%'nl5OdLUrI(fJn5j_CSiSFJtm4)Wi-MF'H6+ncR<))9u'W6I'-
%$!52L@.hul?JGoB(hapRVd68Y3iH2:]C^MBZWQCD.DHLjed`)hYPdG-mI'"W7;js'$1!+E^7`sXSO^Y(I,+?-ZZJAi-E?rg.^E>6
%UPBNdl5CC[k3WZo8GEd;e'VCY']Zb.Li?Y_roL(Q6Y;jSg@4-=$;D&^LiD;QO8/4t@#ZofQ`eg`3%@AV8b&Z/1M"tG%fM*$6Wma-
%W_5q:_/:Y=AP+&5dU>R8QXd!@_7^1.N3;Wcg^NFaRn$b+co:H5QJ'+XC*AN&TjB(lL.<scUKGa#D[CVd=nR:6<\oLNLEUAAJ86,t
%N-M?2V%b3r''O?U.JuW%js5k1rI@i;i^hL'f("1tT<G,lR=GW8#gMA!7,<us_r;_':b[5Kmfi?e1SCe3hO,A"'sSEO4MXdm9Itb%
%aFo(OOt:\-I-%^P[0Secjh(V'&NL?^/ITs#+C\"EKcC05_$t'dY*Lh^=E"`n8]\JK'Q*k$)e&U&q;<Xk4*."*7uL1MXhk@r+`;`7
%/HXT[$crpWdKrNf'A<mrPg4`X8h7hDW;XR>bHd&4q><-:q5FLSlF.FgQT4`9Ig3<,G`:gL'Lf%?Nc1<iL\6aQ!B+Mb)1jO?"LUr(
%,<<@jR2sC$A(+fi@eC?rgqjM*k'qMq]j*[>-!*;:.C0co^(t2sl3OqZ_flIQ0!GpY-b(=^3(H7%+oqlLlQ8]s0a&WJ'6e04N-i8^
%krLUp`tJ\Y6UGa&k#:9q?uS@8jQqUN^4X7$pgL_JkW=>dep/KJLA4c<.c`?@Y41$%BABg02=`ps(5rF3Jp8eOd61Cc&->;1pcP`g
%*<T@_6_@/EpsUa&1DM`1@TP]L5IEp\$X_%0/5;T;DY1CCW_QQ/(d=AE-u\>RJ!bO'$^4EkKM3imAIqWWj`Wt)Qid7f;dtWj;b>3$
%F*0_TA3\Y=LWRY/N43q)6ptZD'<C)QbC1.--MTQm.U4kC7ZEW7;!#"fH#RRXG?<gp*IJ/!GQ7oh9LhH"THM_@a@F)="@ZgN=/')+
%PXlt@9Xr(4W.)#g^%T_HNJQn+7HGA'3p2hg0pWObo8s+dc<'#?e)OGa>7!V,D')/H0S2?YG_<k"/`+PD"GM7mQ"-se9."V/8l$W!
%6S8s!!kdDQ\V68jbX:5&(.Zb\'F^%AXlq=(jBE@s\OU6USD/CD10?Q[6`fN6"`tK"@sQ!D=$Q5Tf>/(kV[7p1-n5a,-Fa^;gs;+s
%7#WO-eRd]I,Cp/8,FNj=S[#>kJ`>'0chITR5L'NZYY1Mo1b]t;0Ob4k*7>8oAh?Ubl)ZPW!&V+E&X/a1lm"rAM+@/T7F#7$8IdC!
%)26,g6([Si?q$T/ADuibj!p[<4'"8\SY:V.RTD[G54ub*JW[H'e1rZuin5C2O0)"Li5ek.E^AoN8#?Nlg(nBO3BO;^_d)\p@2N+P
%J7i^]Sg\Hi&HJY>0&_R!%hi6\%NM!a-6h%6-Mrl-Pfn'F;?1m&4GrR]@(l,6U[(B1[51TR*8)e:[)rXja0?85bn)E`DIfg_4>#ci
%Xm$r.T@)mN,u=8I,DO3q`%bQeA!!_GVc723,W%G*iDn.:U/f&n4=QMQQcH0`#B673!%9W@\6cM(ZQDu]G;.2XpCOS1B7:m3J#(1"
%#[kZ/3_7l]H1UG>Jh5c$j@[h)'0`<m)9?dr;Hq3F<q#GumTgc8di4@P;/sBUq8b;aEI%j=L$3&RI6l"J,R.D?b"r:<Ahpq.ja&-R
%3_6a7f=m5to]Cpqdnu7$N"&#=S(:&HNXe[4=$r^4b_-ap$(_8b'gaZA%KcBY']$$t8cTI8KHl[Bq'\LSJ-#n9YA@>SFe2oBPrO_)
%(``bC/\R7=<%/?,6m2?PHX*$Y3ocd9$\g]HNWX?WlW5ZgN*t<iIh9\Sd3b:Y+`(.1Np5LbgnRk''hpZVlK"Nc32!oZ9\ZGKMa5sL
%+Z37Lm7f`>'P'F(bS-Zua!cUc@-ihc@0A`e3@]oTIK+o"L$B>)$UQ4d%t#n/b'Y0ZkP.%_l\+0^Rj#4KSq++nXTBp6JqGTb1#pYh
%C-E'lJDkSjK]:ZVU`=;i%R,DnV=p_MqFI-;PN-mCb$B7+?$CD')f-<IUSuU;L@^3G.b=fs_CH/\mbBp''uHudSH>+HW.bA.JbQgh
%E<dXmU7;HfjoA>`jgILR08>nh3CSeofi+MD;rr(n;McC&4#eP\J_KeFM\U4e0X));AWn'GbJIYdf-Y\U:DF"$)<lLHL5>lYERB!\
%8@gWRIO8mgID\Scp"fSB*`0B*nWr%pd;mF%@_b;DDA\8?mW'S7U:B0217$;:c^ZK=c7l.(qc`5"b[,ob?+i#6eK7!k:+go`GoK,*
%9Eg+cU(%$o8..^%0]MiINP3=3i=)QWOI=^b,,&C)F@!n]a@[Z[eh-J$$.-#8,!Z4*.P535A-(QU?>cG:>cGc'N2!TVHf$ZThR%Qo
%+4BK>i?G_6]D1Jp)_Ggs`n:q_*RODfEAjN1+=3j>&'5-n"A0%&Dc%N;(Y^!B*38UV<d'4Z]7]+\lMt^u)m_W>CK,X5$Jk7\FQ"?D
%-(km2\Zp(kpVMY6Va;?#+SCVu`hB:Q:p;YkOr-"tmOW/Fls^$aiSs*N/Z(T?h8^b3QpNK":mQlc<2El^b\/E!nFX2_2KE:7_,)Zk
%c>?%(jN9a#7HYA=Dhf#nrHg[Go*Q<I68m4XciUU/qoP_=<+RN"c&R`,Cf4u<pWWKO"j>&0Tlm!e^&UZ3k`\hX7GUr]'V8;@8ek)F
%V,%FA0qQe.-uP6\Nc+0fH$FkLPOY&88`+K%A\E*tEXK]'%%_WT!05FICUJ!H!WmiH`_c<iC$=3^[OG"cr,eTrF&P<B!0OV(qil)O
%B.4t;WC.8]F)Z8gC't994D?pfRiX>g-r0*\Cn(Kh(NOir?jOi&UYC6nTK\hc;`8e6[c-MT<%a7M^k:++&d/o7^$kOmqe<+m*et^X
%e3XWKV$&IRRJ6W\F;eLNZ'=FIk:UXKaGl'J3fB5qkYiAYg3#)FdZ)q4XMe=SDMnkh%Z1W/LH@\;S:P^E\r)--_SbFN6?9J$Nqk+0
%71i3kLcL#N0aKR%3jJF_QGjG[Fc+'fEK3lh3&ld-\-)8m--1$h"`4N?9QrWXV)Y[C9E8nt3i)aCSt;b#6Y<4mS/KHNC^[R%=Mu/d
%H._A7e,c0_')QD#mR]oh.8qTG]SBdact/."A0lF=K&GQ!If:uK<,-YR4lpMEaR1&5'e"`Kk#lh#%?*E+%-Y37\B^]2iFFCSYG5<n
%Rk40]GU`o&6ZHoZ^6?[+[<gON/4kj[IETiZ9R^XZ`iR+Xn0Cg(_/hEX"Etk]8bBJ;-2kr,^N=/QP=.nii[ke?]A4D^ij,Jo1-;2<
%p!PG;p=SB_^PE!/"3SR'Vs;pP;Utc2:s=$$'"<UNf`n/TaU/jQScM@-BA,MFW47nP#lm7oVQNh2O?:'/K/CV1ORLuc'GJdm<%#_#
%gscFalV0uD>UDC[m_^!Do0V3Nf3Gu4M1Nf@oS\NM\)i4D%TCu^0%_Wi(Xo+'L*YWlS.-/_$OSg8?pNDSP9X)<Lof]5d[#Rn#RGr]
%AIp>6&4Y\B^,=F*3/C]Wlfg3iLcP?0j,(bEBcQL#jIr]6'Lk$C@RFo_Ha0*(DG!-^$>-0FQ]#"d4C!S:d6f7Ij:=oSa3q>-AAofG
%-tZoq]djIVK75d\'#WV<;FTMW,SJSg`c>JK1$+s7N3,,$0dbrM2C!WH!O1qA#g@),(1I\gni"mK;YF$_.X%[`ohR\EM$m"Td((F\
%/JN0B7is,QS"bY,BCmNp>VfWeFQLb94t(h^T$.5d)sCk0^Q,/6TKp(t,dN%F*KJ!2p)U(mJ9!]F3CZB(9!cJSH@DNLG1.>j:aJjS
%)S7a)MBAt%g'9i[kO<76!iC+&GG^iACpj+A1TnmK5ti9W-MF2\Kq7A%W%`jq*57#6Has*/]1tFQD5s'T4NqpA9[:aXqTY4qOL;YW
%,r;Z5,12M'=\YIgO%eQ1aJ"dX]DGL2HC33i$n$A(GQ7r^\%B*b'^_aQ]p.;Ho$Z\dk$D5lIj\Pg-ET/TSd6EjE^V@g:eMY-A2_Nu
%1joL.PmMt-cp!^Zan;VD7>;jNUNe4>$CFXpG0L%$p_TsH0_j@"<Bt/UGkWGC)<%C/YC"5(-p#JX#W$_5<&P#g0!d;GRSIqK*kc)&
%CKQupL,j&be]8Qg-o,S#WYJt?@;PQSBdsV"j.AC16qit\["*<Q2.dj2PNS#U7d-nEcGn<SYc>L\@idf^dj`G)6AHs`;;.*J$gnLH
%8TJUhWRJ\3kGC:9R?'QfFWJ1YYmPI8AY./14V+K<R:qI&8KP_QdT_j$aeD78(=PG$<OsjX$Jc:fP$d-V+SY="mncXMfFjVP?Be+E
%cPktgK&')UR(!=0#<-_dQ`Maq?,\FDqU/GYCFHG0K!+;L;Cmqqbrc9i">X8.=%9E0]e`n\mbNSu=7-<T;A7lE!Z#<Qr_bsHA2`]E
%Z^;U.?mgam[OD:9@B-?mT@HmgFlAtu]'VBdO75V.4h/8*-10\<YZ:,m9:M'0#gjp/)sPC5g2_D!_L:Of&cGDIgK<L?Nk@bH;J("u
%Jckm0&eUe9qI/21:9b,fi5g`#?KT1?Bmj\rfjU3DLkCkKUN9n%V7RMo@.KVK>7.A;j?Vki#>ZZ)$1S@o9hhPpJ,8-H3?HfUDGMo2
%lJK_^A!\uQi1KmGI[N\YU-&QhlM$7jPDb1$Ben!YcCW[2'QZOmA54e@k4t%3NH9<1a4kq+iS+3tTr+g&n7Z`jMSL2'7?E?c5gQhp
%]e2C9PeDALM@L#dVo17".')ZN3^"Gs]'\J"DI1"CI@J2bmAL50lkrM\$UD;Y/r1om.Uu)"4A8RVZ.X8/q/N%,s&nk=dkKd?3"0[W
%9m-3+'@uXb`MEo6LUJK%&\<WS<p/CKcalf_,\@:LC&71#:X^aq3hoHBGg^^*W+tmV.oMg`nQo7\]]ogUI7HE*7?(\Vng8jgF#,^7
%BGZBqP*+jaQ3(&P9TDS<noQBOC8]B+;449&/L,L]$_7H22(M]XCb\bTcS<fSfQ?KEBM's6P#Ls+Y:;C1^TNn=Y8$$BmN5UPa:ZRg
%4u<6M7t_!fiUZ-]2CkVZM0hfnVI_:M[(AhS.`A.C2*o=\WMNuRiQH*[U=+%HT[8/?r.n'6YE^ss<C!J'Q_rD.JubY6?_-,3dShc*
%#3?qmaj.j"\I&!?2lbL9i!7nf'G-$F#C8=$1KIEpdXtK%(bs2r00&Jm"&'pPl6qhR%m2$K-.:m@VI2!)kUJ$O@7HB:r0"-J>3;Uf
%DR"IrD1L!hPt38KT1.sXJ0#[]?ac>TlLn2;dUAqN_emL`*f_0(OLG467@oC@2n9MG#ttjT9U2L9)G'<_n_dE.,L#.:`0%RURO4bb
%4u=Ih&Ks[T*6@KeLa,q%h^BO8D$?1sgr5bXE[74YYs&o!,.-?B/7nn-Bh<Ko<5A#ubiHd+&pYc41d@B2A8S]H&;gT<:;WH-;cW\]
%Z=R(<==P]8&K%<%h=SQUKe,"`Ca,M%G=B,#^9'hh*DVi5MLt+UB4-.0K)8QOS:T8=QTkU!(j]mrd5+\ee[_VN#,QW+l#Cr,alE\W
%'O^KWhu*N,Ha>%\N[*HQSS%d0occ2+X9$;S1nR<P1%g']7a#Y;[B@o75Z+WN>1c8/'`6?TqVRWq4B2P1,bRr(d[<15!KK:)OdWJ!
%q!rJA^u'[^H-&ZpClr(:Y/<uW)ds<AgD<FoLMKZb:AM?Ge-(tMqCA,*S0X!N!#CZ!+@5uO6]9s'=?j/#$)l,%Ko*.f-4-M\gSrlE
%4gSoMTPu2D*]dr?gX(X)04o9]-`.q^r!8)O'dj/@HBZ9>ndApGU,QW1X)P^@d3X&a5e3N&q4`n!#]pIRDWt5i*&uDGHXso%8@HXq
%'^E\'iqYB).j1[Z+@_"u6_0@DUVg";@g;0b6%[$/URp^@!*GV:XIeH9J\o=MMj[%u0hW@:]cfEQ5tRb`2<8,]#+*sHa81#m%^\X2
%p$n\]N3YtdJ=qhV\p%I.4ND7`G0/K[ZJ-IPjE)o^:',)"EkGfn8eGm^G1](l,d\N]2^"9C_Gu#L]M[$>UZ=Jbk^_A2.q"]9>ZFf.
%U=sUS6KG4=)Pl_XV`KQ")iIU<Nl7@+Y'>[]E$97t/,U>+\.Is#.7ZF]`lG?\NCOR;^*',P0IGct.mjhQR.5?"NHe>FNZK8+Ko"2G
%1`Ne/>Du8B-/o.q9ef66n50e[$R9eaEYUp*a@Zr'`EjfBH.Zu=&gQ3dE_tt-9L+P47R;\:_6+9cS-0gt7]&$GpOtVk&ojmBNu5N8
%Vl+okna,j8`'P%V)^f@S^DSFc"uJHoU:K6Q8ChF<oKoW`PR(JaL?[(X8W43%`4'.#056SG+e*"Ch'"D6F&)6jT&V5D=Pc(P]`7!s
%njjVpe9IX-jsXsVAPU3QF9OB);&=orLi@60coIC;]#NKu2'fHXi5eJZRNQ96ElU`Y;%])2bML&?Hf1BiCc83e+tt)F)*tpsj8d%'
%d]\HTj97kU`pltZ+Jea>M0RRpjG]SF-fp%n9JLQ6E<9)#X:4X7Gd]F!F-8aW&jnXYJjSUW(3tQV/kY=N(]CdQ]d1_PG_3_61am(X
%V%Fraei6l0$])u%ZT8YMpqpSWhk=Ic1)Ku1;cX9_V45=fi)(/I/n<8>osIA9%*`ZKW])n7"XsEW5mLBGR0H(+][]t,,_Y+U,9`#/
%5+%0["BgmIc>&Fb]r9!Q@jdtRlBHe7*]gJB)jDgN`#$YmRcG2p0<c2eWCH07(hR?",`qRc#goS24rEf(V<4[d7b2+lQO+T`h*HSd
%9E[scc4/(]i@uYZ&27`2CBnK.j`7U:<X'Hl`95:HHY@9_,*Fr$OP(.K,k,JME^6Tb(]<P*?@SZ':!g3iL7OE@!,<Aj7!V(M%TA%p
%O4-mm&PqR-N?M\2!%m`bIVAjXV79NDTdV5QVliY!$0(fX`&mbLZYY/Z]/6k4&t<ET6p\B!a9t?YH,A4;TO4$`#)78`Z<AuZ8Y#T;
%cF-1k7Lj3"joGT04bgmoT7_,6BsSfq2oQQ-XiaBA\-0`0RCE5+gf'`_4]Q-WSD^JO9sW85duVXc>r8=D$R&NSP1Z*5nGk(c$IegB
%XgE&n#57G'4GGi1i$@I3&_-@WCd&`V<"sESi%4C]3<.);BN:][OA$n@MtriMbs=Zk,fMt:nW,Jl)h0;W?LX.*.K+fd!l79(h?7_!
%66^YGSEJ^YEgbA`>D.Sm&f"ERfLh;?-S@[bEY9>\pgmI."/m2]#;-)-"V!j[pdeYEA<_D&N#WIWT-W+p*0hf+>Pt3e^_l)-jI9np
%?A,gX-:dSo/P<LF=BE$-$Y9[*Kr)lDPZ"iLr0iL2(a3%?^(iYEi:X5m)eQjL1NV(T[_eQ$+s'Ga\G/I'>E&Kc$8I9%",!Ii@MR"B
%^.O9)Tqj8$5KGe6H6cW+[W#Xe5=q#;D9VcQB:fG)<,oc!0d>\Q`dgm0&Y+Q3No7arNXP_uP3Y*&5AF=?.UU0(7(*_Y>%R&T_E2>Y
%L^R)n-1M6%E$I-@@1>msC#P\I=c3qZX+WZ^8XR?;"1H'^LeJHARf/J/ctMPkLJMKI8>^RkqKEXr45I7N4bNmNC$<FVm3E_#M.5Of
%e0EaNFK-`1&!Yp;&=X=:+[sX@0:[ka??*;+To]UD"saBjJdenH41mNi^!N+MjgjoS7B:]Zjt!43-6CT+&04M'pI-?n773LDU=UgX
%WnLdC3U2>:B0gPSeUM;e,;YgNjOQ>8*Lp@;b0X7gI2hTT*565nUO=&(U8\&Pm+dbr%APRLGU)a(:-.OcI5oP0hXc".d-1Z-/uN,n
%Of^\<S?1XG@1i:(U?X$qW&*p0iaoT5`W\_$1)'YK$4f`YQ>h_i@Z4tiIMa(%@h2$M<FifNHZ(@k$oeD_pOFm^jN%TAFsqEB5]0K[
%*+AP;s#Gt:YtbCXj';O<6I[R#"F5NXo@-'1B1QcKandFU!KJ[d1_k@'Q%W-sJMGk,O:GPnhB;Ur"i]X]coNnq7(*afiiAJ(5k#4r
%ql#5bg"47@-:nD_K=EO1RRjNA(p9Q#NHKg;M(^\[-TJ[B#CDPD$rK\id[[;\GX\.'Q\lnb1"1`@i&*+gIVc;V#->gD>`mO>js9k*
%"QD1Z6B]sD#YN<Z892@O#=I-WGC1qrB.M`LSSVYT*QC4p2\CPeK`V_*cq104WL"`O^,\2kfpjK-6A"<UR^XCU]ESLoaOuq%Qee!&
%Qq\VJ!dbq#;1okR>':p$La/%]92pR9H<U9QBXXKG,SKXmZab=l6k'SQpb>bmH=l3@2D0Y!6$t^Rc$sq9TV./3^tAK3@NC$l'IsM2
%YUPU1LY;4S'\>]]9"TTVgMA5I=5suMABN78R.]\ll2t2=Md4?IN\4mHE7Z!TM>U?<6:4G%CWabPW^.Ec+OJJonHB.%&)/]C.^2&<
%C1WcI!h80d8L#.S(pN_Baht\`F/3rs(%]N0mhpgKb-<iM(c*+Y;hP9q2ONK`_OF2]cJc8QmmOp\QuK&Cou?2@H5K*kHA-E_RHagl
%-7jh+]EK0U.<QnV,4?&1=<7ZCY9mXs:<HkU.+;JO$N(TX5BQe<D6^\+"bpF""R[:*NS6CRN.XYt"'a2#Od_!TF."#]!VSgZU<EAJ
%M0V?sQ3(`RJ[/R61R6:Fn?IqBjsm:</uM79^1X-&,#=?FA!S7Q]d$l0.e[roL]BjHf0sd++E9,L0eW>L;umUVg`$m%B2Qc&9<m$U
%R_<%beJk*M^l#]_!g1_:>u?q&PK8r6(l49]NpCB0,3G+&/tl3@!<@@f<$Ft-'mQid8@oD&$)G1&JPb@%M9O'qk^oA-=%Jt%0;Wmu
%&gnu/7W8?MQ!;T>'S)63Zm<LQNg`3GTYXe%Z-=FqPs#KP>q.5e^_e+^.SjW2iKT(l6I0)La=;^9g<0RA*'ZqfE6E+:.tPJ<QT420
%"a./aL)adH-&")+pF.(U^^WjP0m'^2`bf/f/9?ht&j(.(j/4%nMRqYr6+]Fe9t2GKF:aj;Am71*#eZC^!aH%n!`HJ2gEQ]Z,<&,E
%M<EY1At;O>)@tZLanq#`%\2fD,*$Wl/=KlSSY'k08;NT7-?pbW\AfiF)+Mql\^9jMZ;ZcPQ!'Y(F;H)5[eA[)=P2KTqgeMgObAUr
%^)[sTfm?fkN_K%gA"%2u`#<>bei-3j1nluJc@bZ1;0A!1-nCm7m-KimS2p-:\TOU6PCa3jjpG]qfr6R/,"F2*/N%,gF#r`o967Pr
%;_Aha7g3E5_G4qq`\AhAX!TXC*5D*8MZ\SR2.)>GhRG%Af=r90?RaZc0ILoT%'N8WVolk.nief/k#ucGpuP);+N?'1'#V<#QOg'+
%DWA*aJ9$4-'E&M6SJAc,LenfVDs[$/[@!63Dl?-qpO'qfQR<*/2KUsI&Mj23kjkfZnr,3!(gc,2e<l75L;_A%fQiVKO>tJ+=9Vj@
%TZSjagi9jr'jH^^MU6OFjf$1cgOPSgA\AWi=cU7^26\(+h?U6Sg&Oc8ETM9m6pRkfj]QP^"tM(-<\/^8b3ACtL$^Q2^$nZB5>^H1
%0`OTl-O[Iq)\5\(eM2po`J2X(fYFG1Wg%PX`Z;h"Tnd'_01)O$Q,u4Gn3@%i_W7.^Y*j_C-jT!>0INM;OeBnr#!JFgl.?k*FE0eF
%##8PkY\Hl>:mfqs<@feX-=>%cn@BL**2eM7*:X%VVfP<@UbcKSkrciT&]U!_hZ`L3kRq0@3m&_G`\@`68`$9JopSG.ME$D,85:E>
%3[5T)S=Tg_h,ZN+hRF?0dE%Gd(F<,aL1Cu(@G'WJp[4hHO3u$G-\RWA66dia]2VffEY$FLCIB_E;k+R$;&D:r*":S&XLoaTBn_\u
%3?1_7KosiH#qjR>MnD]jHUEoo9bkB;;<4Zh!k[:r7F#@m3s?Hr&l)i5_Y%u5n@<"jP8FQI7?O@t954"DfH.XKO`r87BHV>t&#C7d
%8jpdA[PnORD'a9WAWZ5ObRijKBp@FI+=AV.YR2L#'1nH?GauRK4'B,DQJ#!/_:];DoPpmZ%?@KD>5'N'NYQo2%a8l?.=/X<`mP]L
%S5P^dqmQWf(TGAbh!s0"1DB2dV3nHjj&pt+"ZoHZ'3MB$3_fYg0$Q+<a0Q]`PW>=hcYLaE&h'u)n3G)/`$rYl*7oeHRL"rc9ir$?
%hDeaa?;b1Q<*R:hX0?S!oj`BO@,p=)6Jd="`[PHCVMs#*AQS2T1nHPG9hFA:bYSK^Vj,OZJYn&U:-Og$24Atsk(s#Qodb\N:4fL1
%HS[FN25Ikj@iWeX_Xe2@bK'd;'kAMIe'S`a8cdu5cfD/UiJWn?#=A4n0-88,Q/W>kg$B,"IS4l)2Hu#3-f"dujX[\tjT.5^eDagA
%0>i6=!K3-kJ2MGf'j$WY@E%1m%?a&5,.Hij>X??nbQOZD1<&L,3&2s4*9A/GhB@c?rrp;1V9%$Km)]B+>Y>R1ET6'L5m87)M'pl?
%N$V4/5t&#[:uYX%!6,JG?Hm##dZTg@_$<Fl$UW)diZt1<Z9cE#^mK_A+\qPA=[:dK`Lt8*EF&t26SJV\2&Xp=iE7b(M@\%$6]fmk
%n>q>c'HU"snfe3U(aH@$6sQG'OjaA<W0"p]9Z^$S!J^clh"`0'DE.;=LHu@s&-j<a$4Y<Q]Oi[+3(\8m6r5lM]V$lbA>Q\j\+"qV
%#KJ+r6l_8NK__gUE$@:s=^kusPJ\5C=&aEB.'SlOP?7\[$jocKYG7V,o#<EB="rT1pYlo6S3d;X$s#oDP'D+ZKL_lZY7TYi_d=)i
%:.8p0Cd0%qUM?o!6ju>*TPPRn^LQmFQYSE=3;lN/f9&0ciuJe!dGSP5.S)*(1,t9[/ihMf"t-'/d-;(u"'C/Sd_6)*nm582M`BTn
%k\sE/]YbuVc=*M>Z&4AEN\au_8FW?6N!oi5i\t-6^a2?li4toY`/Fog`!sD7JNF&`%MlPfY`"[[8Ib8Q*,sUY3L*5ki!Iq\3Netf
%58/C-<tOj*UGiG51BZE([]CXf]/Xo`"Rn&38-OP(!&WosoN/t<XEOI`OmNAQ`asa_@2D;oLu9<G[ho7-r*;:cIXo1-Yi:,$<3b=d
%N#`8sL,IE2+lI6MZ1Qa]U/2g"HO(tX[g<fE*A%"dH/CY6=1I^ZY^ghiZu8!A+X0Zih[Xg*TmDb">&&]-`>J<n4GOUTm+W\R2RXXY
%[f[BZi@.+jIR8KJJPQ[ARoj=9$*S=*Uo"h,")uVUO>[O@*L%\\@XZ^n*DR59I<Xnb*%46s#c<<#Z30s#S0Oq2D\%YWe?W-#2s&OF
%'PGD\-4Pin4j*SDT^us/77<j7b+Secb]a25PQU`+RA'B:-/-f;PX$YqRdhDOfO0O((cX[r#iE"VEW"8opnk827%Ypc3sK\d/)Hb?
%l5]4Pe%LCb,#l'rOCHVWp*Kg)lP8,8LiZJ9h@r.M1thsB``[+g/$:hqOrOKP:`AE>2h#)o6%ZXOg<#fKD,Q(6;oAl<X;1#[pEWqs
%aGKsBL'u83(Fr*%Q4^gp$61d$7.7&i7Kn*:S-8E'Q01jP+@.h/bnIJ`jp0-mG$-pAk&"OP1Wu9IkcfRdb+#\(^kc&]2h@Cd\1<e&
%c6mUp(?I+r/CjqSPkU7HauagPe18Z<Q6JLlF]t.87lZ^F\_p@)+E)r.+`1(JhM?)<*lX#t9lh,7bXgT4+gWtijA"O&MmgkUDb-!u
%TKI*5m@ZI4.0ASjQEWaIVW#Ng(&MFu_Cbo\`o!94U>5siY8ge_+E*/!$jne$j"UV6,3R#WO>d^gaBVT(2r[0_3)Yhs!(g2;jAQ%2
%M4*TZ+E)WUEP-9t=:jitRcBCK)M!g$j,KFpf%],-it=$7o*Nc6)$EK3<K9#4D?7KeN]4oc0dUkZnOCkh_jQ5=m=AG1)MN.CBn.sm
%GfB2BY]crIj%TTj+q3MVXJs]n0](YZr@Gj2;nNf+0br`.aCeVd<uc,k1[J%#hM@F!Ip+hg&7E_c5i28^dV9KW%1*n#%-1+q)#Mo-
%DgF+Q[[#lIn`NFZ1m0dAW8L:=6/JQUXOE'/"_8BY+/P(3aiXYDlqHssZQ.3.$M*VQK6E779uRjXm,s&lmTD?XL#S)mC*!q)C8^qL
%KQgK;\IuP`c@_Nf+l;i:#Zb.s]I=-oP<p/Dh$_t:&`1;F$i8WahILg6l<akS'U6L,h?*19PYU9HRtKTm7Ga0EXS?ZG0HjH[h=S<)
%JF<O--DOs\h[0ieYW=!'6IFU;&C6`p);U:m%cU2kVjNY\@)hW3/Du]/aVs!k,NlrNlB,n/%)s$"2sS?u^1(K^8K*;j%D)g%_kq($
%G,()1^jV0pm1D>:3DE5*#q:U0U#!B)A9QH2BK*j&U=?&/EB@PWKSm]1(4o1ec!NcK8^)J=_X*#-b4R0h)Zlja%q[c=aN.7k2su4e
%"Np'X#lrChAiH-dTd^kc)sJ;l*%8._*_@3h1UA#\,7)LoBK'L20GmNXh0;M]EB7%1+g)GL`J+k0,sYP2h+6ISd]oNi,E9]nhlJ/(
%ae2OH2^DX/F/F+*W"p\RPhM*0;8E2\[[X]Y%O>1c]/e*$m]+oW>aU3t.^eKZQ*_l^6i#[rQU:,KG[(DrP9:0\HZ6Sgb(6V1m=kTi
%2p1NBKPQIii,4qW(f)1f[]5a>$LWZ-$L?LTgl5eY6<FrW9p3Gt-inNZ_>o<.h9BC3)%!knNH%9<UUs+5'f]7XDNqUrFG6I$q;<AL
%Da@1L!P0B:DQa"AV!KLB0La@m']"aiNe4\E\f9VkZL37uN<jZu,!t^PK]g3GmY4i6F.(:)Ps]X&gl6Y9oO.rJF3oEpA6L]MP!`*(
%#&sEj7e<h"h9[73j=fS3H>R%I(qH-\,*ER#KfG37K_(28ih2KOInK-@;b7STM35E`'r2F\2]Gq0*8k]OB=brT`_DdiASk2Yh,"m?
%f<,?bg3f%"]-;IJ!J7Y![Jgc/S2_Z-i,7K@]JuAc\/U`F0$YWuDAmJuL`3eXB.]i?K=d7(L<(J@GG??-a#+15)lc-&)Q^a1&49Gs
%E&UEp*oQJ@VhXG(5mt$JS-C3^P:Mg&$^KN7JI=bd7F_U!]*P"bMVJY\7V5Q'D1b4@Q/#(H%_H)1]1H7r!&^,OjeN*7Oh4`tVqXo5
%VOMVZ0dV%-O-GVG!q%D%U*:3T[i6qsUhD3dRii5D7hs-?l_"%4#.g94NpIl(.?UtsJP<l8-#&grbj?aV'?_3c*YL068>t>jNDT=g
%-7ImB0kPXWV+E<j_R`na]2>$21Frt0<'o.rZ*(u&7[;Wt%.IjL.naSUQ+"h\i^W5l_2?f,UdFBbZL]#fS+'OM_D\a3CR4;t]8UIq
%#3sdSY;"cZA4Unr&kT-cDBa(RI'Q4`K30ar:&%N+`/XAa'"UZMKaMHX2uSaWWrhL^er^'/I.$--kcaL2<Qh9hSXV#e>V&e2gr+SK
%+R%&3#)tXJr=8N=#[g(813`E.YFNGa,fI&h/iO*"A1>;k5R(dGG7Q0IFX-Ad5#NTK^h9TBDA")9E5gljU9b]"Rr#1!OXlU,l7AN_
%gk;a2DHqbJ74Tc:O..8oaEUhG\02TG3C3o5G6k<P)##4^ZeC;U?1_YM-uQ?fEof2f@i1,O"l`!b.Z4-1LRXh'C]t@Y2n`K2FBh\Q
%;'N[I!T>Z"$EX_Sl4>_2<X<SbM\]#5E7:l-C7kQE&jW^oq:c5^2#K8;.T7A[mCAbghmOHKb20;d`)=sjXUZlP2PDT\cWS'<<N8J)
%::k5>bS><5'a_F[b;u70%D#9mLq0[NgVA_^!Yj4MUhSgTghn%qZ3"o&AUH"IS'j@U+]R;VEQ,2"XDlqMM8<&'gN;k<4'c7Kp@f;;
%HUn=J9mdq_6]D5W-H;MiB=f[D8ho(B-8h'B;aM&10*MahAt-_d##_3;@YOB+fu==kn_'\Y1PK=ip8+-nP11VqDD(9@fCTt_Qu1Pi
%H1t.ZG#&0W:s([:N%d(hOR;-QJS6dZ2EHSZXH79A&=OfJ8+$d7S9T42CkI;cKNHH!-,%lF?U;-j<KS4EODPC:p^7hB%10@mB?2t\
%L$DU@ELh2>/pYR#mG")Y1Xi?f,\.kV8'o1TODTdcLnToI2G;%NOP2BIEoE&sZ42-t,+B:P9qPSV+cpQ8@:I$R(u+Zm3:g#cgZ*gc
%N,>0O?0Xui.r^TK@Uj4AJg\WO*\FDiY0E`Y[P>c[8Ji*kLi)5)@U3+[[cp@D_G1]t1^k7[V20!:#WX/JL"IICY=2I<Gf@d3&_i9;
%B^?r_M![bbLi$+9L8.NVgE](<gPW3E>R&L99%`jQT*odlfa&9@N+HWjfVT8)JP\tk7X-)S#Rb(14u6hhY6`mIWs<m<,.8q7NA:0j
%O5@F)e!dI7nSq_P!(R5k_1VNlA.Ac,kH*n$YTI:2=1gHX7gRO>]J_$\Q`eT]beHPJ.b[3Y\`1#::G,1#j0dPclF8@7J*.g+)NCrV
%RrZk'^c#a;_,-tUm8j#cD0To.(Bqfl&%XZ!qI*_[Fs77pKss\%g/TmO=(#kX@b"G\G1A-^`G/JF75Ir5N^d7]?Hb!$@Dg7;-=S.,
%fbIDs8s(hQC=fI7j9!gX+<,,^'2P)i!]<OYLRT0T+&:$.o[Sb<`WhEjVG0T<n1'["?(tLU"JuWa)LJIh9"S2"+!G>s3tk)qW/l*j
%d09tIf\-V.5e*O"/<DJVO-(FB,mH`+Jgb#3<.m1*$Xn-SJp,S0]bNdON4I5BM"#O"I0$CSij2SFR&Dl+RmOeJ03IGk'\JK-DhVgO
%%>@ohZRJ!C<#.o8UV*)g'8dlOS^S',S+;c2EZrs!bg7J$B%+!l=gfhi2G#n29G6hDc3gF/KjI\'(8G5K>]uG2';K,OWP:Ro%(OP>
%.bb:_.4H2@%\.nMPYIi)E,r*@g%5h\L.X/Q=\GeG-(>Ok\Cf=?aj*MV:e3L8!IW7um,`@dO1:l$O\InHllo'CcC.,$Z)Lm3nCE,+
%;Ya2+=o$_"4cF@!@oGp!!s3&.@s:)u.3,s4XhQ9#ls:qKG\1GaO>N\V'obpM9GfOLN"'<0<'_JNcQ7'qb/Nf.J1rN4$1rBCM[]n!
%0H,hf<Zd,pYph@9VT0Dc]2btf+].O.S5X!.GI>*088N>:0EJ#;(I1h,)Q/Ri;j8b1",RIAC`\JPp0\P,[%M*$8U)p>-8p]B-je&7
%#(I#N&S5EuX)51P@S\Q_'UpAl`DS+mpQ>NdL116AJo@P`D"tc/J=X3g4:i&Qm6IqM/jeMn-oRU@f^9H3I9Y/?G/O'5`?pkf8R^OC
%`U4b&$=dNYBE/4''o>X'L)3>QLlN[7&H#Q9`$Rd3]HcpMl$)W[X`2o`*>WEBB\6UPf#kL7]4K,H/8P;@,193Y6:,Vmm&W&1ab)P4
%Y]6[6D:#M,UnciLKjhlhWbJnoBFU^dj1tnRNR#L"=P-HqPEaX's,pZQb//mdae;_@>(S$TbV3k/Y]-RMJRRT\.nZ-8%,3$X(cM>U
%3AClYVJ1qY$jOTrr@;lnc4%T;0pd>i(cFr6eEt1^fML6)EBPTKP<oLhV6[<3EP]&J)24&#nDRD!D"J/ETV/O&Q'bD_2UYs:,gRlT
%8<Xb:@)*XOYSmfT)p9C&E)nB'W2%MKk#7*!oQDHfPD#\L<[_dSUJVIn=kFcUJWW<b\JMWG['52"`ka^31/QVF)!8aQ7:ENl)261E
%'K-@Si128')^d-gq]RY0_!$qt\!)rH@Mq-s7UXl!dC%762#b?XM/+UY2I^!#HP75S"B!OtKo=u&-?@E\CiZ/j7h?@m7BCHr/k'3t
%2>km'-u?+>@6RO&2Z0Z?XV.d.ViNVQ>J*6rZAS!0g>9?hMNG(,bfQVn7Dad:Ri0"._Bth<%g%X*-7]5Rf2a;9k!o"t:tUS0j9[7`
%Ce0YE[R+DD4D9]VL!;;+d#O#"f#][n="%n;jHY\\O]pi-Pb]^DS3iY:5,5@8;<d(*@H.Z]?m-q7ZAT#UA4C!k=Dl80CtR(DF+V8`
%"?*+l$Cetm=qhZ/Y2_Gb-u:a.L$1WqfJj^&l:+pO'P5pm-n2f7-<S["-aDU6kn\*>;9Cai:`N^oj07dDaTb)D0^-&@ES-Ic`aKC_
%iimDJjA5oo@I*Dge$-M>9fOtiBE<p&:_5P_Qr3us7!q>T7<RZ[JGbcoAhaN0Y"6hBRlT+@L+cn%fU>t@I*0:F2)m@p5hI&d9ne68
%K[$q<.:'c5#I8\6.2+m1fKcAr\=j(Z%HeCT)%+7#>h!G>\PuF8eO3!],UdWu.L@&[1&spI,]),$!,YOH2C,rQ0a\j$Ne3Wqf_>gC
%UFQZj/pOOC/LYEj-ZEth$AAqB=:uN/-iB'I\4QcB5,ABRZ<a60&UP.t!X=sETSRMt@Di"p)Xo6m2Mo7i2\n:spfP\UL'6J#.i($H
%6j/XXY[N2NQ#pSG_bT7W%LO-nE0-M2@Vhf\==F?+%BfrQ/nPgk&1\),gKuU^TWmtC=tD``C_H?,;\V,]34)=UfXM,/>:UCG`;!l#
%_IgAfo7MaV(e?:&18k'o[aPQ;47[i+GaU9'2EX;l<9jS&L2!0D4G.&e[i+.gb.&dX"(^:H$ld5>5=rIVN$odu"=k,YO:(=^<KEq\
%3<nTI;nrVtDrAmPI'VmB8%`Ja@MiqXgo)?,'^R#4k11+1,%_X$?l-(=)ZmVXk@.0$DIR]EMR=`'&,p_#+h5Br2d#n<T/!\)f[ijg
%C"DWdb*tc:QE[PI??/m72$LM*)SRD&.u;j!f+`=]`D0ji5uN>:ghRNXBiD7fjEYc_5d0.al>_T)*@,"5OOkcA;B2#0+f(oliI0YI
%^_3R:%g0#7a9f/hXcHc6cnk-Z;Dc2U<SXt`W!mkj[6XMEG"i!EA9(Mt2'SV`#uT20nYp[kf.j>W.@BG"'qCP0%F:>U4-47KN3d"f
%(tY#HJ?mnO\;nEg=Wsq>#Z%W:Y+p_$.cHi/@ArA&!aJ\#:CdPG9jS8m(!'4G,TG5d?brjC(S&(BX^O'QEM0FlL8(ilf&SPX'A&\I
%A:W0.X>O",5VH2<lQR\XK3Ham5c@_\2)PfSh[4'lTb^qln4Ym:jL`bDd$b"A0`Y9;CFX@\0s<QP$F@QtWAJD]KgS"/_5qWIF.@kM
%-g41D/*0m^?VlDhKs@LBUBgn*`Z^KlWA:R>B;fmX@T\fpa&5$]7%>M<;$kef*uLf8n,QS>o.i.,psfYEa_\GAq$Z.).)7n(X!M9$
%i7/*D8F0B/mhMN3NNX2_C6BdI;p!Po$;b\a;'t7Z>E.&jOj>(.PE&=STiOZ0's+@a'Q]-`;5)OY:^0-]RFPH%67ZS(Qo/u+&Rol`
%%%%*s8O+Vt26WIEaM:k^21]ROoi#$Oh9?nQ3fMb0(*dBjP=c':XeMiS7c+ALPKO+&535`W-4#f11"B,fK[uCQBZ1no;GEQ-bVU&(
%2:uo),+BJ#7X7m"2$nM3'UKpK&C.R*<(AMHTR^bYqI(sP5.0q6=*SIPWT1oi8OB/pY[K8V3Y\!p.lMOsYX(]VP?U#iAR*Ha0GS`L
%V']P([LD7qP5lm?(eYmV<pGQ7^$#J*+ttEfdd\VWlAYCO(J11&8kqchg,S#A<Zj8ZDg3g74R,VNIP-WX8m4pA+Y>NcZ<"fG^7nJK
%3+MoD_5NRIJN"?ejcnC<'_Sc$p;U_Rp-s;[[1u(]0sbX*Fi,(jUpQt<oO'j;$?ZGsGo&eA9GZ.#:^2'+F.a/EeKVcGT9bir_bX>c
%3$IqYT]pW8qK1\4Oo_2@TLr]i_rYhF4Ujo>k%E-'Q7^:idkj8$V!\][1hFRU7A8@J)Vf@biCSY:O\\=H3ZUZ";W`'t/O>NJaQ+/g
%[LoDdj0*Fi.J,&M%qV^j0/ItN?;fd/`_B+9]$dH3C^kj/VB,44;V6Op_e+Zr"U^_Go.7r3.Vp"(WD4`TT7qes]b$SE,iPb[8t3Ps
%YeU3*!A2R?;k7UN8UPjhRoVG;Z)2RR>l"db:%ek4E=-EK?m/cd>!UP>o3bXiBgRP>O&=+XYs?t;.[4W[<4QHXO)bdV\1jf%nV`2U
%78/oW<!sD"d%.8K`aYjDcr[<I!fj.0e`pHt]QEas1(k`9^,ZV3FSBU5=L4hqMEDJ^96Vu4U1e8XllpXc7@*@J.SD6nRaTU92COp>
%5JSYV_Fh9aKsVRFh'>q;B[MM,!*`k8Q*,_Q0PQ[I;e&Fh@"jhGW=buKH&l.'b)*"2A=TGs4D>-NAda_lRhofje"k#kB:-%uN?o#J
%G&II/?'W^@,"Y^dF],q1D,`Ac7%84m8Y?e8-V[XB`@FBgC(QXSUMCWhlA?`ZKJ+spbR!I1<?.5G:%QF+ai9E[=jiHI+Up^gK-1V5
%\^*>;l)(sAiC>gU$E*f8e=SC>#9QZ69Qlj44dn]1iU[b.1rYR9?*;i-`[=],2!C9F`sFc;$*AL_Ni$VE/i$W_OcW5l.Q3_rRipki
%6&gUU_uYk;mohDW1r6\QB3QOSqcke<<]KTZ!C[c31_L?ehVgm:&IgWT`C3^A!@OfO/K/QZ`uS9('BH9iU<+b-8]jAWV@M]#f:ZeG
%KGu;-3ec'i`C0IA6-*h81sJ<3%k8m:CFYE4U?@78,J'k(=:rr?h.)1lf%"3RLSj!87SjI7RV6R116)-8PJA,=FD-P,!#nn6jA#(V
%)B*&W[I93Nab9ngX+6o.mso*Z(V2Z0-9,M/aYVKnQ(GgV:&nZ/KdJ/dpmEWZFNL'%B1uu"B7i:G:hUNDW6dm]=Qgsq-t<n=n^q(:
%PX;(C^&]$GQ=C@MFqsHN'fpII@pMHqM9hIKA\oNZkGD&[&Xj2/6-QLL(JL_^;WA/k9o$2/KaKR'8-"?`KnC^#/g.JmK-lHhQO49@
%FB($j"G8<>iajZSSFW[%/8/F&A)'@96]L\dOJ)8WCa<\aSP.c>6.7h5\/KeY8Q*J8"&/iYg/eu%icLleX&>UAAEe)!TQ`8gBCB.#
%HFOOM]@bD%qnHD8pXA$<YC:ci;HeYpPMiJpY-3;`FS+,3f-a?^rn5t3QFfijo'o4WI#!2er,84`]`.n7C[7mJ]"0r94F;?OIeL$.
%q=N^.grYmII/MB-r;UOXZoe)mj\PoeaF6*?-_I%/a8^900:*c/q>64;HBK89OABPf?N+S7BqHrg@HFRp&O,(aK%d^#j3Qn\h^R'I
%?V.GM]DNakZ$!jBQ9QpY,lM0)ePcXKBA";V1Q%)S6N?,5R9r#S5aE^RG3?RNL5+&gbHa>n9hHLcabe,+S3@`4H)m:$XIfX;%T%:N
%^8M`O/l'T+QPQO3BJqK\m,ZarQX>6[%?PK8J=J/qJP22jE=fnK</?<:.<u#/QJm/R9$cs?kIKH$+>L8Mr?mrm(?ELbcEeKV:Flp]
%I6r_q(;=LX'd(<>R!HL<>(F8]cK%DC[nc(^2r+4?kmJu=Za@l%BmRf<MDQAgqms,[p;Z<tlFMA#6KYaMPm:4Lpes"p*(hX*p3d3Z
%"X+,dU'95(7@s<0$X<C+fMji<5UdF!$un,^6df`drE-4.oZODSU;EIVR%J<Qp8*5W7V\(`6D&-XEhm:FNI>#ha7r2)^d.l&.]9sV
%HooC]1%nl64m<*+<UNJ)f3L#+oODSp7-X9JcR%u$U/,Em1s"Nd@;Pf.@%Fg6CX8kaB/3'K,]i[JaKM"#N#8qb-8.r&TFY<i%98aK
%/t^qLmegKS/Q_.0VpL++h@aluQ2uC[b;i+*5YfFmZ::8JhRD`4/]T_OSmnqujG<mh%q<FjVe^@WX520#jIgqWi_n.2ce5OuZS(-T
%q&U`u,iLpc$Y)R^-Tt&.7*0*iNXb`Yj`5BS+.c2b'>s%=#gr1`(8joB`?M5To9RB/;H)'1o.4f?aC<`$FG:Jtrg"#g]K:$kqGO2Y
%RRm1b<-ds_?PHcEBSE(3<u+Du'4LDdb%ML2S'&C+n?q>jH`hD-QLaMlj\^=i?]ZWb7C:k'[COoTHWm<`%7dlI$5\&,QhTpgp_I#\
%-9Sj(mWk*Qos0#K7k#cCUq632E[%teKMn?njt7/6:,?BOWZ5q'$X9tk6-&dH0AY$\n[ZfCoC@KSNHrThg)7@"2b/=K<1cgKLTXRt
%Qe5&8=;&ABM?+5ZKRhke7HU#H:dl`sXkOs7pXl;i(cWd/G(D97hSmmZnt5W,Qke&N04%`/U;EJ!(gj7<s+GB6WU`T;MN$]OV'g4;
%EB?b#^AGJHn;G$2>4l#0:r4fGb("%GSkYi%;>G=Xp!Gop$-h#OA01`8f)VC-`Is&?iRoIBG*`#1[08V)fO+^&?f\J*bGBM"Aq+i6
%hr\f0D)Bf(dPN`J]4lAu$$c$WY]-"J]&6N*M[5["<J50)eSBN`CL*3@,G".seY'&4FDY>/FFU5/`G(55d[8)+,u<u/ou,>:pIb);
%e9)]jYsu,CfiGMO*fSBU2Qu)3ki@#g@`1L8Z7'deE&nIZU5ft3ElL1H8!*:VX)?3g[Y.J`?//FUG'*7[4a8]p\E9@]$a%ccFcG*8
%S?-RMeH&H[>"t@8]W?%W/lL&l>j7+O;rj?nk8g2@?a2!+#MS`h7V?W=7'9<k3`G734hmncGu^rZb-uS*gpC(dM_p*c9*R_`=D0I'
%%4j#X//YAm,&1'n7-A+=`85X%>Y]NiEp@dN;G5S4YT+GNibVP;;<V#io)SC3mG3LNfa@-"S:)Hnkl&qi$ZUCE_60&Fg@70uj?BLp
%j`QH@QQ1U9KNh`dhLTodqA<d1?CK[6`!MEg5k57W-d3`M6(T;JeKQ0NI:^rHK[-&!K\<EC0Rg^aXa."4XK,GIQ-8#sl<\U<E_itp
%G#_&:;2NYkNDO*X3`ASLU6K+o46ntg4iOmh(R-Y:]/@:3g:ET]$$RG"hE\^;>gV2@"7<85VUgB:J'I;S3#>Rs7<,CKfP:!Y"hM3t
%=QS7CU299X&Du/pB@GUjB8G<6cA?Ddb$C<5&%S;f1gI%-/?,XgemH(nqL$t\*Uc_+n"lQ0fnV08o6/!d@9I]T=L6;<T&2XiQG$":
%(RYftSN`YaEo&WWZcTOHp4e__!^h.Wj+6f[Bgmt+gTr<L;%Bkl5`.>#;Wa0_k6*sa\fUL\l?/r!XRt`<@aY.rF'kqb=Z+.,9QjVW
%5\]$hQ<LYHj[>p!X*7JM=\c<JcBjbZT6O10nL//R&0V<p:",7+G?Ek"=OW1j&.;p'8VL/$31BD`l9^QcJ7l!;!n0K#"/-M?'d5bW
%hP%Tq2K`I,*M/afW50&2*2>d07@@U.#UFVBhsoe/k1:DF2n;n5$=4J\fE7`"of_'\<Kb!j<)A\(`q,>,ZWJF[Ddqarb(uspkHfWd
%XS\NKm7g55`QHrX)-/n)5KWM2l)QP.*?\*i#P]]LdjRd0-3VkE<)MtY"4D]ke&n"U':g\SOcJF7K:EGm72iBA^Cqp4Q?Gl'0bpIE
%F%1,K^m2/M,</_q0D_XYXdXr6<fh4*Pa7T7#G?Fn)'o$Z[X6/UZh5Pi<JU!Js/io9"apc)L95:PPulH%b!'oOP$?+nH"<3c>#0iq
%g`QU=D./kO0#8=DVJibN>I<X6UL1.'/lPe&fUhHKkX%4tcSkX4G,Nd+r,T/M;k3\@@05h7[n!Ei54G:ll1[cc7RLlN2o=<q+MqYV
%Bq.V>R"T[u_/ZT`O'><V=acVu540AUP$j=^]5A+]lLKNmIcp?/=c5]@kT#apB*d>c4)co(.k4J_Up,]=G:7Nc+T*t;MOVV"Xm)">
%RdA2+3\^:[apTL'_q_^L]+:Uep%Y><s$$',3ZdE764&WrK(GNOVPo(9+@.r=l'QeCdlF&^8Sn05cA^qu[:31CVE6(^S+1s%fdH%;
%`dq!/?&JB<Ff.oge<%7*nZ[E;m\Z;..#sN7h=N^Jdt;\i-2#jd?)qbPlU/9BFcBXDZ>I3i7n?gsI@9g(+n&F6YG>`t*%3o:O8-i(
%JcPPX'K]g,Ha5[V2*FDiZXciZUr#<3g[3%]A\P-JNS(+`.Mfo@:oo)0EL$6u2q&6c+0!>1h<?FQ^S`*a"[R;=ep'LfP'V;No"qj9
%GbjRK&>^aeOh8o2ObE(p?li`;\[,joD,_pD7mHrNZH\p#Ct,8*q.+gX`G2ZlJ\_,@_-XJEGGl*.C>Nj]DG"WSac&bY&\(ec2=G9s
%XN[?3X<)G7j!C=N`GC=_]QBQ`]3q,+3>^)Km@UOS)nFV#N:`r.]4S`/'Zj?d<N3oZ]/7&80KP\L=dZfRR4YWlM1ekDqk\B!.ODVB
%)*6s#ZS76U-TVPA@im4@Mkbu*KCgb=3MHp$\j-tuI#@_#`KL[_Vcamn+j"Vk6Af>'nkok7C.#++jAFJ?ik78&r!3eTC]3XTm@H_V
%XZCRPn=*;=,[9(1"m=-Ketc-IaEb12;S3=Q,0&Bl/_`u51,r9l)!7'9<1Kb20!@:RTQ4dBFWi+E_Pf$Gac9Ip692Sfff/,<Al2D/
%oQD>=3N;GK3kLgdEF<GM,aoKn`*P(APr1pZ\$XI@e31.(c(nQ3r?,NJ[8<+:gKbXLcVK!e0SM/[*fD%p`Gs'I0m#VMYbX+JmS)H9
%W]="KNM*;\Xs0*!A!RYldr0^4?1_(VqIpbYW19(`QrLTe&Ft4j\]2u*?>dH0&?m/=BY<-K<m!`9I:Zh+6<8P,=MuT0EaHklOOO#[
%KgdY,mI@>C=SIX<P18V@Ag^,:<QB3XHj^^9gZ*h`B;)*!>o#I=)D&?R$JPTk"g`Unq#51*_!L$Ef,ebSoBNHSl;q-%>B$Ub[3@'d
%Dnku2B6Q9q[Ud6,kV9B]W#?i$`>D,Q$@>cD=Ol88`<[/DE):cIY`fVp?,L?UrEQdPWk?.ubj>nmX.X!g;Io=;>J;q>ol6.q:pjUK
%Tu2F6_IqFdZkh^J#[u>C.rR__qs\Fu;WD/8r3,XilqC&LTI^K-(.GVLAIDiV:VM7Z@-08cCC)k5B>2dW:']pqH&I,;ZBt7/a_-m=
%CEdk#QNo\I;!bQh&^+o/`cpfAf9.JPCg='17#UD]\_W%OHeC`7Q5+$Nj_68F1$WP3<T@,+Nr:Qu/lI)->g03JbSEE0c.X,MDlQdK
%2HUcY"lpe6pWePuOc.XOd#+c4)"lldjcMns8=nK'91"\l((')r8Jmm']cNAfO=?na3q4_^O:?C;LrXg^B,?<bQl2'HlcX7r5jkr#
%q)+l@04#=-iG>tL@IDjd:`S`Rl;d2a?HXL+TO2>sEOZ@taSG]!St=V%"\1N^PGC!9h(Zs!cR4"dPTgXYCo:-.PoPS#]]#HqZ!L4/
%b[$M+>;tWG&/^f.G(TQIh/Pt;]MuE]D[YY>WQ%C&'S2;_O[G75f\)6OC7)L3W*r_%&Z>HkT"C*r1"d0N)Tr[9@2@Up1RENd<)4n?
%Jl2QYb,`uc1=W%Xe.C^#QrO@-"O#$E=@qrgZ?Q&g\lqNk*dQ;eZ_CKuJj^hh:iNS[7DF+HKhRF9FE6ASKKB]PU1W*J7p04]AW;g&
%rl(<dI=OP^fXRo3i`'SA!M-pbaLLkn1>o7iqbD8d1`QDkcq37VktO,t8Q%0DOPpLiW8')+V.+mj7&$[7K'.(s:,A(aP:;"363N2l
%><Q%J!(&F_G\=qMoHUc.lt0DSXZbgoE+Ju-%H#\.ilD-<e-R/0`%Z9gVF*+]J/IlX`uk3ucW)Th#\pp??=&bkXlgA<\is2FQ\c<D
%`CCJ3PmoIt6KHZ-[3bH!j""?@d&bh0)S7)>o0.C>'WgU#g"LOEF:jAk(<Q6GN?3oES=WldN*Ra.!m3iLJAJ5sV[(!lBcOeHebJAH
%^_7<R]S4/058NCEV6A-[C=R+L,KpRDkca+b"2[ukWTV$k5b@o+BqSpt_J];3`8Rrm#Z]`hPCs1IAloFMV4lN#GQLco($B-fG?M+B
%2_,+b%7LL2EA5(mR8tgW(CL!5CpqL>\>uVqDe7S#5n:?2,rdu.2g#X=Wq'@F(0*hJ';^eD8Pe?0s/Q]%>V@_8]$SD^#7)VdZ:t"$
%ce`,H!996OS]jHs<!HCF\Dchg'IMs`X"E)\Tb=C]qtNgKU2e*7'T[PQ3YcgZ!>7$!l7.P)b/-tt?dFT%\3c!9-`T_4$23_&(6-Q.
%AQ0dU[M1K<Lhbkl!-P1WL#pk7p<87<14OCg39j+.FqWA.aPQ4Ye3N(lL;<\\gMihidYX*n=0KUZ<-D^)Fn]g\&Oe\i'(C^$-JYaq
%IjOrG>-2Pd7R7r.^dWCE&j_jqHFW;-.@*I!N'_HaR'X'uC*ns>57CGH*RO;Q%b&rkQ878oW+DUgr<E'_V0dRR[_tP>Zkf)h4gstA
%:o'N_$U`P?=SORLKJI9o'Zjs,:Nc;,d^<t"Y".lGfZ17pET%guQ]cKoRCOuo;MsJaqJ*s15aldje!K,_JZ]#`N-*T9OY%aI3,.&:
%*tror(H^GO]E>P#nN!WMA."aV>n%!1o:98b:,9Rd5K6a-h`f6_6,K;+$eEesHhMs<`=h^deneV5f_nP!Ml`(l)$PGR6+oK27?ln;
%h8)4CjB7k-^7+3Ee:FF_,&[+bafASrWs#Z3PuB`0`B6\`euQ$cYlT)%0>XF(aeP!iY021]\qN+M>\0$Q7ki%Fp&M[)PA>RP]#o<s
%IHGVgS0Q80=Ibfp\Af+!TNTFb_t[]B44/Ai!K.fZ\eJS=lY>&mD`)&tFt.=H?km+ukAnD5KsDsWo6Mmi&^DJhnB6.c,"-%;XN6\;
%6JaMjFC-L5+3m`QWc6*`?:0/&@^5,5%H9_&W"(s9lkF^W3S:_slS10:+Vt.q2VU^2!\l!:;3Ond+F7M;=SPW(IfLWAP9.h4#]D_]
%MHPf@T3`C.ekmdj2.9b%^74,ZIZ4pg.8r6BPRf*Ee`3bBqK7rRZ%2'(WeLDDKl%h%`A*Rd:mTnn1/i^cofL;R?(C8[.XN:Q@d3_I
%%VA\ddHS'l-bD::7[Rr?<Y<>#1X`^g*'#="T<+Cb16\K+a:2/BTo4i2+i3L3,e\rIJ[HHLCk_,oYEj3=D5ep-+u?42R:Maf%dJbB
%6/*sQQFpAGAp(9AT'BXkl_\SoC/M=!7YLTN!rJX)f(Z0\0.10)P,sgX18tELcU9k2AZ$[_1p78l+],`!Qp_f@')e84[0R[`*A!G2
%Ehp=$>$GA9!Na5*$;L?,?9C@K:=Q]<<5CgAWciV<dCIt#:/t;2Xs3e+KrM"o$kn7MlZMU`,FY&NDK(U\%XbQC\]H=_FO>0rD.Xq#
%&Skfh:?7V%:@_`CMEZU)AD-REfcrgD6dgdpLk*u4mh+8q*:5@KW1_lc%mX]OYu\i4F$cF1e\JaJa9eqnh4<47Mo%e=,.`Z;C?X1Y
%#>=*p4^T[3>=(n6<Mlh>8o*D:.&/gJ2?P:#"K3fJc^WQm8nm8D2Pg:A?=Vs"bbF:TIS3eBU5+?%G4D;];B4NSI169Qi6B5EaApi;
%NQ"QkLWT=.Q"/7@G"^8n%+LBD(,Sa*A?2SD;/J^/o-0)q?,gT3#6C9qT?ZoOR)lM1;d52$e>Bp4=Bl`YcTr)$?G0p<'/B;?AuDcN
%Z&MhCTHif(:u)hU#&QX`Wh`"KFs!9)dha@h<>JTG8G3?E*BD%G9.[9Y.Ij^`b!@h[P038r$eS$>kY14N9g'IZ&&#sK.Ogcg_J-Xq
%'iN6oaf-]mBd=sI:)Pc6Mmm(29k#<?dj(J1g"tt'+ZW[TZSYKI'-T9%kl%<GnVTd'8NUKC400l6N$iT(o)SSL7:QqU3gIi;VI5Bn
%-p4<*Qt'Q6@4=qFi7?F=/Rt3%23%kdn"D^6C*Wa.a3J*t:"H>r,n*6^CE[c#%aNL&034Xp=h\sa84[j=6LA5`)[a>JYPmS\i9:A8
%O'D;$!diC@%5l9uQQ/eA]R*T3,fh6Sc9'sPgW^'me]tHI[qg^6d07."J3?M$E+^F10,39O.DhlO5',cDO5);5H&2X1\UeLpSWuq7
%dK&6d/W[W&MlTUnDE4N3C'jO'Ws`#?e=?o?>EatLe.p%rU0e&@9fM1bb@mSQ^2:6e/UB6;cI5?.n8:L)4%XJXAeQPj/K8M7's[.^
%DWp_IRLgGN_B^^D9gHh_KqNa+p3k$JVNE[7(R'Kr3UMF"g$kEom%(4%e?Dk?"?<CD.TZTOW@D0oDpB?BPESek]c%.>>K`$o<=lqu
%_^&Bj.)ePTObk:g_0]V]6fT`:6crten&]Sdg6b9":C)'OjKrK/bKH/NO3L)`le4[99+XBmfpsmM4Gh]@7]OI.&#<i+?rsH?3>p.C
%Sr+lXFA\kZC7K%3FEJL(05_p?0H'\S<%0GBEIoBgRt]n!i>]&+Mj6n2*7f^2-!#)ldjqlJOP4q6_@p]/:`TfCHG<#lYs>tF.iSfl
%P%>PqARlq1ZAfX"=#<2np4Yt,^#LB92n>rX`N+j]KEbD[J@/u&_^/$l"1qqZI9r\KK1uDK/:U^/Kfa_QHEfpR_s4HIe<S;/+rj01
%P]&6ZW0TJNL<I:LUS)4GLnY?S1;=#d^^B)HM^ZcLjF_!8V^7=I8pQAn4Ct^#]#ZYiMl%:CC8ZC3gIO_.j#%M\MhbQdUJMmtZY$d-
%[s[M1Lksu+CI&O5ND2R^9qF2#WJIa6QM[>3Mjf/]='@qO)bMc6@mPlA.+??*MXj#oID`oY?mX?H*M!9h;WG-"71EM#R[DM_q*Cm.
%N#mZ5>%FIH^">>f["lJr+aMK1F`0e..)d-:&2r!3Jkj\\7;'4sHn8K>GR.V/DGFh7bbC45LsU1(j#Fi+Y,Ca*[^d*re6h-.B>#rZ
%Kf3Va,/K?eG*LR\5&$3!Z(9SCr.J'u98P<a7krNpO]8a*MRI6\-0>e0@cttP9P9Zt!B(ZMZ6S/E%RSu_r>Kf@1'PO.g,kHGlo_.*
%APKm-[6ufkOaB5=8n]sdc%IoK[C@0f;<U\f+#=*aH:FgmHK9;_>g6t*bB1tYfL8\:]UnkuAV6j69PA<i?4ELNhHi3Z,@1g/[UUV%
%8e]=1"sYHtVFVO]TFMmkPEe_::0@V-<\pB`^Os/_7M[9aNeE]J!k!F.FR$s-%3#!m2B@bITInq/>*b))V.OLjZ_g2k_s<C<=q?A]
%9>@s[;",Z3Qu0\f#uf"9\SGs=8@*e54Eg$OE7A6X/[#XNHf/cr\O_`8>FM"X$3sG4E!.mbM7TQ"R_G?@D3)ZTQ5O&kpESNl;%ed@
%'MU5aG3.u_.;4mYncfAtlSMEL[B?.;CoCKiF\[0+=F8T>gEqh"fedPm;b@$u$8'd0g:WhG#I$[=RE=#pl'+aZI<;=L:isRZ4ZXrS
%i3M.+Bt(Ta.#"JZB!DA(_b<uN]"qq8^G%`o1:=PmFpM0$PoHIe$k&CtUh$`n<LC,\h76bB%HRVH.b6.fSYE*BB4/0cU&eNkg'4)R
%S@2nI3n%H@^oP1bcWrE"%JkKRTk_12Nm7'0JP@uPjNUWC=YBQ*fu`B9Ooe&LE7lWFUWJUNERRH?Oq(UVBf1SU,)SZ&l0=hN^(=Mc
%Y>N40]hr<jU!kqfnJY+\KWK(h?sgFJZ02LaMBgss]>-4D2PuV00--(CXg_3h8D*TADE&Af2fAO+;)'Mobc.a%af=U"P>a0hY!`;V
%6+a2SR\Cj^15Jujiu*mFUe*pjpo-cVI2TbB4bjF7a'+R%K\nm(Vf/cMI76khckf?Kb#<P:Mjb3R-V#AN7cdWqM1-?!CoEZ59e@W]
%,,e!,KL7#JNfGR.66jNb1(?H.U:dnKRC,I5dFsSK;Ddl0Q0C1eE=/PmCLVThs(Aa!VO<8U[2jA;`M(Wn;2Y0$O;@=jjhiXFEC@a^
%Nanq6Oeo.'/(K6Cb2=J+U1-u=V,-o$:;+c4,*umQ,1XB7h"2/Za/G0%J`EnoFqIiH3*(]F-&B+#$`HXhePAbTRfCGFlR#0Z'Q(@+
%j6CbKTi%2B/O9`bW*qa^KkPP09$EDk+UM6AQ:<SekNY(GMM8lU3Y4SX<"kQ"(:@NhRk01L=NkdH5cW3sd60FFV3.dBHCMe2.&V#E
%Dprb!+<$uNN22b!-*V(>8@;8-XQ_Xo.3,RP7?:IHR\h?V`(I<h9A2?7OYjJma+bcUpJfj0>7.RDokKn:J_%Is7@DFubtWIG.]bBL
%mnN4!P<P^d()=W%e`DXibJIp0#Ll_>(90AVO?^W!pBdT+`*Q&&,?NFSXs^Th=\7>g:+!O5g;1I=o%$c-ebiC@qV+Ws'CWf_CJ5>k
%.363'8Ca7"i`MjHm3F?F;j(]:"#Nq_>*tOj`EtH$'\[j"`0%MSh8tE)UiI"'c.PCLo$=sd%I/?F^HA"^cGj+Nk"Q:)$R!RYE)ZRk
%8MWB[aNSCt)a*TBo)"QJdkn>DTob;YTch0+X_C`@4bC..5GH>jU6UV,%N?;[']Mu#m:rSSDC?0A<"X@]+L%E3nuUq*7MRNiK8VgH
%_4t/<\@-97f#@]Md6Q:M"j!+p.W93@LeP=PC;E3.6eSReFLkS,&B-5"f`5[##rt3`#iCYJ=c>U/R:97.i2a5H-Lr_l]l;RmZ38Ca
%B):_ZQTaS(eKg#ge0mmOkh/l%q:e-?G(YfUKln"g?akNARO1n`)2&+!r4ZhMmW@Zd:(;9BCYC56nIcb_Ns8S:TJL/N*irF9,)hg,
%h9/4YWL.ZN.N7.,6o!oD^!sU[]H+Y`WdpZ#F\AUs_-PBD$C9sdP%%ji)fTQFe;m1U23WkcLWU?j7L/"Y@t@WqA(%"S.T,HA%4O*c
%GHkJrg;VXuhDjnd=/9^mm,hHj]O7"j$K-4f7rTs$EZV^2Lb+iP(:N:?itLnT+s5Bh`dA'51b6.W4:2D:3i;4Ge<jC[]i-+3qu`%k
%TL9u7Za2@9VP")%(5,p:"6g[A2\9hIBl([p+j.LfgXQBb?^q@LaRR5`52A_(;08bqTqNlKFFgO3HB_(TVYT6>CerAKKXKJ=Q!\/5
%C4Q#8F@mp;l9+cei'(/#>D>"'(3Gi]];&hlKWpn?N#EaXAQ8t0:j`lg6O20pb./8HC9nXn9SB:r,KPCg_RSO7UTO73KS=@[aMo*N
%)0^J%_0Eil[,)blTaLI<&OtVRH&3#o4IR^kDSYM<Kl"mq'nVSa.-3l>Mt=O;OMI;4<J"L=Hu[R:[?l/+6>odgrQUGue;V^%YtBqe
%g?YHu3Q]lSp=JfQn3[:V5E9$lVr3JK<^0inG,\,GSg\u#0^iY@M+U)@'V#4Fd,X7?GQ;/.P0'ar)16JBgPIe&/<-)I+V.nslH&VA
%1;OPF&>j.D,Jtm/(T%BfVZA/A(-8YtAI]C(6!'fo_P*I,5inq$E[MQL3HX32!'HdV=XXY:"o//,N5;FN"(WoR@15aG4W5U;>idtL
%OCsYPjenm[=;>@K-]@$NIVRO>%6*2JP=6=Q@n@JL)/>`p@M19IdV(qP7B+UaDb!eg/=6N*mjo0n#U7u+SE=Y>%dPWgFoXsY=BAr'
%)C,W)K!c.@]:oLd?fd^5/\$UQ>IMU0YOPHr?8DkF-0h_4M1tMBJbMH7]u42KII=Dp2`:OWn2of['B"$3b9BHPT.[VLk(1mDA[P^u
%U%`E2+PFgiJT\(KiMpd,75IK>iX<7(@;4Tl(44*LL9XBdXXk*Dq-8+qblVj3mU]fG0rN"TDVCLnL5F9t^+%5<_W\tQ$MfK!jp2+r
%7tbYZSKOliLT^8Xg<p.AMo\'WG[;Pm1_YI!+=Ap4chjD7aC^#A-L:d?H'Lm0'S5kE[8(^+;,4g+XYa;sTVt%UH!q_FXtNd3)_j0H
%oMHEeD]6kaXgb)D<=L3b*!2r>/GIT^.iR>n@1;uQ&E>)E?FLp:@#6bSWK2<-:Nfq)2'K78WY?n&;+$hR*)(^OZM68aY;c,iTj&;N
%er^_YTi+1A7U6HCF.T0<ZI#_*4fJrt6`$Ls!'>QK4NbY)gl#?O&3<s,2*#HZBbo0=(KM$T:tV:4H?.NrQ0DgGZ'q,Ld$]SXV[[DU
%"l<AFD'7D;VnAVSiPI7ll,f`IPuS+jlWJ4&=HSSmeVaL"Y`"n/PSu1Natss%c<O(NY.Rq1/[CbU@bs7/qIPYc/-7&ho9j/.+A)1H
%4j!%AG8C#?-*3#nFW-t*`#1q_8W/uWThdXZlGfm_!dXtW7RpGf3M/ab'0nDVlTtsts/]<hHAHHsO9A#$Boq@XkXmnG^DIJi8P<Me
%kf=@EY\Fbak,.=Y2"h>emt=3Kihu&;Uq+MaqbC/A/-j%H@oU0$1'#NgKUQ`">![JjF-YpiRp2#NQl`Zb%u#!>[PmheRoPg^O]5!!
%l-^,sJDPpTeaNX^(P]*Y1SQ1lJ\[[Cr/mgr#8J+5>*_W0Fo5!fWLA%);b!^/+X]_loq9)3/6Ti!+RL?j$,GnLh'f;EL@oShf^=h&
%-=b*oi5jt"CPu-G&r4RfD.1e1,]TTk.2s-bVUg@!I:4Z0Nf(ql/s?k8]$jR_QAdNj_-:#^V2A&X"%#^N%Ib,e>3kd3>^:@uY%V3K
%*hI'Ra\l>H0UHD;)K12F%Ke=[4(5f!6)ubk1rA(^R`%mTPrSHf[($\<X5.=Jnlb.BVQu?WblY'p18.\U[M<ZTR9JmMl+e4Jh14nO
%B+Ut^"-$7B<\j\qX6QFSc:Y)iQ!93)/.1+,n36@k/3p2b8N6*0aB[70a^FWb,SXO2Q$n_aZ;JYgNV^01L2RbnFe`L-Cr/#s5nu9i
%./6)H-P97,7lYo(mu90_CoB8_OdSfu@RR3@CXQVd.c['P*dK1IE^ZeWD"DL!*_QeMIQnI7hhhWp@E,NM^Q$4d:Td"s2pG$93lEFi
%<S%IeCJqp!/ogLO`G'j@C#oA!f$KIlI^a<u$Z%)"Tr')ijV(ha*Ygl(=W8sO^6rVVaq?'pH-pcc_I#iK7tBfu)W@GSRG'^D!^DJI
%c,,P\0aVqr%73Ku<q_<?5nY:ZSL2%a"j7K'7tb_'aM0U9Keb1\D8K0(.#(.;b_bJl]Y,^D2D(KmfN[3J6_qG*8gITG3B#^_n1Tut
%`ETd!&4\t[/%V1cHHSY28d"9Mip,cmH#*hj;-dY1`d[,$g]=oI"&6e-r'K4XinD4PfbG?'$$BZD3sr)BEYrhc;m(q$iAH1bS+hL/
%)E-oE1VQ<sTH?Uth!2a4@i@fG&ApfNBMsNkd&*n6Y[eWtq'7h3B",Kg`uJ!8;Wr-p6N3oQ,d_#."O1SneHP7Z_YD[1Kj`6M+]g1"
%Pkn6UbWgA+,mq4YnS9jSnXCsG;E/C95`BI>$hioZrOH]=^24jc=@NC!Rb2(I1rBtnF_sRpX@S^13,Y[d,k(#Y;t^elZN_utPH9=I
%;'r6"@h#f<nf58J>g;N6TZ(-]YTCM,;68)!$I$kbW+Z2)jN+-C`D-NePVA-XO+%sh(#Nbnmn8@)p%;5TL<FbGDe0JK`J-TgU-Y`'
%OIunBGpDE9iZAOB35)g`isqjc:K[AMg!&S8+:aeJ08EZ=Ima[%0IpI`mGMndfM,#gLk00s3@*[(Ij`)(Y'q7&M\=RQShnNV:Pj6T
%<R5fpOK_sGUQ"1kA_&0N]Tfu2e3[)$WHtadpL-a>3]^s!__N\n/b5#-J5c_GVl7l<nY.4k0N=#8f)18FaO<\aTh=*DV5m0J`YbU_
%@BtRCmb6m4;q!/jC2%.<U'=r!:J/]c*06CD;ejbg&^b;"A/R658KQAC%.h^l5*2e,8gJ>j)'$.jK'2O8bqD.\d8QPRlt)*k)F6DY
%hk+9\aC-oG<,,;)fG'<4Ef2D@;XT3kk$?4U)53]b5EAtL7oL:f,\,5-5-&Yc&]W9'Mq`1:nM))mj@R1!+#JI:6fZp'YCiZH!=0B/
%pJSB."XR_Hq9W^g/U4<,cR)7nZcM*e#:!*e&%!9H,U*Q,VBo3h'1g2&HDKImLdZfiA?"67$bVaFa?_U[<qi4VKeda3:Dk)d4tE?K
%!B`7D#>.1@U4Tl/Gs9,'D$kqW@7`<p890/2RnJYhFO!o&Tsqs>8Y-'<<2\-6-!%.'8sV^a2!<1\WB519T$8P2\RFgnZ8sM0-n-l.
%=PA4[9p;WpW4nEb&kTBDM;9BLWR[fnf]rTYqoQj8BiPAA(>@s"ciBO/7a+BFS3!HSL44SI46(C)-2pI:JP-a$H'CLN[iiM#<b.FC
%3+5[l,[a8Ill:r'_L]q)gN>(VO>Q3WC5HU^-<r0IF_n^UAd:_,.5+]hN>JCE)G/$#---Fp)-b?6#B&]!`FaW.aiT!\cQ23C-b8S9
%?a:Ibc#fs_)UW;#_<Pa6Z\k@eA]8!+TZ:^S?Q9np2gDI6qXA<!$$t2;i'*9J1Ip=ghM0.,j?h1eKR[J[h/6lp4UFHRP_!L%h$iM0
%Ra+A4b2BA#aaiq8o!"T$hU>9Od9;NW?_TkMWpE]LPMu16PXf"ll<,gPSp158e2L0i!'P6`_mAUlG1sCF9BIN-qJaOj9OkGSc81Sm
%>T6sI--l,U,=2L'k&Bda#n":>$'iT$]i9:O=t?RJ?MmZ_ATFR%DWSFb@$qJ\P^QDV=DW]f!l[Nr5Mr1gb>c$$"S"(THB:+;0P[7B
%$Q`F-bru._)5Ao;8$uB\$PG;#UZAu-c)'-)q59>.W:ndhOt=>J^sqR\pY9Yh;:1h9Urt_0P2$eYTW>K6(5'k&c1^>p1h1`Cc<.-0
%F,hkQY3shr<&']<]n3\,1V'H8-ZXCOZSs`afuB67s)nqJ6S&JOIe(s[SUC8%\,Q;h:Ogj-qW68NcYd'=s6]8M?bJM4\J".>B7DqV
%>0DElVlQlIbHmN_&>(NET7-'$5,E>ZQTolqd;(e5Iek)`eXni!^Ft)4^\upXVuL"45FctBo(gCWr*O[=Er"[\^L*S92KX*[hc20N
%0A@JKe]WoP9'2X4*ko$/o'u&CjP7ZgFbDjNgZAGXT4Ag=;"+db94#_DQR.E]/)@LtS.NOdej+^5oNtDTN;rJ@j,_X1k9!Whr7pIH
%@@auf^JP$8,1oo+r!nk>D[,*Mm*cH3r^@uP<,.8?L!.(R7mZdsd2!pc9sW,GWW5:i>.$$V`ogZa6D:-nOk=`qmLY@"U3C,Op!c'\
%o4])UX+'jRor`sZ/YX<<AKN>q6P%@S?[K8nn'nuB=2TIT&?U;gq[DApQa(q$G";/9NT7JX#If#Tp"sSI0":dt)o,FbD0[51\(WcX
%&k"eA(OUYm^K%H8[p3pXe'<C4WL[rlroi6NY.Ur@_I%T]#lKrV1k0c.ki2NcmLkL$ro93^DF2^FbB6mN6`D8K6JJLjGDO6Ls7&[e
%]'n-1rK>WXmguUJ\,-S,n,C(91RLZ2J%t<j+%)4;\`rQ'W^AE+>hmg-LDd,P55)Rc>O,Okc'o\]GDba0YM+:U6PVQ%A^rjU=]Yl`
%:M.[07AG'J>OQ.%Y3pYIq`/L61m)qBNo'.e_p2),cT99AITYobiPIlCfTUaL8PXQibD28&;>>(Q,kHE&Y$B_l\>T99[-j"PPZs2&
%5':C;kFJ@;)X"Qcb@JIaQ:(#g]-/(u+YQ7oGDjK=RbN-QPA.c"jj*$/PB_K6nqQ#g4MuMNpEptcL?.5N<$r^c*r4=2#8jJshgU5<
%M.WlRU;lLkCUlehrU>7"oi.R)q3>8>U:GK)]\d/J]/rF@L[Rm>Q^c3F]mRq)q7&"[pMT^Crm#XNPOtn/Y-3:uF+3fIr9>q2SqnB`
%_>Gr.J+U^(pc%[:+91h[If6>=Ml!D65Phqhq;bnL^O>qRo.R7RT&J#13.LJ`r;,^Nk/Xt/djHM-rS-GQeaebsQ4DcAJ,T5og%R]m
%q3U3[:N(,GGHZ;^mJ4`ES$OVM&PdfSS#]WN+6ig<qXM0Rr8USdF$KKRaj:!k1j\h]ogO?n]m),1rG_c,e[P9X7b]&g=umeXrQBhB
%QuC<rs75QX%8W`8md"l$4Nu\@4NH>#p*9LFi=UOoh]mOFS$2f2SbmKPn^"J;5KC)-QeY[Am8%p)El4["7JhD>l`^?[m)?$OY$YPL
%>l+6KomNTLHDYVbPl9k3r71N\*c?,n^MJ7]LUKUbH@>DXl\i*M(M@Z948c.g^(tL30+W/IrJ+J;Y?p"nTMLX?4g+\Bq8M$QO1i,N
%D_'+3Qf%dM?_;dsp8a[hs*hY/eh-46cLq'\3#[ZmJ%1uSmpBF<g#2M>I6C>Mqm0P@^ARAV=/UQ(1]Z]s2_I#_Fkja2j)89Mci3^J
%7:YWWRpZ2%^<HE'gHWsUG@rk4YHDe%I$ep<^4t>`Y$^)!3;`Bnl$)$V^Y#c3htR&LSbq]GY6=#ipJ%pcF+h6QQY4p:hd(_]rbC20
%q*;WDZL[]!r;7@Dhjf(74P;m-LH1sm*nDPUkfGFt:NlaX-bF;7:)A'Cif!-omuM+nK/hV&0Y/6bFq<PF[p]_/*pntX]Aq<,mp-6[
%8%X9-UKr$jfkjaQI_TTFSZ^eP3Z^fq?W;#Cb8pUCkN2/@q8Z`CR$W_g?iDddmZ%[Ur347"7h<j/N?3RjG'X&<%3#08X;BVtai47n
%q!#a.Va'&4jjpHiX4*Pt\fb@j2naXWj*XR0'3it/^2@;=o)3bKk>rUWg5FF<(S<@T%8Sf5h:G$i'E:XC-U'3`f:=JmIBrcrq;4u6
%IlM`NZf7$Mef)5@Iu!&9TC2?jMq=<!02Au)/?=^'pA)/@YEuH%B_/`K?dJ7#I:`CIHKQs.q6tjNp%A3._XjgpBA]4dh6.3if(\XY
%:1*s/dq>/Qh:JDR?+;lM&gD>lo&]\Jo6[t4eQ9(MpNhKQ]fNp`Zl2'Bdsg+^#^lH+ZbN*(;L^T-!p@c$Hg(M%ik',)+2O*>l\g+f
%q&p[V[QVpJSA"W1^\IKdlgMSQ5J?p[rhk(pCVZ^Oph_!X%t3$DZf1I\/:MqkU).S0qsE_Heu=.<4ZaWNk!N>V2H[lr.rP,!FOAqR
%#ofJp50q^C):HEOLAS^8l5BL@:RiAq@EW-Q?[H%Y:2eEbI=$85C<P%P:qPc"/]%au95`>Q%r.0\0TZ3I2p"F/7(hQhI@%LRcYr[U
%g!*mLk[j22K?LqfqN-b%jSqprnqIjDUC[1a6b_lO*.>mu+7bt`66>4:%0indnf_L-+YRkTT5<:eNdg#`htVU^a3egQoG\nN`^df6
%d;Ss^9Lo]hEK5M.LL]H/&bCcHrS4\2YHHa6+T(]qio9fi[m/RMV$J^j4F(ppZ,uROqh)RriZ"3Of/MS<S*nkr[_@--lKSRbp&(:t
%?@RIum.tHWX^5jIno"EcJZjJ4I7KIpq1pr*btmuGpSEYR*?6YA7gn"t6M?Hi*hWAlk3VI"P@_9hqd__<TE"$LPJ<\r?_"h+jQ>gj
%-eC;T=8+bdNi'.<@lheo_fW=YaZ\A(NqTfoYNu5$p+tSa3'^7=kPXoD-N'08\Z]FB2E]:<`U^Ktf"gP(4e$/7EK67?o53]qJ,,0H
%_*R+l/BNZ-m'dfR^,p\HCu71dr7cFREj4emIetL>g\<_O"7>J;Qm$AIA:OKuIE1!\?lRiW4qH%#p.3Ct3Y1qQ5P!/:eYD*bBQuNU
%?N-YI+.69an01mMfO'YnQ_WO$BQuNU?B0c,l_EG#T@357^U<P#`;)M4"4A:Pn9!"mUdkZjGc)eRK0Q"n[VX_(@;u!<$c6<S/%0s@
%NkgMW&U4!-JJDD'_\$"Uf0/6c!8P%R$pOUfn`'JsmnV3tojJk"`s97*+#h5qnI,qVF$.m@*q8=%I0"fdqr0]/KF_[54Aq[j(WGVZ
%^?^p>F<ij59a/b%WPIhsLH1_'Y>>'@..On9+V(6fC\Vtp76k46iEntUb@ULiPSb-),d8!XIu+T""WLM24%C;/@#p6I[\7Br!CJL]
%O+H\S]m.^5ZVOTmi3=(;<e6TA2SGH(h"A*<_\VY"jW;s57hX7!rQR:YT=puPE-(_nUZ;8[Q7dWra0U$hp.`m)Ya;J10!;BbE]E<u
%IXQ54ikIZ;@F=alV_?>&rV3SakpHAka)+s4I,2NVh8ZDHK:,4KTBB%JdB@6A*TSbtFQ$k:8(M2*7M!:in>NaIn%V#6H2YXea0i?=
%qRD(YAGZ8omA:;UK2#R!XBE_:Uu)4>]LSdTHeX`*ghmZ^X=VD&WP'ZP^#pk%qc'1/9X`HG_!Sc:NTMp7456Cr+DEo-`Uto"f12Rh
%4c&I6#IgWQQ(in-MN0aFHgf$1KDZm]n;eIJ&(uR7+SO0WZ2:\"F3GbV(eJbg%.[nkh#G6_not4@Nu@$!c1)r.b/_cs@6DFph].[p
%j:?KV4D'ZspVt,,)\:>Jr:e/[DP):Qr35XU8cI)Nb_K=/&*J:ecs@^QM"p,poYml[M_D6Z\"'r&GAeK<f)-[n=<I=0Is(^F=6Hbn
%guiEVjfZsQIltKu"R'2u]s!3<l8JDU^HVVqlrQ,Ys8Df\lG](-_k$,fok],*IIm-tMkpq'k1.;$%W7-5\U&]"gLX+Tl_\)M?bGR(
%jK0Nj@B\aYVb;(M\-<2CLAMW3s6m*TRH3a2HS>UrhIX6Bn=/"4QX>7BL5;^Z51s4HhgGF#\b<7oM8p)$GV!%ULX1e2k8ZO-7`LW$
%C?pM-A3>,GP`-,cA_P>fr:YUh+*O9_s*u7+O"Rm/*>GnO3HktK8OBQ_H71fs4MJem^k2oaDTVB-7!8@^7br]()s52oOA0t5Zfp<^
%lGp7Bd9-;:S$SSkS_re]rpe@Ln>k$A[s["aYYKq:%;'QAnGh0VIU$0lkLJWpYHM:1rZIPia#(l/ee<8ufSA.`O2Gek_ot@E`U'qE
%#)D,m6QCYAhOIo#s36i:$kI=$5<@96];]KT?L*"%*0>e,I.1)%=-Gh:5488.#^Q=>io54"q0U0J0uWY#KNN\r*^$I^8LOu,X-A6.
%;Y>`9_JE$QO4@PX6a`7N)#='g4dW63#5l40CqhP3P629hIIVk.$]d'ipVD<Pa3Hf\3P2s'l\5Rmg#DGKm<<`jMg[3*Fi2dQ]k-68
%Ic-.D2`K?T>J:=pgXhXZ?Mnd=j*duEH5V*QHF%T3j=But8/LGjB;Z\VLG)CU?@748jcD<)\j%4qC;U['qVoK[bL[Q.>:^JhMtcmH
%H,J!U\]$q]=7,<.[cfsIB@=DAJHpGsQWdb2YGXLtH?o5/q:-elm*44-B;_q^Z0B_3fC%tPQ7cF4DFrnKIJNI3ebQo5n`m1.V&L/1
%%q>f(]fNp`Zlj`U6d25OC-=URasOOmTc^m2+IDV;S.%p:l.ZFM9W*FKB%)6pc)3Gu3L7HLZW!`agQ=-;OfN3FJ'!,H+m%^g+$fiB
%'%$>4iSHR/o/Pnsn=86@,'`HqDSmtacFMu*]78,R<2tuA>&im]bh;.8IA"N.U+*P0(#5=n4Fb&`<j!8,9,E&&rW].DTq5.G+=)07
%d2COphgKj"EW)45T!ID!pYJucEa8Du]Ro1dG?js(/)S6Oq0[3IH2@U;iV_f7dSFo>^4uTpL\^X[>M113E*n[t,]%ar/\I*,i]=M2
%`0R'g4U1beI^&#>3H+t0Sb7TYH:+fAZ$A\9Tr,$%KVptRA`8H;3Ws*:[ec#>Q>gj5=n5dI9b3dUoba?#O/2^<i3Y__\UM>UWHIaj
%J)+3Oq>45XDCZjRfBl9]5F1Y"m#p2FP1C.i9rEP_/8)X[EA%:KgY^'OCj6]pZc@]>hXhKmrV5ijI>mOtJ:6]"^UlZo<inOi7K.oI
%nUo^s*b31SA$tS,[fRNWE_ar"/BIY'a3q48kMpVR5OA@0!;=EB7F&A[Ne_ibIMYZG_1[:X.rcX"p\:Dp35u'6f1:Z-)T6Rt6p9$o
%@ma;[0iVZOg?11ij$E,%a&%b*W5]'>i/`#s*qSpg_j%GgS7BB&q_F3iFlIXHHZWo.a-F7K+'7lbcPmqg_$=mpH&.*oh,ml<hD5o=
%B[M('HIdgEeY>QCmq82d7H6\6_X.q;1q#NadA$/=cb,#kkDpC<UIF4:I@6j!j(Qh"'T7]m9GWU^%s'E?NCUdYGVg\'+NR3M:jDt\
%Nl/_2$Ic"iIG^R/US["El<gaOL.Is&UYo3lI4a%FSgmc'lDdtSnWq.gU%i&VFq<,Vn;l)<g8>F/XK1ip&gb!2S-Nus3EB0?T(e9.
%^#OD,Gi&=)5OWI9.Z`c+a)Km^KZ0H'q2'#WE:rb:pCIg^)a;dA^iqp1*=mP<"5iXapPrl3s-O:DNsmuI(a>8)I?K4Bo498ndlEKg
%2^O;eVS=3/ZN!KkH2d&_;"\>#Sc-Hc*_RpT#E$WNW6b%KMf3tk:%TGV+!$]Qj"g</-Heb`]H37KC5Z6Q\9Ru@S1,LF*mA,u14?jp
%fQ0%DHOlsh51B^"i6j-:d#GJJA3KRqrlBM=)q<gKo`]fX7FOJc7=%<X`BW>gI'=^V:c=mIG@uB9_,UC"gXE4(Z\q&<?(AU\G*]f>
%PC3nJhf&!3]_h<VrlMmGDaSQipKL:"mC="`A'c)OX_\N?aStje@<F7cka$uaPhkI<kMLc5EVe\]o'GYlkGR2XjHak4\hpn4eTMKO
%*I"7Xn)W%ArT]G^Ipi1oM[lX$53NmWi0W^<2RUG*j#0$DTr`7[VulALDd"D-pA24o)!`=H^G_(V#=%N5S>Qm1f"^BIMaInKq<$i+
%m!gqG9tr^'\C_S%F0WIj]&A"M]&'.p?175"2Cs@8gg"3(q%gJV?dE_<n\aUPpM".'e`,-Dc,SjsYM>VQ]&@YC55WO#79m"Mf:uT@
%?_*a*5gm>*]m0)CobKmCFQpL\lK\4\_b,+Kil16,f5HKFQlg(WG]0Y:L10gs$_WZdg=KhN:tk'8Uc8;TrI=^">$o%JLV,X"I::%b
%]mP,)lMRiT*mH=nlcJ/YlMP\OV"p>feUp?lA:="cLocX\''7)BMF?.g0Sa,O3(BW),l?r*OnI)aqBM%hH,L].(QU!Z`Gb6S**b&;
%Q7m>.>L,#>jc8eMN(&"WPemNZ7<oSN_kr^diQ%\*GYG@j>9;p'G+2tmaoa`k]HmR>EQ4_hRSaTEWI@OG-sIbT:tE-d/BTQhlp8Ra
%C`6doIb$`\=HkBJF""BoI<oT;0rAR3[sWta[Eic:fS-Xi7<fif`8SN]%d-3,csH(F#EOaW#[gl\%-RnsXa[2M9S^-QD6Y6)$N'#Q
%k5M?,W9Bko=s3ClYVX=RmN5Zs2O%BpljMX(=)_F.NXOZ_Tj&;DT7$JSn%SY[eOs-9+Nl&,lAOu/h^ttC=rM_X7-'t;bkq;k++Nq%
%GM3Q+nIIijIXQXLo]=ELLHjC\QiG5!?X<Y8rgqok5'A<GIf,<iq=9<%5C3:u8,pnNHKnk!jL=c2]GTnJr/q!PDp+dPF-6E?P"n2*
%q2bRA:0oQfs75pVDp-Ct[+s-Ze9j>lhR071QZdC0j<7:hk9M_6h'3G+94,e43#X5A9?Ff_`)f._(0'_5>IA;<et.WG\.QEFCLt&d
%ZI%9iASQKQMohTpT7'c^Sq\.r3=4NA)g+ZLI?lt+h.M,L/%6<MDE#8?42/ndni-3sI_dW3h)f!3aHpeqhMU*^KgN(kqZ\C[os3kR
%++@94T).*Gb2l:7W>EgiZ50TLer[(BegrIM]at*Q^7BIjN3i%XmsZ%95MmLRFm$[&4\]dS(WsFIIRfc+2n\f`QA.X$R\o:Es)^\&
%aNKd^d'e2-XA\"iR&NkBc!#$l2L"`F?g'R9$/ssedXn550!B8-g3n7g(Zi7]MNKRgm)=^F5'oXi2?Tm(%):+P>8EboIJcr,EDKf1
%<gu2.l`J.ep34"u^Z0[T7=OEm\9%H#)J_EEE-Li_F!0@#jDW;(B5a4tpW^$'b?+<.@Pqb!F8O6Oi7?Q9)7-qjeXZgBXr29GX1u/o
%d)WU)qW5IiA/+anc`Mg`hK;\;lTtQjQ9KX_9D0i:K74^05P]'AKO1c\]q9]6:4E2qp%?;GEjY?3GNXH;]D148br98g?L_Y,bH'*q
%0@'R_N2&pnns,h"O2"mUXg=KI^?4%NcX2RLoolSbW%uh%^L&gNmpFndFnS>UC4>_R\:*Hls7Y:Ac)^)tFAeD@h%hkuhY#3EIs-.S
%?:k"6ePH&a0$[gorSb`[`M0"&qW@_;s(abFQ00Zdq*4i2ad<#klT_,O]KqZ',pk2NN*lS9M.3ghDfP\n$-J7K7HmD>6o6"^E?rB'
%p@DJ[*a4Nf7a5S6P<M4uleuf.O.9:&(u?Iofb:KYXn)*@L>l9u\G4I]:#\aShF%8*iG&moj>Mk8mH3O$p9QuqIhqnjZT'4(X5_rQ
%_`!FFk.<6Mk&K:Ha7m(9fc/\WHR>r(jRojgHcAFbB0=rs^\bW]Q/DCgmei<Y^AH3#f\+U=*`R=n^KY4@fc.tNo_6GqR3Rp.gbVI/
%alCiRj")ROT,ppqoguYLGPjUFa%n?n:G6n'q4)MQS@i:uCf1'rk(2mqDSq[lGPe*re@tfaqWnYCh6$DLBj1DiErKga`b"*\Yr%g3
%&#")PkmouRAQ+!qm(Y2LnOeF^`84Q/XmaF.'8/*!o;)$6dEZh*o:YjAAK945mErMid[j-ZFP,DarQ1tpa_pE'>8^IVB3d])8EJDg
%[4\44\UX^JT>kH%,2r+=U#Zk."F?mM?gnENT,-V=qVn3Q:X)X$l,/E"mCk3:_Rk9&C::Z7qOg/m@<?a!4?o8lHcLIE/QlR95Pt/G
%]sdpa!\]luC'jgiVno9"HVH[VlY>gFL)60MY]RQf-)"VOGQ(E7daRRHRFZ;?qQ][[('9ucG>FirH1U+[?X1ABrRm+pS!Qc4H+r)%
%=0.<Dm8M7WbA*-10$9Zu4f4j"qO:j8F8k^!l^LP,PiJIMN;8gl?_;c>l#6E"9;hdYlGnghY=;==,G&5fQS39lddX\HH><\]f2-Sg
%5f;ZF57`)/:-S]&H(/Mnb;!OVRq[/[ZCiND1rNKD3=Bot/6b"F&_5h#\e^KG8SM=V;oN_I:L.tO*\R!r>@mX$\a`*)@?#tP3Mig_
%J9rlb(1!*n8oiN;?C+$\07%VUWNe/.*^gi\.P/foH0O%ga"/GF9CFX9HHsugSpY*pXb#Y5GZpPBgm1$[0EoZ<'u&$1]^K_#@d8E(
%(2?Gc>:qPVKs9?i],&Q<mP:B/57P;Oh*mWbp8PCRYlSj,'g>>FkB`ao(0,.kTge2_a\sXg9mF@]QJPcJl139$#?<>X[5I>SU05l)
%J*(<neX*_c'<behq#h9=0="JjfGQ`Z`n@\8X%-hf4*fhWqWni<k!VRJ)9^4QpU:CBDbke@Z=rH/GYP9biV(G2%DAn\%C&8R&(>5X
%\4)sIV'c&VdU-12SiTqF,AeU%mRS_H]e%>OZj*T@U*9$aORF4UZ?BQS4GGnRA\]Q3>qm'/3Yt6KC%07&W69k9no6ang!<[DM`m&P
%J4W>,;!$,:MKT_(N,KUSH"pAs61&CQbF=W@\Ko$g6kk'8!U'&20QO%Q<>V2i\h_:EU2PqE/b;fY5j_k^dA"5L>6=uEB=\)R;!Q?F
%bG*s9QY'53ZeW;H]smZi4q:VSfP;MN:MBZ2b7k@Fb!H[Um?iU@o>IO2@`uE1"C4(*e)n<egCTYgBhLsifui4"G;%i.0-fl8(Z-)N
%9?Y'_&'4V)o?QR!]sL?`.p5StKcsJM_IZ8L^-aQs\$7ki(Y+oqW0:O2Y@RI3WQTq6+tn'Np*Rt,/@nG4haCDA+koo0N7[K?Vs)Bk
%qIO<tGJ2(aOji]5F_oq!Xs&m-6\*0W]lgGq:0[Bs24iBNF<Ph"`d1fd9QG5Zk0d@-Qg%adl0E^$,*b:6ORG>T=Um7Ejg+;,DcYcW
%Z@4II9c40f[kNi(M^i*0K@!@9a3'us52<9Dr9U#Yc_gh"=9",D9%"8eDner"F_pWHrVdmEeeT9Pd>C.(IiBCCBbYi_CmH5gWJB-a
%]V"84rX;N(/X<g1jb/q5lQhl+9g?$i\l:H`ITa$^Y5oR)ZDZ1P.miEW8[tj8U__tNZqNNOS'L?8+;:qkmDRPOYp?A['VRX?M<#5]
%m!K[4gjJA7R3JpLAD^W]s.Z[=-=*/oUrsP&TnFs;=;FeNH]_89;NJHuHnc.g<:CNe2mb-9q?WeBk*u,lUmA]m]:m#L4ho[@O$J'V
%=@DdgI3m-0O/P^dH'pHK$((2:4bSZH\rD%#FQ^os[Yj1b&_N\:F&'"oUeFFeGKUiETh5\F-@@flFBKPRMp;s>?nK-fn\Ph#,IS.e
%`EYeIQLjaC2($uZA(MU3FM1_@7rk9^,qklC7K2r&i^ZYuoT`E%UL[LVH;*WtQSVGd%78L"*"UQ/biOk??+,WReC_'Sa,IEYN%L<A
%]?&>J1/57mnHtS3o`=N8N-V8c4'6Bd;l/A)F%/WFU#1Pl`f9(_Q:K4UI?k?Xra7qA@I73UbqKo[OO(Po4fYal$K:p-GDF5F3sX%%
%mHPRk+uL`O1f@S#M%9J83O^Oj[hQ3\I+[4B6'K&GJI-8J>oMJ+QH:,?TRBPT+*H58\bm9(oWl]:fPjGck$j=Y*%bgD7Hs6qRdH&,
%5<U[=QjPs'Qh;aR=lQ]NO/4f@*[dQ!R;?W]>=s3jWG-0lbF4Vt&al_$fT*2b_)M-fQUBSmAP@>0HdJ1Igc<OYL?;B/GNcW]G7J_f
%#dd^_#H,Cj228kmP9"jM-,i9abc:^OgnH*:9JnR@<'!1toijK*20oXgQF`SV'!,esmqk;DI+r5#=;HS8<]k3;S,HH(UN._8W,DP!
%X-Y3kIs_%Jfu`@KbHpke47!f8DXX^rj"Au<'9?2"::bu#O%bMK2U=g/=9]\c4V'HB\e,0T''a(:lb829GdeYI6eo4/co`p9UR/[)
%lP)mGe6!K_(<d?OAaAoI:3U_L?*<\0WmMtCkTOCq'P:Z$,97kCCIg&#b+8_$C35hRD._HaA'H2*%_Lo0I@"i_*m(*n0B/;M9c`F#
%+(V:Q22Wr]'Y%5f!iou&V#qb(#AliB88jiY8r-b2XR>^'j+:(>]2eb,Z3TGkGp?Q`I[@0C2sNlgl`9,G6n_L?.ZHC8l-a/3`drnu
%0)M`aSQ%b%R,s9+eIkqtmjYmSkZ;l%7q*Agh$T1ob2ip[/c<s;4=QfK!c;Ya[G^i1jl0*=WGo5llK5N+CdiMl=2NVFC2JO`\YUdf
%S%Jn;<o15)*F4T9`>kqmLLme#4j(aVO4!IUDRlpJUJ,%0n>GMu3\X!A3A_G!i'g:5ZBm2t7cF)T)t^8coEMLIKb7`rM6j*_s.i%t
%n`9^_n'0V@aHaKup[@:Vc?F5N8AJn?M^?1j-6si[5k]mK0Z:f["O*AlcQCJGJ#c3,DKX]a"3d:'3PNg&M5+*e.96=];+W?9gh]3\
%K(\)AcUFR$N%fsgQ3'iid]\W>X(s:J5$[&"J13lej;BX*-II<3lZD'c'$Xuk_#s`[VG"^N`Ej@8lrBh&A<jW/,WN(u=:GJ5Q=6I<
%cR_SjMELR>f6P1>p6Gm[@PWWgQT1S'mA?0UTMqg>qBV#Q^h$O\"u&S%H!lKE;Q'S`n>jm+`tjm?s#ru^n9-\,TTBJm6gif?.MmZ:
%#ms%<n=EtgN[B:=kOR,0"JHhQ!?Rp\ROPtRnIZe'-B2p9A-`G)i,C.SSEB62iWAU!Ad]%j8#0,N@tI@m8gFa,72.7+K+QGWXc\7Q
%Eu9&9_1U-R3Qa(2`?[2iY+o#AX9'UP^o.K%7(GX"=l:bQIPZ8pWr`MKOA6_i9)/q3.sANYCpt>=).A0&cNGcc4._uZIE+T,1Xc/Z
%!X!%)=0b"e2h\jb*.DdQQ<M&Ap`thKr+;tVUqC+^_10p^.k))&_.T3)]h>pWU"RIF0Ee.LrlX53%bTR?,fY@26%[Ac-SQG5.b]s;
%C+kFZ9U[AU`Ej@8m1gGjUkuDfSFJedo,:ZiYO(/Ps2P$i@$e%S?:kCFF+te=gs<Lms3:LI)=j^S_($^>.87Zh:h[(0qp]ZAoechM
%bX2pm8JKbnl=($F)!_7I'oDU1IMhULO;FdJ!a%h7pU+@"8-]u..SE"Q4pB#cZZG7![:2-#%eB2'Sb("aG#!l'X/:sjUm90(Wb<fH
%Z#]YDYoI1:mS[@h*k-4e2c!i>\4Hf9Y-n91MF@@YG[Cm;l8ZfqD!=d3K7L2=U/gA&52<LVi;Ph=F)m["BKfN6ddj[pJ6b65(="@i
%gDM+A?k<F-X3/3W<T%'*#"qBg?BtqGF-'@k;]`F>GF&Yf/d9mJg@ubM_Ukq7r*OrXHsGbe;W==N\'O!Y=$&WsSp52eF"o-P-YK@7
%.k_g3`^03lo'0bhGqsj%_hrrTfP%`u#QEdfW4E/50ie$#"oBjHnUH0*qS/HugWGDT*;?I3V.RO$K!s!>$q/jbN/dARK!FgS%#rH;
%naLH;rgj&5ddd_^Rfdt$rpK[`UO/o<=45t"HscNDn%[5QB$pKi^\D^\N@-#(49sWDp`OpGLVL_0^o\#`WbCII(3F9@F>UD4`Ufsq
%23a*R:N!suAEic'7Oa/o-!k^ZG.nJjQSSM6Bf9?;(P\'9.]5fS>!<pROVMMqno4WuJlJ@,6scTl\RkcN['WclQ"gk7&G;dE?4d0T
%)Doa%r,HYT`p*Lhf's'Mi'2mo=>6O.rdW:i(XMiuit+>?$tp*C<?P633Bs[>;E4.JK\uG%rkI7+q_&K-@n'52G^sUt!T*JF&!G$g
%UN@9f=0X$%1r7fo_oZ*E-V@]=E)^e2;jGiM2cH"6J%-+i'h[rT__0-),q7,(9/@L&^6s<(l2J:^s$F>0XOcWZ.S4+:G\%4HkMslr
%n)?9FZ:\&R@IGJVC11rKH_],jpaYrUR$m<!:^<ImBUlMSUNcVCq2\8n3e:Vr`E1(W6[VpO[.'Yf:HGH%9Ln:90Y:*]4A6(I-P6S8
%l4.Yu!V:fY>17u*T_,^I(P%,a+u)($n;$M8@3N(2ODXLDdB-HQm0RfA:24O3rTNm6a]qa#b,UC@[9NX2E1Egph>Pf/G.&>n`P^Lc
%bJm,73Z:9Jc!FoSn.J@NciS(X::c5*MdI+hO7oW<;#+#[9_jQsRk!U5knn.c*?=f.)h/.-!e_JMg:Dflj`rGbS"75cBQ<P^W.j4F
%`%Y,GL7U>Drl?aa`aZE`GLl&M2hambkpe68COI5GAT#tde)p4>c-E@QIpiX<;,0q]J?"3!&X_fn0S,7EHWVTt]"3oAUJeO7>SQKA
%^dPiZ6s8.AGS^/=bR*-/r_IV0$jYf7VH3bgUX5/g5bX1aH%aKCZfoW/`afD223Ue&kQ_02a@Ru_4bDr2<"B#[D?SK7W#e7t%753s
%0^kQ4Q.=SbC2]@lTkG5ki=9qI(`n2]!`*R9Y^\JrlOd<-MUi(QU%J\n7qb%Plb<s'rH%,nb@o-jBK\]J&R+'/>%?uc13c?Adcq"2
%Y]SDA8od%sCTYDt,7Mo9BKTr^K'<k@?OkOo"OeT_*l7IX_K<c[aPd(f(d,[n+Y[#Y0R/8e,7M;s^kU7j@G3`u2oZhC?"99IdofkV
%Unm<nkaZ>dNtH&d5^Nd`<[5s4JbBAV8"fgij/daUS:2?_oa%opTKNADRfdND25`iVDQHQO]+D.mZT^<$$V?\7N6lm(ejH+<)56^/
%X[d&Q;eYRCAL=4H9FooQj;t67Z\ak;=TcnA(ub&lT818G5N:nh#bOW^r'-(bG^'Cq)GE/e.YQ<'55WB*K)$Hfi@s%A_WMLp%ti3'
%PDCH2*oZ^MVViau.QV3UPh!o`M3ah)9ZAs1n4*Ce"OeT_*Wi3/V[u?P4bDp\)?#n6U4:IYIMJL2khP,&T1A[(ULplU&jLMjpF@PA
%d07[Cg)BGuX_0n7L%[?)*";'D9TNS-(ml?b3#od,#c:,(Kn!e`qWH)eQgo?CdVslc,CCPd3W@H#oZrrS0B;Zf']KCj8,,3`kJ&he
%rH%,nbP41\E&b_t&O,)c(n+[FkS0^+'#2^[PceIRLVu"Z4c2Ibn9J\p*h=l&iU[>IDpWs!RR#LRr%L4OTK+gJ&6s9nd$0jg"]D/o
%#bsm,I5scX:)&^BHA'[)CdU9<SjSISV$F[I[%&keK2FPI#bOW^4:FE7:)&`XH%aL&Ht#Ok-ePKN$ACE\+A=jNT]r+A(5hg14bDo1
%9Fh0QJ"_LKs!r?k90i1-o\-jU*;g*cnm@KmTk<mD8DiXDf\],2s%Z2EJ(dGVg2d&ZZaEife<d$#BX"K;)bEr7d>&`47af@K\eM"^
%q]h,\PmLRIlg?S[YP.]dS%ZsjU\B2,8.`Hijr`ThC85n[@p3fC*OIk(UR@-[ln`VSB;s-gW@[tFi'6p<)Y$s6<IkB5'JTQrQMs+F
%rSJAsd.#e!3QDqhD[d)Z'dN6[k^0A\CC^I%JG#t6?=iInVftgmU+0(\bm$`1;7gs=,tV:gh*::4+@[T^nfM:@#/^:pT@N_/2)$$i
%SYZ+oM!s4mJc>*VQrVG-TG(8H8ZQQT6up+WItUC20`pN&[>@DS7^nhI/BqP=ld<hS&RLOfH?;Hhhgq-n3HP%.Ql[9P)Su%OVJjh_
%Al`^D:ls1#q`K>L'.jNm'4mT/n1FQ4?`)0pUO%UE6_j><\CCke7qd='BW\g#QEJN@b(%[\-Ht5l7agFg80OIX[/Q2=4bE$-JF(Yi
%X:]!(+T!K/>6of=BW[93FAXQZ<J&M%BrcV0`$@glGFo7mH?KGE,KLo-Z:>/*7Z]cbm$irjE0i9=!SMBB8u%XW0p+;Vc),/kr*>=-
%ZlYq6&843fSi&k#&R+)YnLUFJDd+a43N%fI-9,RiE+`9>pOk!@l%f;ecj6aDBKZK%s+O3^NR7MD_hS3'BO+V0U7EM"R<)#obmi8=
%dq6`O3_4&Es(ij5%@/mk`NVk*4VVRj%ekrJHN`%])8io:M/^K[j^9Hn.4S.lRaQCA0iJ56>`@Te"P6#V2'75cD?SQ9\@t8=[aI4j
%@MJS<EsdO*QM@NmaTQHER`#K$-hQB6Co@%6ZU^BG'P<Dd2i]S=K\8;?fuCNI_*(;k'8)'OWeo\pFs.a4.RC.:Bj:e6>L=$Rkmok9
%5^NXf6\+moN8k2N8"b9oEKS1!LL2FG[#jcg:RrPC[+S<s&P.sJH>&B]ST#R"oE_7217M(F7*s>K6nA-+7H-/ai>1<-r*e(#@>sbE
%7VFqI>)uE<NmN**ei/E9Qk_r=BkE'l?q6rm$tu4,O*sJ&e)fe4is;cB7dJI\`XuC8d/$4QY8,&=&;_';3Mp$p9SZm=E&%WWC:ZW?
%"OeT_*Wi3/#9$)d4bDo;KkY83TS,J'N65TOiPS)2lm=3sXZ/Z3&P<Rbd\DGR,Es7CoM)4MBpnasS.as(*d]W1;+s#J7aOTUkr!i>
%+>u]tp#tW8#dK.Om*T7]&Rpe4q^/cfL#eK!a,E^UU(G?X-[c]Iq(mqZhB&I_>Dj`5*X8`2IC@p[[b=\E>9i*^_LK@NnCt_\`Se4[
%s57g2^;QDQffD03kEp_dB7DhP\\YpKBUtit,E68d%L4u5NCqm1p.NWP;eB;?amE@ncd.onb`iDiipaG0?J58Bkc"LrAb.kVIap]<
%):*PsAcMW1"]]+aPOp6'87ag#Uat5W`)SC%mRu[:^B)3$VK.jFWJ$cE@3qJFB>t;=^VaGGDIUKQo"dG#5Pcq`*s:f#XT3f-_S\8u
%3IV^i.`?Gk);;%YO=FN?l[8JA/aOT4_%=-MRRBFP(,ZK'KE@_U6_TBgMT1n#Vo&5u+mL/>N+/&+?rTr\-m`'u\X^SW/qMh4ei9Ws
%Q"aq\ccVoW`.Qk)T*t:nj+W2CSVGN5^IZ_/pq)W0S1\[0)XhmQ9PRF!"FXri)eP?6Did_#8@jcl@b-QBqV2Hr"bmRE)S?bn::CA:
%ZpO'dbR,XOJoes^^gRE<Jt4jDHaQk_^"h;ASb-T3Vc9IsB_uAMZ[Ms/ZoSGUPG*AtH-kiX2qlM_YN_>:qTeSB&R&m>`H:Lp8AeH7
%4C:gtZ<tUc[GLpjDqYZtd_Ge-qX,Kd%CKSI?)B`NefND>oBh?u/V?>lC^],l=#=oR`#iF(kl$L+Kcp71e*oZjJC\][&#%Fp?H/]D
%8=bOX(t&)`F#J"flacr!c!O3P=DAs5+?eR)j%e'P7i4_NNf6YJl%PK'*OV(b9t/V;"_3]f^+rPI7"NEAO5B&)-KHX[O9BF+fbE:5
%">rIR$blpC<?"\9XY,/p[),9f:<k7dMKHF(0,E^'a-Q4XL:#,amUTm?::eTbSC3+6:H7#1L2jk-%?(/K@/LF?fJJJgQ%u5i[*TM;
%rPG'];,b7-%4H$#b#[Xip.K7:Y(R#s=EkY9b0Da=R3A9g,)WHR*#FApTeR<?-G^IlH^POdb,m7j<QHs0GRq.))UgZ"*9k>1G55#A
%@h%*mN%5\E)B'!-(HI?PLEju<=Ar]2.40m^12BQ;&@tQbW_$s'q9VE7,Flgb'.GbITFoGT7^R3-ohl]^Ns)7p!#Q*mE]=\q2hKU*
%G?H.Wi,W6V.0g,SV9k)H6A*+b0P=C!Ug+<hfKZ$s0T!gga[5+7Bn).4VdBjn;F[;s)PKL7)],n*)&$CYpc03*No6iemDN5<E>o<X
%V0+uF"N8:*coUCDO+O9FQ;,s%ChQD?Cf6ehHp%Bj]lhbU6e0OL:&NC'&;+H4[EV2S6:Y$&NUYnU!HRB=.8R]nR=0o>6,qMjPKIqn
%N^sEh;+L^dqlKoH8N1l$q$Y4,WW5r;dD391JL*n;LeG7=?npfR*uYf]G`(Nu\FdZ>[;EX0l+d_7WG&Fa*u?LG\0[BW$0'tr>u$Jf
%*Q(cmQbLk3gPOSq(H>nbZ\,,rIZuNh:%Mj'i.dOL#<ao:#V8l^B./;74?0^<+^du!+cl`@Fb*jZ\tkFao0Ze/68h81Xs.;?#.T4r
%$Tq!n&"!u]U4O`I9M&?Nh/7saklf_W=ZRFQ13*Ut8L;T,n4Pl)`Ur`=bKrPN"EQ<k3@1((82@'1.KOpCOcRYJ!A]%h7!fM[[D_pr
%gji<T]e2U4_shKb)CE-Q3M.P;)=hQ016<.X.,bGV'l$BP1bE)p`"UjN`]$l^5sca4jK"qNT5gi$/p#,9l72X,XB*?i&=19hi]R8r
%'X;DMP>^&!"e>d*N]II_36<,j$FCc*>G0`,%Yf's<=,n[M&[D%KbY4AN'joX%[a'Cj;\F6^r]qbN;LF/Bp54D_39'tPT(U=Xq[$X
%Lqq)"BP='CjLRrsTGN$:!5oCr1U(L+,D9RBK:I`28>//_i$@N&9\Qj>OliH\&s4gfF5]JCglcgbX3pd;nO38/;FMj072qI`5nT5#
%MJs.C_B7Me:,;l]J(p2qSk2'ITJ?j:`_5WPHqPA>[j=lH#@.O7Pjr\q$p_MI9M)*_a0M):%O^_eRT!3X4M=N?K_`sb,R-:P!us;S
%ho1b=Pc'\anuk/@_aIKrfUL#bk%0i1F_rJ=O]lc-,&^nOO8')7Pm5$?DBRushGGS#hcm,Q)L7K5%,t>l.h)X[D&d:OjOEA^o/PWd
%^O/jZD)k]Z6O,!6!Dj>Jn='NWrMN)%L*G0?24C$H.0UO%s4Kg9/!8o=i/I]aHm9#QJR+Ck0B%`FK2`l1N_!a#[MRZ$kXZ;-3gG7O
%A(KBI*;#W5XACFq)Iro3QA>V#\nGiA.MBrE.$<8dQlrjWCdZ'bN4=N[!)aPM10pMbk?sL*]EX;S[/WQ$s%BV<-.hb4YE%5SN#C`l
%Z4RL_dd44L#6%(GP@`U*0M[aUP=Wl-\7XBV>67h3/P9c1A=!^[*sEV%O>!,7m3W<F8U0R:HZYqNr=,-%k=L0.I!R,6L#adj(p>+;
%<05ESh1'A=j^2cuF423H5G=/bp_8ZX%+:J%n'RWSe$5m1=EIfqLdR5n'jOh)DJ@5#"M%5T7O&Rc<J&tj@XuQH2i]mD2Nq3]DBe*Q
%N+'#Q_*1H3]*D@Z('E0KHfm)YI\a&AoZPUm:O++-bc2H*_YKmV]7lq!)Pog.,BkUSbt/UC=@?Bc"c0u"o^e[#jfN5,j!68ZHkVo;
%,]np;3d#[`jK:jc**Q8RRObfNk-cT;:dD>1/[hW-RiV.+hL,a5#ojo.]A2*nKW0Ar!nT;U*IJ=T^OjRTJCA1.(OeSI65-jEl,!Ai
%NtdT$g_OSDMqfs>\91+)8X#7VBE1mh?+C,f"[rR#s3eCnEh::IN77uha,tkN',W7.W%E)O)G7'DM]f?q(J?tZ_j3D$$s_N-j)dgJ
%>"AWY>"AjH*/tBe^=][4r[UAtn5"-17DpCu7pqQP,Y;#0K3<)T_YoSX+)0J]*)2=g_On@u$g-nVO<>Lns01HG1R;\r(!HS,3q-==
%_ZE$G7fa>p$mub@51F)K)]VI7dPe3<2,J,/jusa$$qWZSUZ+HEm:aS^7bN8?].c\I!'7g_B<JTSDJ3P\rIR"`)(A78WMCags2]dA
%A7SM97HDk\.[/TDed8[+_F-W0Eq0",pig>Y:rGl_8dcB9ZrDK3!08+V]eR;o*`7KS'V\,C#s?2GU+<@.!j^lY@g'pLpqB<JSrga<
%BZuu$:9p+4Jq[$_3)u^N(?/U(M4jGP1SCW;k6_qK)$fT'%^9)c$$@Q.D;'bK$d1ut-"A13dN[3<!0Er)C*-/@O]@\koK!FO,V!QI
%=O*.$G>1A"+$W;]Laqd0BT`mh4W`@f+;[5R)]"=C&?X:=]*;c;VUQ$.MR\N'K"nb]>272l?'0BpLKhU-O:1:f&H3nGUW'gS:ZDn&
%:(^Hn6q19&_T1(5/9uPb^Cm(sdW((&aHe(aa]u7S4,",;mues7f@*!p9n*jSP:M4rVi%uuFM`n'6/!d#B5lUaA.7t\`+GL\m'rcu
%.#;JiAfJ^</B3[$5ll&7?M%eIqof+a7An,XCs+.!=aX`f8r:*gU5W!IFU6p'2Gb0U.iOdH(7!)19A7Qf5!Ff"8qQP:-59HJCP>kB
%MrA<R09q%8/regO+%jbD8)ha,%j=6aUCdj,]niu07VRLcX]5dt-aj0Nn=Ca^Je_po/tC<eHCl=5k\R\GGi$03khjtp0lp`!<mo4t
%E%aaJVt^2O)k4f[Vj,lSB&j.?N;+6fQC?G<cmii5)G@,@1Ii[+!gNhoaA.K>HaK+?9$'SNi<LU>")uE[]Y[5Nb/&&?ieV$L.c$T"
%BcJi?,le%On&M$G,r]K'<$HD(BuYO!+NssNJ0*D`5[^8;=M9rK`9Ke?m[X-km&3OhTcZhB,GjG9+S&.[3p2.Ti#\a;IS;C:.K.?c
%HbUA4Bb)ieCF'0@.Xn"WW0I:[7!mnS+,.CIr"Bf+c[`kC4]WqeP`#5F,XI267i%9/^Wo[2*N+u%m:.KjV@GS"oTfS"PkaVr##j'_
%<l,;;^[[nB?mmBp((>>)kucR?:V^@24aZGlR<7aYQihV45/o2^9qcfXLL)HsKHL;75!akHp(c$E"Vp_R]r]WDNJc3n%"g$FoHf?.
%6,/OW!%+A_8X\h1luoU"8;D.2&TL&@G9XOOh@KZ@-cAFmN><QiP6<Gm$qR-*b1fB'0aZ&=\[+D%)4^ml(]i?o-a('glr:->CRk'\
%WEHtN:HBk\D1I9CD[_joD1."?Rs8HKj[eS^U(o??%7,Rqi=01snCsb-+d$KHE4aQm'D@bj,-ZY=L&E;mEceXR:*n2XiT.U$&/m,&
%B7c=?->XMAnTdu>BKO<t.$;=U>j0G&O@YIYl<2\-5sKqJS7QP*$4>/8p]LT@6O5]8H#Or`G^(s1?uprJdebt24@Rad99iI0LltbH
%4Vd_4Y#</*VrB(]grq4N5U/3,(@.TGqlbCHi4K/I&@d66iOfJ__@>nVQ$2jh[M7,T//V039,;W_8B?n.ZlG^E!%Q*;3[*WYXVNhP
%]pVTS\gX0T'?>JiL6L\O.("(YKVs!'G(ZG:KIOUfR#kTcU+JoTB>W4]]]ZeKAkdSN-n4:kB5:5-Z53t9M_KmgR3*3c!<J/<L3s].
%UsV@5So&9KYUjb%6GuH#;%q`<D&]N\9EYc@0U@B.SSU0"Q?6'He*p#i%7OnR"pYL_7:BT*:bmZ2WNVF%FW$glEN.Hdo6_$;E+FE5
%E'Sg?(4C/M!<P&oW1W"gau"i"A(MYi8b'isOJ$\Ok'SHrUGCc(GuRX)qgrf]V'mV_']$eXYp[idE^GPN0pPh9TWQ>koMeM$p4-dq
%>ElQCZ7HuIFg+Yqhgl"kgTQQsK!NgAD6Xm""uu^O1s!AhJMd(:bL%$qE8f2%9@AuWKHmdP.6/OY+G%'u.M:5jYp"HM^IDS.[XXI4
%cm)9Gk=Y7^nHX>'Ps<KnLftQdEN_D(mYpo)/J$oqTb;[,QEru^4@2D^,*^"\B=,8"Vhk2sU!,u@c%`N;JMi1Xe%.Tl#r`GRN;XCE
%S4eVdUC<XX`;X429;fRJA6:7JG[o'>Dr--hPpjhUr1fWK/%t?Aa7p3#__Dm(>emrFJ]@2S&gsoLIM<Gta\EXtj=].lapfC6.FOZb
%7dIi&YN<Qr@q#7"q?md`>u_MQeLZ2>'Q^u$>T?,!Tt,3R_<><&Y0(nHLG@=FJW`V0a`B!>[\k>Lb%;u"B$V5%:kib"FZH#gg3M6Q
%(]oB]8PEN&"TOPYCrfkVMH"G4Y7<>k,2/_A$5X0@qT7J\^@`B38h-[dN9e\@2lT6^"uth&D)^oc6ns>t/2//AeDNh%lG6F*fM`_U
%Vc.6I*!&Nu'pOq4@`H=PB)f8DcnoIZAidlS%[.(*2[kfccp\8Df5Xgu5p)d0&([7jhLJU?N;jmP&3nLt+8DWgCoP("+VHQn^j?hJ
%(cQmGPc)-ng%MEu!#"[Ii8,r`JR#,.K[j50^VJWtnGlp8$;Q/lp["36F=AYs!V7So$'9.Q2=QN"*s<mSGh&jZnWmILFe?cp7S8jO
%Dn`&<oEHB+RZg=,pl?dAg/gc0/o8>!`^;J1etofBSih?UL0__T%cb/b$uNN`>J6Cl&I+IGVL'[8Zc$kdejZifW9(Jj':h+dF;YmG
%.FX!qNYE1uJ4+$_$?@6HWdE4B%!`b^9B*>5bV"cfQE6bCac4q=3@4b8"WJlH&]sC6f[3J"0-VmDDb!)fS%^Ip?i`t?XJ+E*"cB/>
%<YD&!%XpKL!O,KZb^U?$c3OmL:IN*J3\DFLC`qQ\Q>*0K`d1PfJ@Ja!-uN(:aW&Y=ib!13gc4^;T_o"e:#%/(<NZd!@NakC`.ET=
%PbWdHKEgt^E]b`Y2a`8N6cq,,<W\Zh%hQ4;YqJ:l)?d./*$k"nK6MI/+Ht=n.=Ij$TZ7bpQ-udincg;G9:el:?mHT/+U:Iu(S%Zc
%fUc50Z4JV(+fpdY"%HCQMg1DSll@IeBOI'j)o!Pu**GP[n]gFa*A8IAU>q_Rc:2H,J<Tp9C;QKBqpr9q)\ZqM,!1l2;`@Yi"!<i'
%JJ8<Kd4^X!+.E9U6R;bGdVsc]c35!Wo`StT9#$3@p,FHT+.\Z$TJYJ7&p.*iA9LSAD`cO+F9aSTNkOZZ4pB#//7]`@d_!G_-;?Q0
%5,g)F,l@L'8g8CHS-F)4V6s?-O0:1D:8116B.PGdl]4XaEFYY.r-!d5#RI-/TK85m]/:R9bSh^clEa;#?5T.)-Y`Wu1^gF^2J8mR
%AAQk2I_1,08.p9E69FF5;J?g8Zm'E74hOeI,tP]a>MA\kN][ViIE4rU^cf7G:U)?@bMmoGht+]rNH2cJ-kbc?X'*1bV)/upVeD#:
%=7U<t:'Fl==q6=".8n'A-];CYBL`c%H5=OLS0eS(h<tilmP9u_oN@(Y:IKLk3K:qP]UT[fIj#rpj#fG1>\HHdl:I@6d^/`!,kEUF
%$l@?<=FoG2(`4&tb=I=#W.((p0nA&2GFNGZ'TWM)n(&,S7%8o*'g:7ReIE;!`r[c^hf)?`Yg*`6QF9D6IMK#)9L')"Q-<8P'8psn
%[+In\$YJEgn7\@g!l3kp02$n+;CY?8cH_8Z'/$XbgGN"GpV"?jZJh0#BJk:O!MWH&l'S$Q/#]8^UAtK&U.pa8SC&tcZr]C]*SV,j
%Y-9pPE+Xb$POAundE-uC)g2H8>=V(caIoV^rZJ2Xe=+NIS>l>J$9Bo[3rSc*Z3=/.HtnfFc?.^\b&6@bP%olRM0KGUAWC:`://Cc
%Wu%pWoYk%"2k2T9-'=MKe]=U=`n@-G!98$:@"EUjPKg1J@:M?Z&X@fU6qX1];.MfF@+&m8mO=Z]BF0J_a9E'GK:S?HqRN948hkL]
%-:[7)H(N;UqPCq>@*^1-^6%6(PMLAF?[i_rN:X7QoC=lrU-m8THZ[hBVnITYqQ5GN3rafHIpM.sXK0!%1qV1Y8,_$GGqrWRUX28h
%EonH]rdM6'D.?NET-'F+VdtHFDe_[hmNt.0)p[9d,r[BY8/`0Ql\P2+C,f@[*i;T&)8B@TF?'dN!KK4i3c>6W.5Vg+R,"@>PR#XB
%8pEE<[L*7fb^atM6V:QRD[[9=.?/k^"U\O#mD,Mjh;,E4AuE,fk^al3gR_"Fn7F0JB66oh'tf%$p9M<^4Ql6.AaDWOm1**_D"N$$
%Xdue)o9:kXK?CTcPK'6KbRO4Xe_C&ZC@@]M4/%t=9W\AqZH)`1n+YjSGW^/aF1V<Sj5b;o]Rna7!qhIoIquF;ZHDt#oULf0`_fnm
%N97MBcbDWB3o*PP(b2r*]8+YETu`I!SbPiOE2V7>K)tRP-4)f@g$HDJfaKU_\GAoT`V#))0.+h\UhDW/g<H<:A!iP\Y;=&!K>R8!
%_nuQ,rG+)Lc?&aH[+@J;$c(XAb+d@_%D:(#FXY>in=9>fa:/RAY;Vu%Q7/Bns8+IbhgY_R5AdlQs#Dd9(h8i1NFnr6_3FuUg?X//
%C<],j^BAQf27;ntf"q*STI$Z8Q^HR(:m+lpIaJ)".K3s>C&Q4KN&c_2Wej@rpA7Z"qu&0'0qM_)IdVT,\im8QescKL=!oS=C586a
%s%@hZK7]2*Z[6l$gK_P?0)RRX$;bhoM/aLmH]:0B[;KA+mb3<(ZPVUI6h+D\Ru/tg?"c0dHcV+`UW.QlL0%U@]TNG1^k+U/Y,jKA
%#A9$KAnAZ&I!/a1'oW>sp=mC!btdl+dQQp(>FfBfPWj#*ReNE(2Grj2Vq7q*g9!iapLTbZW$#beHcN7'W]!2kDRY$lmbt*aH<;eP
%*mtOo8I9Clf\7oPk4H1<b@t'_XjkXBh9&4I[+@ESrSQaffaO<rYPFesBr&.:=/l(S\8\Xt?q@ug.r3DeRdCa"6DJ":'*bbpD0Jc^
%^rd/NQ<2N-XgCj8cu?=sK:bG[`qu3GQ,ZC6VqX2aX6a;Z(H6Qjl0]V09I^8ph/'Ko\up)/3/5PH[Z8Y+?Wa?A[UPNY8Y^?Qg]7'*
%r>cekm6UE(Hq%nNcQ-;F=&-%tb,&)K:7@T,?!;M$B6Z"m8C"ChU+onV2'0Z3Q(p'QK80uc\uF%.2EJT1:,d67n\R>hT/9?5-bhMh
%>JOd7jh4]uZ-u$G8dCGgP.od83B_9.B6dNc$+<^pQiGOX1#[_q)e__V.efFO72<5`Cd2e/?ktGgk/lo:.6S`RcEb#sh;(O>UIg0n
%EK)RBjKRqa#.^b>.Z6"MYdR_"CU[7=]nMli0]D7B89LG#ZMRktj;:88VjG'$gMS%L6D=S]+(104kU(_sk)<Adjb0::ni%[C/H8J?
%h<=3;M#QX-F0B_0<7tr:#h*uh^-qQ2"NC&8@H)oG-&TY"U!9g1aE]G-Vr';k+utYZ8\pK'??p\E3sNO9jJARtg$0X!MPU$/\0ug-
%e&O!+/eDNfH$n1,c's_"D_%;ia1+U:Q$;+iJ8_X>AK'4O!ng[q?ShI>s3aStKDWANP9]3.beFqSG'3$r1o.0o\iH6[=rlUsmO:hF
%BO25b:e)>(Io47\mR$#=6fhLu$<\ZiE=mJB1%=g)JZ&D1^'a^Ro3C*XW4%tl_,rguNp![H[pC[&$?EsUF^LEqEu;_r?JkYaC16MQ
%aQ;.rP$YlnjTI*b4,7:ZdZ>^^/XC*o)=sb,el;'p9`=2C<-MNZUBZV73?Smb5<_%fXR;`<G5(a3hWmaUo==OT)CL<<IJ*Ddi=qbG
%4)KQ`P3b\lm=4B-]%cWEBZoS58o9S4g$&)RA#\JPpVpP2Uj5P(^hp"Q3WNO_N!?^lWg9c6>jXbreY;?MXl<6dPJ3;+[4nQE_4X4;
%<"\=!gsh7`g-Md'=7iBi,um6i0('H[K18]Vc`,S\hX+WMj7K)-V]'np,s/P7j"tGEJ"nda*bS=A=UP.2)YR;`%KEER;X<gV=2G(;
%cfUL/p_t_uqAmITWS^GOZhd.7Z?L=m"lBjO@dgU;qe)JUMn%/9$D<f,jPZ.th+"<+q+DN'o34!e0Z<BVodKQU`bKkVSS!R>ZSTUl
%90SE/6QUL@pnYOZC,[eJ4/`9AfZXe[F%28FK=aXg+'q4SW+NO5]m15F!f&YQU`4"nr'4"2n/qQdeh]V'i;QZJ")$,#\!mNMZ"5k%
%(oP&jFg&@53,A6okHf^JDAT@/H4`MM;"o2F=/=XiIMBhLQaZ/s+g3m;4HE8jB,I]aqFrP7VlNE!`)rrWa1N))X*V!6JsqB!Z9,6j
%lNjT*C)\.miG/'A^sIqK@%=t)8Ml)gM@2o>lPDD@)"8]SSLoF+iJie8#B:%&PZN6d'W<j]R1d4XQ4XY.F4_5J:^!`rEUK,/i;?a^
%ia:%Lkl9,ojn6?Slh(WA<hj'A"dRFCg2!:g%Q]6Z*T`_8ANM'$H=<:B1IePU.lL/9.<_DH@I6]%`btZ!#2AaLUq6K6gUh,?=>b/9
%G1qr3$_d0&YM)-RJ`"te`9P.,qd:Uqn"0I7giXT=NSLI*$rc'R61n[s%$f8B#!UZB`+l3^NHR*nmF$m,>r'mXh;e4smh`d1YI*%E
%]o\SS;QnV'QqQVd&f.S)3$*YkU#JKS+KPE\",*\FAfk_MO+F:!L]9n!/uT-theVn*&]0`RkIDM(1!n/p@F57-`atEY:V%?FYuKm'
%&A$EF^W8a<H5KEZbP<p8nGQfMEMmesHI2d0h5*YD%8j_Rcg.mZZ+:jjc\k7J7.#@I6WB(91.[H!42'ocq\&PmQ&\Z6]:B>'&*odX
%m:7t$#H\b$Q30JOV(+PYFNZ=\-p,\+#"E5YF*3Pb8]c6k-ArgQjJeHrY!aG`@H1gLePa#M`jd[F)"<Nl-7IZ%bEO&O_N!D`[8)7`
%-`9ZYmE#N"`i>qlX^f^SS\n+cV:3"t2CR8K9T#Wpf%jI4Z&]23#C^b96X4R.VqGBpT'SE5CR4#OS"7b).)^I\Uho.gZ%qVPdcg%O
%!:Y[c?iS[qL7W--r[li)k^0A_QObhLEbGBZ+aUbZ+j&t<[gF-o&\1r^S$!\0A!PSfqhu)oHW'A<nXnp5iFLQ,lJ$ck[FMh/-q`g.
%"#m=toL(pt(#%KT;"pbcl]'BM]B7Dn<qG39eD=j[]Ke.kH4V#-if89pR%+@]n]QPQ2ELC]F><FH/#qCt+<RGmG"REke/\)GLMtQ)
%l\Z2iXH1gYQKf4B2YD"[KsiIa@IUbr04Q"b\`!e5Eh:EY+.i#O0C_jRC@Oq$TrG6c5W];h.2=]S>VpbGq=l9d_.a9VU_0@]=;`]F
%idj('>Y:nn%)btVj[c$Y9-[T=2p'KFA)Bc:D<A%sEo123J^Xcs>uZ,=7QdE^!pc3_-Glcp;_qj4=mn0T5H[UHFHoWSY"Aekq8fe=
%6Oh2Z9$olKg<CBV?)jtT(6&B1XEKnuI[K=td^%8J;C'/p:!+"."c`=,?;k%gMmtrWR#Fc,@-NU11g=X06\uF-M*n?,^a87^"H'&<
%l0_./\6%>G3u<JaK*_W0@V?HZ\8:IR*Qht)Zjmoq6U9V]8aGTlY])0QCsNuO,'&?BMi5Uur"p?ma3D:@W&A%)oE#APpTTa+%g(ca
%(Y@LF?S"f@(hDpOlN`_j+XuB?d9MhrF4#BOq"T9:qsTP@LO\1GA4.?G1QoJ\$2/\O<sQot"!+M%LNd1$d`"VliK\)"&R5*kG>+Oj
%o[\FU)_I$ADS)1Q"U8iQrBds/7FY"p8g:dabS$$$`Q#1/054uZ?A&!Dd\^>m45J`]-f(P0^-%$G#gPA2r+rg9%&+mjjiqM'bjMSm
%!-04b+i1t/f_U&?[*r`rg?J5^>LpdK`JW=9]XU<H:#<i$cAQ,[1W<h4ZPUZk/qmJ2[Dm/4CAEhj]3Pim!!rb(n)D`3p^kL7dEi(Y
%obj]*ppL[V"NoZ[h35b"&QWH&>GM8]BmF$"i-&eX^%oTI0tL]Gl!ERrk;#H;/%EZ);+@fS7rJg&T^rD,0:$,YT)1p4iW<E0#D;-s
%SE1VDRqhGaojI.TUY2iUeAbMMEHMf-]!^G,0^`m$V*b/oW_:8jfKN]SI6=K`!omWkV1MI@m@JED)SNPun'0Ws\8]50Gj$+:Y:WT=
%jpn^[I6)HU\-TKD41h0aL;^pO;k>YK?I%Ye?R&@ooY"(=9'^Lp[&/d^_ds$Y2!%#H6,\U9Pqf6!d:Y0AZ_[,aKiT*"WbjAkXsSIo
%\VnKrn>Ua)lMd\OZg[#tbV\0P4HoMH9eOY^X;lY\53UdJ<kgLHp0b/UW1Mj'Dk8SN44Ee><Z]"P:Su`-5Bno4EjfcLbMks2O"5@.
%Z.#Nk9*Z-smek;\lGNGNM<!(\e)t0I\s]0n]60:fHIc:[Gku`'ITA<b(L(sAGF,>[#7#[*XmLOe%dd0mhR*6kdTcS<AO1a7S>[HN
%f1p+^S%\9O*h,6(od+bTh856HK6P\edQW#d1U+:!f'V5$Y<RH<D(SfGT&4<gDu.ZTls]k9r:F^rkg@hs]sIRfb2,=(6hIC."//lO
%s74Gf[--34VtV"ApD1NuO1[`?DtfTAq:a0jfd@<eq1`;(Vi+mm^38JerLZ``H`OUk-BfNqCR^N33dqY/)gc5ENVbI(BQn`'^E-VW
%Y-qtTC\Qog7ggst^-.olI.4#IfK=NUq!GCLhe.+V)i+3hok8W#mCVhUZ`/[BC#/_Gh>6taDkVUJab.^!8"\+BCRb'JiWR9aB:aO<
%d#FH=qdmLmfmRi3B^Wj`PWek*f<TSbFC3ToG$"L7_eG]"\\%M#oIWnb5%rYoP3kuQ(8i(TaSa$4f]5GATl&DBr#@o%h4%bVS\=W4
%H,AfE>as8>k0@JKf_tY[p?g_7BsDaB$aolAEt>/?fK?g!bOWcf1Trl2WlGL&j(:&#khEd.`kU;SYr(!u]jJPIki2tmA+7<9C5&ZQ
%2f.[NWhOu*H<d'O^Ll@T5POge-^MOCf#.fu$68u84aR$NGsX&F3LC0`]pkL^g&(=1/$3DA@VG5\Jkiq/=prZ^+ahCe^rPRqYZ=\"
%RD-)5Zq]Tc;t5]"+3fl&g=F]57n`_Xc[RQ+)@u6gR%61>B:gen5H\jOhsJtFn*[ogD$c%M:pXLmgjtgc4taVMp>dd"P%WVQ[sgKa
%>>*]#PGdZ>IHW<ND_CJj8YOt[pnPlRB&<>`_Npmbj_b"\m=KZaX?M,So)4Q:Iduh4X\tlt-O*W@iP_LFY5;D"Ao[)jku1LU`Pn^I
%S!ccfB4LV22IBk<oJHKN_HO[Ia(D525I8nP?/'\V46reVBf.-`VlTjsj;+%u+f>4>[VBAOSSblKII-t'pu6M(nSri0bs#BISt&KY
%k5*k,2A/fJN#ZU`[I%UsG]%]q>9-0+H$*ioLM[/.n>i!or]GL5HhDO?7=B1U=i0t*S\=mZhU)QpdK/[<ZHtLNn++ImDf+q&_UGVK
%F/;/f2_^9SX/2*!HVN_iodk]SAGajE])CY@f@u!d'>9[kgH3\DRSb_21mqK0mHuX9:0WIGF7Rek(r*ER1nWAnF8GkJaRmJ31>.RU
%F3d$697&hs%%&C#l+OK[/%t>`UY=k>B1l1*\Zr_a@/n&A;qlWG4d^`2[G%Q4-a2Dp2m\Rto&krUa3,.PQ_Jrd9YZ@:5BG#[LHk7*
%4cl>D)]kmFIsS='=?6,K[a@9f(tX,jGR@:B5hV.c&$*,$+#Z4-9n__EL$e[fHiMXUg<V?W:a$A<0C@@4HnD:MNI$#"r76(\#QShA
%$)48?8l&A$^^>i#bnIei&Cfu;GBmY5G7FoSqAkCeqn%n1cP];MCRZ"/S]+Xqoc?lr(09*lHN*j,A:8W(O4.$rc,%;XYJ9a>rn^!=
%)6;bCIED_9k,EVjX6/=-9\K*:+#`VL2o*sbO6-=EGAI!>$#AtYT3+7e^*Uefr`GnmoS;ZNXDC-\=M.3)J<sA$J!9>KD(PJ5C9qfs
%,[@Oj5InZrAtWtGDDp+b3r\Xf>5>bN<u0D&nCj?84u'L%>u+r\DedW.N:"S"(=,g@fe;4l%F>W$F7&L5s'T=&eNC;;Qo`1:*`Hk,
%e0ajM4e8E!cja$#K!>5"V#srl,QQP7@5jZ8Ok8*Bf`(N9%YK6!qo91^=Ets7Ga22V,NLse6%+C3W&:</rcpKn.\keZ['-<mINm-+
%NB5;\a0(d#*b_)97eYOeF>N"ICH.-J"a\EVcBjT<^d%&=ot3o>!i>^`4#pR121"P5#mWpok#8/^TPXOOOo%&A)uPJ`;T=F?:c`XS
%jF#O<J"9&#D,@p1"m;If%4pX_Kl1kBlVob1X73]5XaE#/38G*0kL.D]BVi$Y^59c7=2Zab`j3?),Ir?cA.C.e0,"'ebrK9:5L%XA
%8,O">'Sot@_\42)BMV93W/M,1-c(*"hnU,TB$;s$_9S7[!e(E-\1/0#`s!_uok4iFqWSrM_Dp1jU*3CdYKbc`4VQQlO-aN<GrI_g
%AK:6-L'+r*\s1\54=9f=kqUErGq8'!cbUJ(>qWt:7Ga!n!)Y-Zc\p.0]L9q5oV-M%;FUUZ;.0=42/fPmTO!";d`^8PGI:1_A,kII
%R)%%/9,aq@p%EY9>2b5epK"_R,P7@[%&gMapL`aG]rd(]1Mm$@UZJuRT;JW3nnr@9T]6X;/nN'UY"ESj\$<_>GSKt:gjstJI).oF
%'6X6%+R]iPTjcWBO)+EW4M:QMr0H?,*g&gRFIt;"4?9[MQC^>:WT%e2[[X[acK:VMAoI?Uq9dpG=Rg)E\uF#fHcN*%Zn\.6N4t(t
%:Kp&!Y8.r*1F)Cf5TB3]d9%sF2):!SbjLr0nd%EDgK8cFo'kD,2JW*QQdsg]GHX5cZ+[\l\8qGGGnNg#27!:K`TM!uku7n53b[2W
%(AtD.%^p!:RkN%L9Dbng2lBjFT7BS$IkH')5`4<g9$S@n:^-l9.-E0n<'NAb(O0;6<F>UmDL8Y]_bA>A+5K!Y9Dfq<RQUS(ib:@F
%\i@LIglMn%pLa:qIqr-UK:n]B?(pTZ6*rPf\O*8;A0,?&N5nQrPN,Gd&$P*TDdZATHEd2Cd>,]?f&O=*Y[0RBF:*(e'qD0h&:eLY
%pYQ@C>CT7<!56N:)"^r%N#rln)MrZhTUUB`kl,)<n[U'L5Ae0[]p5=m&hU(ECd)3Z.IB9uJ(oG=Q<$3%rIr/ZAV$3q<n*%J]<?.4
%IidZNV7h>)]sRh%&YV*rK=thLMWA'<2KU"V^<YS"Uc2+4qaJ`[^OCHQVnUqHq^1aAUP)`WG2hr>Vo8#+4^30E4qG!qE:bp(--e^0
%X1`tmq6n!o^6_%)H+nWt+[[?CmB!Y%k<$_pDdO!@Ll[=8(;G@52>ub/b4^#$?XKh;L=PGpLG'^"+0rVQ$h#nVM7tS^MRcs`+D'af
%KYaP[NnOnAbtFl.a7CN5^X@7DUWU8WfQA[[a48e&T"Jq<9RGEto/"]Wg]ii6qlSkj:j^bO=8%*Yg<?+Dq)>cf^(,3oB;16A\*kD$
%q0mWZ/+$XF^-XcOE81,q:7&GNq9Jo^Rg7Il`[>m*p<<NhqN'@]S&P\4"LH;#D-$[!04@7E-SqhV#@C`JhVCC,Q[)Ub'B?SOFP)A4
%A=75P9>jr"gARige_JBfR)!=,,Y*JQ8NuoK+(&s4e<fetn`]Lu0+[rL]HB1bZ-EoQLtZ-m,^Eg8qg1r`B4jlfNP3I0l'FUE1S(pb
%DV$t.+h.h03-kG.gKL%l5;SppoE!eR4nZMaoc$g%1^n>7BeI3c]/bkn?S!21HE7L_a@ir1l:cX0>&To`5C.#:U\J?EIE5.Fm[]sV
%L:aA@rG9aF5M\>eT71.^(U`C*Je'oP*E(k&'-GFsC-5DVTcP.WhUT;F=Mp1U9?lKuCLgh?4)6*#==fc0DnWZO&&GtsYAJj]HZF=U
%RruFrm;FTD02H[sSCR7ZmF1XoH@*;87>9[b_7`3$=*NDj:;)$ZgKL(:@<?SrESp7ua6$/Eh-"TCA*V6ZlYEd:$ifX'D";i41cGS3
%Zh=rHQHsL7gG@`bb.W\Q5EB3?%rNQ<IQlG%k0J"gc>(JHnNiF)I6/%`@&9'h]0@\/@pM$"HGFaU<^kk1VJgIm0..Ri7r4gKk2kPl
%o6C,^L\[?Ja875#W_u!L]^@tr\B=I#hTjGF'e_Kf-^U4tpn5@R1l&K@V$::?-[-1M-@WDcVdI,T#7_)Ke&P+gfeU&6rY#R`dYli!
%f)3i,KD9?PS1_84?C];:fC(T@'D$Zan`Acb-^j'5fOD:sqe9beG@Q%e]bA)nec0sY(2+?S\j#iSadRSQ\_[_FE>Iu6Wrfmr2`&eK
%f(PF?mX.lTqRF*BG#IX7?YfP`/i):]g$u]K[ZS[EQZo;j*Z$b>r4nJtqfb!bgNW(\-Ol8eoQg8uO5;Jm;Ypd8dTbR2GW7V[ifX.<
%gY05gX2$Aa<jQu$6B!Mc`gR-nCc65+5+f_@:[cdLCL=l)S6p\O?^fWq=k(o]f,`G.[qaK2*'!V.i<Z<k^]md^;]TVHC1s7n2*T]]
%fZMFH3=0TQPJd4La2dWag)Y?d5T@t%_[!kf$gPXs2c&U#Ws=:>)J2p8DQs-J%?4@P0=26k?\34%gl2Kab]coK5/VX44V2+K#Mb)q
%/oP-d-b!EV=r[LGhQ&g>_"T#scTQcg\$UA?-446%"42O?G`\]*LZIm4mlD*7Cb*M8n"Z6*+,"@r=aOlG@I'LhqfX`!YI-I$.B6V3
%)qppSI^qH2H0P.rfdUjTM:\5\ojtj%<hHO3geO4.h&%PlXXQ&-Y<?2GpPq,u7Q&ooqTu1S4q7_lZ@Tep?$a52Ha+hcZP.!;+6rI!
%[g``&fr<kT35NGWI=lGt!>6ZmJM98ZEm'2bT8-q:h>t#gp1q5_2h,`G@*[9B<f_"`qra;il:^Fr2XC*t(#[<Jk/"]8po&5,%&T/"
%khPg)Xi[$f]X(^ms.7N^:0,C?FG!T]Y@,TO1K7MCrK;?eYboDUhCO_YmX.;ciItQB5;.1@nWDB'KR!(*3SeMS/Vrrq/S_$k-ltM*
%6c]%KXo&(I6ZT:aL+Z)88RsIcp&au$gBaEb6Nbq5/2]=e5,7.XDrjUnHujNJeaKWj^AnYch^&p^CqcA6(JE:[he+1rI;C7AonVQ@
%##$7a%m5jI2Jo/51u7TSYcVT1]dZ!rKlG!E;4j8d4i#V:fAjnuqt75W.kY.?in)eSn)/gV)7M]Jqqe4bk4ZX.dI$!bA3eC(4V"3R
%lPo-OSXaQLRFeXnCR\sT7)&o":R5%B>,S%3(66`jgc]JCqR7:8h"b!eX6J;s`><l:G6Y6rC1nlq412]5dsX8[WgCh%??PT5]._?e
%Dl^>`NZR!uTX-G,jN5U>YhZ?//YUZn/q)AHhfM`3lu0dF5(32>/Fq>X&X*,QH18Oss6R8+T["=g)$,LTEo!_;d9$Hh>$Z#!r:mN\
%^U1TH)F(('oPA?FN]XnSIP7eRDB+eX[+r:.H7SB/TO#/faLDZpm`D"_jM$K)l\F6,LsV'l7m%"=B4jB9qIsMaOCWmpZF`!mo'=S(
%rS(CnKUaBq<.U)b2pF2ro%0NRP'Bc]HgL58W/LC[9DeIEn!Mu'hHYK@?(HkaBmlO3J/((mBW&U/g;FH'8*..@iuJFqJnifbK*P]&
%h`XKMUR&!Op+S9(Cq\B=qt\_2pU?K\5Pt"mWB'kKG%&e4.F?cFa+,G-Vp+eYX8BfKlOBe2%NM^N:[?cK09c))#L0C1*b0)^V,"oh
%B^>K9mg4(qZ*NpTg%r@oZW2@]FJ/*3E[8g?XCQ?^d,e+T/B]fN#jn]GIfD8%ZX-k.5G!=DHIa[&&rl_/h8[n2@cMFl@;BW0cH>82
%o#L^ZARp?KUe.sP62!8'W3.&HA?pM#"",T?`#bE@O*9jDe#E2l=cIT/?\96e?ui7'WP&:k\i%3@3&<W6CmID7'^Ij]]\>R'g<7rD
%$LPRA]qEF3;p0O:9*Z&NL8S7"!gs/dhUFHpCZ!@rTAt\eDc"X^.D>4YG&;NabJGiU>o_rf]0n;KaIc]+k/1h)47AXX+Eig<Y'ekc
%r^MF+M:">Z%k/a!AO:?U%M4&oI`ItkIej1`U*frnc[RRcrr25g*cff4H*b4D"X<hUU4//aJTq'=@q+]UXaSc-q&$N;H2DZt7S9D(
%Dp;%LfD&MIrl9Z:dXLr6,767:%"&<@?UulH]X;c\4oSW3rc(%LYQ-"14BUH']DXU4oi,fh3Upp_^-2"0]$Om:d+36H:QNPuHs8`.
%?@RK0qUEd*2NH$SXo%^3$BnRu/U_>]\.buG"pNK%)K0!Do.N)XYJDoA;1GfjYPo7/:$+Bc#PIM&Fm7SS4$)f@h7L;3]/-^I?Hn[1
%G'*UFY5U=_EO1?!q%l+Wo6'W*[^BeX_)'mL077LIF#e!k>-je2co35jC,>H;?f!?dcKZ0PqJu'oe2H(Q;e^#t)s_hnLojgIE5=qJ
%Y2<Sh43fXcWjhCXbiLP@=mNk>9n)jcQ>]JM9RZBr2=A&.G:,*$Vg&m4!afd"qXe1kdDOe49C2(WLK)"%[J5i9^Mn96S:NU\.i<0;
%a6!>Jr3,JBXM>LUPui'$kd7W`\*b$;$8E'rFRS(+UQ_7N^<-UlXj1APZrc)NSn/.>dR1[JS\ke`g*f/"C[mTqdG8p7J>8;L@j,Jh
%j9O8;9$\n<ea^e6Y(*L"_dD3Wi4J84)o"7;S@*^Gj*%b03d3_C@+L]8&AF0)qYno+r.5S[nR'Z[Ypdd3^G>$Qa26F8XfHE'<9W)*
%'of&*48=@TRO9+MUQ^KK5$hCXcsjfC#$n#(Ap"CqVshTAGgR1rD8Vi]Z<J,bptPQa[2T&7rnmA>)#nsu^;+B?s0OAbR"R*r9)m/u
%peu>2-XY?+&jpHLj1h2%Y9-U7mg<]m(R7d'=Cpr.n8JK.TM8>7prV%L_K-:Qk[+#I_-5duGKa#$1k=\56g#."S(U#mJsR6`$+u8K
%oJCMRYL,@D2lEPi]-j03a[TdDF`of/bu7);mJPOK\)L1'Q/:92HYhU@SnOL_Q:&FMq^]CG?&r*jM]YakGO)X)&tr4:)ZFluOg?Qt
%>[4NmEQLn3X"jP)MS0G5MXd4bhVp1APc?s-cR<'qmp1$r8pV\c<+WJd_HZqET/H,`LYe:cb^YJ<^IER<UH[75C]2i>r8,4qf,H)s
%U[5kF66i=87k[#BFS=G5PN(c1$?_69G"2L]"!7U;W$VSGEFGob)-rZk9\LtF6PXU!)c9>*'i<,.X0Mj?>=nlHm]]CF7qnBkE"4!;
%Kq^>&"V0IU7<kB&Wl#?Y6a78SZCnE]_f*LtC=2%MA7``j.XaDtMP(t:Ks#rAk?o-m@msu]Ia'j'GE]%j$$OQm;Df4S;*SILMhHn)
%c3)$?=U"HI1;9K!@A1+;b&3tY\7d?'h,VJ7/+;@-,Rl(7?HmmM;W0@[CCoggp@ZLLDu3ccr6*ULTU%[q:*iIEjiI_l<*HMDkR5PM
%Ig'.*_YB2(_Cuk4C\k#USc1>B"3(42R*2;JR":YcNM#94Njr'jD7K+i$$/@JjZfJu76iCOJH.r>X^'kD\:E*q:6kV1B@Nt7;'8.i
%?rXV>OA]RA#qR?Nr#3]?5gZ_@f%UHeF%d=m*92s9#-2BVi!;!ae%a1k)F'34Y^%(h@Us'N%i@s'J3ojCR"/C/U1b5RC`f#qZBUWE
%q][9uN`JFF>_FOC?mD+'#;ZWgL$$Mk"*;FW*ck*g:0%`uJ4**+,3YQ,\US][3r-,JI=&I0IB^^r>*;b@+(c4L&pQb\8(%f%A0>n-
%D5nMh&.XkeB](NTAu2LS@3f5A!V+bSB+Lht-WErI+CUupaE2ZN!Z(%#`_Tql(7#/^JER:k"Oo6UE@QVJiJ4A`W'U?+EN!Ui5e$lm
%'@ms#D?+H%Pifo.@IVIue6q9Dd"4m#_%0Ys;C'%+b5"qK&G/BpVPL==>[S&L$Eq6sJf_`0YX"a*^'9=T$k^U4q'e.0'ZX"JK*hYi
%0ZXWF&6%MBaSVB<&;QN2Okp3n6J.r/XT2LXL9Z=&*_HuGqrMeK/%.Wmm??gal,Qj?LUeV'dp0$K]dcCm,=N=saN=bS"";?L=Vr91
%+ug%O(d`*eFVQlsT*N&^:jN,/&'"PK$=]YL3DVjAQWpHr/-F4(`<#5)&tpLQ))staYM^5,I;+;S63%&]WMpH[0u:&M6[OZcSl&Tt
%Ym3hOmN8?t#Ku\OmH[;!(pmA2B6\]p6rTj^Q0EYMK;BL/Y:S:55[7U#d4Dl/Cu`-/Q>UW%>uA>pj^BGTqmh`GUNLbi.Ao7"Xs*!'
%rfE9Q1,MhYOTJULp-6X.e6_EY`Z9)-0QAl"B\C'^M+#g'4\6,V/Wo64K13j9&f=Lq.^:BiPE&[pH//ME%8ZInTT)=;!+#ZIi2J;C
%cog^%`HFhjQ;"^fAmM$W[7`tjU3.m50FfM8ph_0]@O)_^JG=Uu7e2lkJ,q2X%W/6RaH8;?R*d#j[Z^.0M?_R^Q'Ltc#7+km+.9]j
%1b_dr(f*IC!F,GWq?K@eTEPaOJ$gTp14-u/,WNKk1;^(n>"CpYX"G^2HF:`iK-XZ5P"j"E8HfDsab\n(QjR6LU8Gk,M&nP[2/F,0
%6l_dSkir5t1#Woe^rXoZYu"$,ef)1u%1<HKEJ_#n8qopa<!jaS,7`0X-S?6hTMN'+V&ZlDNmCiU;K%_Gc9;JshX1&*qq]eOV\*8>
%I:GAK5]^%r/L`N?c@QF2`%<PaFHu&trArk"HrHcM!M+5W<.Y^kP+%Va^a0p!JT<er7Bud5CPoT'>^]VWl`73>^4#+.KpT!W[]#=l
%]XiToi1A+OATmRj9O9_-#C%RI=ASRo]1H+*=F78[E?E.<0U*!uY`g!Q%]30m"AGpY>\Jg<W<CXI!tNC#d?oYgEG/QN-@k^[Z+W_;
%^gKaLq?Djj&e(Zf)(f5`!-;T/M+$)*3DT_+ioUV,R5bW<Om+D.:;ON=1>ja#'1NCXl8uJj.g^1RUd6e0P!',K-!9t>B#2*@0G@e.
%0H/.p(heMB_^HC%!'"TS*#Po>R>"[kK;o."IYYB2UgsbIBMAu0e(]dI/X%#2O^P@&]=K[tj@kK&'p\nH+9D4%("NEl"$]@B$`a:p
%"hH>F10tL:/_Gss1iRG#TH%Pq;).3+6=qSn6X<q1c@E\?(d)+=NdG93`s\pL,6e.04Gf@-lp$RFoG.e7!c:Nm%@(YA/E":9>D=W?
%YV%&R0RAc(jU3l#C_s5_N*%STP$\QJ.3WD`'cfj4*,SrT#lmaTF@o$*!`hoAoVrMD!(mmp1!o9@@06IK@S<B*WIdF+K]NB,+G".b
%#A`Q+B5&gbJ[(_Y"76*(=XjTq7NkD@>6dn<b+M+Rrdd@ZK#\DQqucG,XRpE2E!p913s"IO<<pSJ?!r9A"/8CT"LlH!5+5X@2LVfQ
%hJ@UREfu'e!'TWn*YM<oZ/?<Whb@O\$1?VAEj!Rr"M..,3/IdbR9?\NP=RqrE/GSKk7A0%0S_sS9]qLV0PQpjI<,C\([/!t7VXIY
%:_PeG!QUaC;4N6C&n<4ZE=0](@$O.Qbon-'@1Iq0REbi79E5@E)X0mbjTbsL`!9\Fb(1))e4!-O69t(*(4fBlNCTN(J3]d\b1)/d
%!>=KS18Bm4i6n2p3I,SWZm/)O8=`$[ogD%_eHdC->"F;DMNZ1'o6Vi3Q"15O$a>)MQY&bZ7;[_L'qd!=jY0;[kRs.JpYa4KE\pUn
%)WsuKJ23o[8&DdfCjrHTHeS`=.nmu%Eq80P7r^Boh>q[33s.jH$:^&WO:'QHLnMS8Ll1.$,_H82A;&7DOfBl6%2^<\?8;\/9ZB(B
%9Rt3ALDGie(dF;gH:UN1&"t\,64.W9!3UV?X>*n3Zf&!T?jC*KTI`n[9I<*ACWrgg5YZgD:*MFojY"B2&JY@e!*o]4JC5)F$qqAh
%S>cFs&ErIh]F'pX<a$7H6#QkdW\B1?gu2nBGZL706B"=[(^04NU'^te!c*K5TOL@!FYZ7`=.rb&&;@2WTgQ1lV8Yc/5?L4G1P[+Z
%.0K@V"I?nQH2qb48HXTJ%5Xl;,WEe\*"*4WO/H\qLb/mC.'5T;K.;T:`jLVa8UsL="<)`9+dNQ;5@4o=A_'Kj#<h.-MaSfS8;I`O
%f:6Lj_)&*6ma>f=%jVFXA3@XoU1'<L"3Lc3TF/ZC?uVGdOt7$#0c#jC0m'JhA_8mH%K1n^hIdNBN$`+ddhl_p32mn$Mf[%a'p-]@
%qt[*DVJ$7;'fc6E#PL!kOWTD]fh&9<$=KuT`^F'(S>ebS"SkQ-Fc"3(K?srF1@V>d;6b`X6m'ERU3[%nC]?YpeO%[MLb.=(IZfLW
%ADmj#'bc";M&n&L]SYU;coQ\n6KT5G&_E)t!EGYGKLuo1Oiigs+GR/`@\b%Nm8T*CG995tVZ_e[i65/?7LU%H^qo]g.!blZ>Laq/
%Y,)YBlN,7-gq<uq=Gie>.3P)kY$?i].`"L,J:hNN"rdmXD":73DQ"+6gkm7Njr,O!6tW\@52q$l+ffDr"h)d#2.5)NIIj`G$qA3b
%Q[r542KLH-5bho,M9Lt?5/Rn;:8#c4CgLN@N[=bt@j!.t#`V/DRE*;)$6U0@mL^I!1mn%:orJQ,X`5G>]4+c0@D--6rOr(oH[keK
%=dkSr.nfZ$KsXGL+6i:u[&kV*$JiTFiSGoBMIFkh4H9Q/V'a0t*-)QNYHX#ojXDduYu<(bKmMsKA0pjVMZiUI0Cs,!Cm<'l&jN)9
%CaEgF*/V%Y85WMNkhY0'LLL?,QK+chdjD1de'4l%D_0@N[eXou;23M@Jh/E=4NciWQ-mc(EMAm^%1V]9(!E>6?f\3f<ba";Fk%PI
%.Iq94!>kk"_3iY#kG?iUUW$b?_Qq,_%g`rG.P3E@Ou"(XP\BWtGaYO)92Sf'b:s!PENFPU/Om_hR`bF]7qM3G8&a.:k=t*^SG-;k
%k'WQl3p3ikQS4tT@A,IY75ZkVB'\5Jmlto^j55e@4[pjhU-SpPhif=+'1.93+XtEa]9``2V1GuRS/RqNB7\=tdj&6<"!)cb&+"-e
%,#^7Kfa>Fu+tspbZl\/68FMCK0\%/P^'nCLq(hB&<t#k(7gs^<Vh7&ECK-*:&oCPq#IYpSMa`_/?e`Z'=Sp/gRe`n;/-DAE-d'aa
%+bp)W'i\mLB$n?N?IP>GpGm4tSuABGG6Un/[hMO=nmgIm8^/t&i]r8R6!6H*%=O>QKJ!ri-jQjITaq7fN4$`k@"&]EX`p,k#@K#C
%jfL=k=AG<OKDm]$P:B'->10R%<k@VA5a]9jW`1"9TU\bL9h2&E89Rpq0n"T,Y(f')W+k$uAr\dNUQK)`^6*g$EV4".;:>V\Z5Xd)
%AQUY;Mr]c<o-l,Ikh5P!'j@EWB1Wl;V*H5i/C@KE(pVYgFbiZu`/5Yt1Wip^-6J5B8?6FVEV4^6;8`@n81B8O9ZO^.,?=XaT96@`
%.SH#C.%;nCl(aJ6&@.iU<MqFb&mIeY"[YZ>q/i?SUR=Wi-k\!KF'L_o?.A?D@\eZ4\1ai&rK7d^T4]@85<s%OoY*UK@`]s_i#`4p
%JIDWUWaW9Q=_SF59[f^1:L'I-Z':Lm2]\0\,K]"+I/p.'d[Y]J]P6?Ong@d%)G*up)p&=+=-"[G2*HI:R0[9%#5902JR7l!HrA++
%b]YHJ5_27DUgZpg;?4[r;&h!e:AI5hZkRLoJR7l!Hr<hj&HSVg'^6>A4K]`"12;+89l`P\@(&nk99EQNK7$PuA,XW9#U$4g.&-%&
%QTu:&#bC#@%Ke#WZkRLoJR7l!Hr<hj&HSVg'^6>A4K]`"12;+89i?:gGDs/<K[8SO1(62aPo^4&7?;D7`\C3ZPMkU28p&OhA)^oG
%/Yu<Z*59gp<':P*DmAQ>1`M9i,^PR1*\Y(l;:?YA(rCC6O^t<&OaQ),ok=%rdfX9HdS"?=5l"f$JR6`VBMoJ\Bsp\8M4nHL$s]Tp
%9MhK7=/qjBMDALOU8IP1,/)t@q4sa^,6C7X.FK^bG[*D#IFRlhR\]T8"HZCQd49MS9o</66/*"Q3$E;JJ].3?0\+*=lnbf)Rt3nm
%Q6Ie1dOTd.:F^*?,![uJ,/'_%a46s<7njMe8P1YCdi%n';1W'$K4n-u=]Gc7,_.1lkH9kPemQcN\#&?m15qQgc:a)fMBCoCMOKP2
%&<3JVY@uj6ok=%rdfX:3*tp+/=X)HJ":LB5F<rEF_!RHI$CKK1_Ic93d%J3\5F+hRQ2*ZKa3B89WnMBQ:`0dT,TaZN`)n^[PWWM.
%'N@q#oQF1N%tRqi(<9PJ@Z*fck\EU]K!FVqn.tbXAKm&;AA_*!j69AXqN'%Jdk^rL7\ltt7SHIs!L5r]^N'#&LK3m^5p<BD'rUA5
%;#t\ii^L1=36l5F/7)[5B!STiF.C;:94`>j-!jr:g!K9K>+U7kMtTKO\8bXk=ilT.`D,+1<]95#?J0"Bfucbtad+HGF1edjH1Isq
%):Oik5k%!!Yjs=?73VAV$")7\C4o&sdZu?rb2P$g_B!6G1JB@9]a1\ln,u#VJY>Z30TdE_;`IaoQl!%EDN5tKRT17ba#JBCco,M!
%?u?Q'H5T+.(dgiQfALYb6bf`n`FRQp@cO47=I^dVI5)S+g:-!2g9i1&%=>tj&+-<SEnEM3.88`_\07topOV:$.S%PK0FNVD69[GS
%^f@m=MFABA%Qd#8WDs[M#&E"uT]@%$L87`rm+@G`-jII2<R:jC$NiLT\W'40c5W'i8l\B==`%i<K!JI*RGVc00NtM;*P6jI-#VmT
%Qc+Sk+Y3,#0cI-]Xu_m\4jh8:S:a[iNg@D'Kq!Qs-@WZ8*>)*TR$dFIYfq-0;Yh2NnWMs'bh!KO%\5m#,sMlO*A"r@o3_Y&fdAnl
%3Widmf3ohIs&r*LmpD!4BE6Xm,U22)=QuPRb?sA,.+=>j!&k3b4SXAmI"plVSGTE@WG1N%e'Aj>g7`@00u&9E6\,K$N2:VXgu-/P
%3$q(Gq<3&nKnNI2PS&f[D$e'+mc-ru.?'SH9RQR2UboT0LP1bfV^/Q7s+hHflnb=#^k$"kYX><HL)`>,^!?+]*V0H=/meU4$-&K=
%_rCcBr.bu<;n0kA@nZ=@!6Q(tj&hP5#[W\3'S?o!e!TBiNm,j6LdK5!#ee.s0U;E4$C""I8'7[D/UFcCJEnp#"@is-i[Ehq^mG>/
%_;MTYK:te2(bt+H".ibG#3RWA#5j01L(=/a8Vc\I'>S6B7Rr$GbJb\LZjD8pjT;bP-T.d0C#RM;=tkM/H<=&Z<>QE,CBuFfp`1QX
%<1)6ogL:L'E@i:?l7ONj(o,0&9ursJ?^Sc+>;HU0LO%=DAJ,!"@;<t<]q,rXNOb@Bnr%dUjFAGtCC2rl1Fg($Lnt?]I_VE"l[[ED
%DQ6"e"%qN')!8,u:Fm(=29)I,pkE0R,uGQE?/[KFTNG41LmY'r!TY,4ZMrs^f*?<4+HG^H/oRtE%R<)i+bVTt#iCW<l(C[!0E`/V
%`FR;Q($8h!<jfg:@KLcC?8Q5],9'`P*/ZHuB7p.06V\6XEc(%L4Xm!+2k_Q-V`Z`)3Z-V;@\H7Q4B"M5_8'at1bdA$^q,tf<,Q$.
%J30*JK8rrcYaA(dULLf.87:RWTlsK'GMNl=6WZSd9,l6F6pbH'7@2/IF+(2-qN6">Fcu<^BJ9MC&'%Q5)KHj<,Qf<kh^\s-+"VF,
%i*%mkpjOfoUB[kEGPM0F,S(j(QL#d)?;(.!Ja:B!)-b^S5^NIq1.\:r+=R^gi,E^--KhUrLho.L(?rXXBhTUR<?B'T=-q!k##0>k
%fWL`6<B?>=3+a.nCBE#(`)SR6n8+CiBqZ[0(iqen14X(\%^Y/hQa8HND/^F+#olrVGfl/Y/G(`kCQC&2_FFYR)9u3$9\8u1S4XO9
%1pN9#;D>?h>S\;(X='ib.ElkA^6UDr4bTXAcT;pmEi*EYLaTY2>tGu[^(cnKb;>g?oOS>d,F2Jq@Oe]MJMKoknMNaS;XetKkSG<"
%V_`=K!KLB!Rm8aANlY^X<SX<JJbFt!9X,#8DDR1(0FZ_E?OX+?;qPPZ4Ou)W9qmu2U0R%*!('O0Gr/?[?rD_.9M"GfR&;W\b]=K4
%Ak"$KFY/dY1%Fa(_G#gQ=R'$@>ol,d953D),(Dd*IT6Ec3F,a(e2#`Z%*V(-:./>V'Vdd0cT`grbU\,n(6lRc`KG0^]5c70&au0]
%?[b6u.SE?qOPYn1C03o#1KC8W#:s?>"LL!H7/]q-RBt0T"+9,jF<Jp7RMe/DV$LM:$:?blAW)p."/*2G<0^l!3q31sHMN;9(;du-
%.Tf#^fRT,rj/SK&a-&cQpe,m8N-f4$RWD[M.&1jCW\>US4-:)T($<dqhpr088gQqs"H$_;WD?3Em"c0M3u:se(h&:=+BqEoJH3SU
%[-3DMEG2K#"A3TO_h6X,S><4irs=a/3(8s"0'E]k`Zc-=^qqQno/r(j4;Z4R[Z##B/MZ;'#11PO%IT/'+[uY#%<[QXGfj!@=XB;*
%O(BHU4I\Vb<d96a\>D#r!K.t$'2_Pm,_EY-!s[k<qVg+XN>UqSTT()a>V#T/)/^f/K@X210/I;S!GOYq.SDPsKi+]k(-=td0?i3q
%6?ja#.Z[e:=Z"X<fPn4VkeLWX,j)DZhKdV__>U<oLmX7PQ^UN/*@__fGiGEQhG%r6&BC)<['3lZ#:a+<g09eE=Zl2P)!<;D7\UZV
%PUmG1eYPpVYuSNjK:&BoInFOBEa+C&,/tV@^uqt&IqJ*@,tk3?j,]p&K"*c\(o"Z_A-Z`\5Ym*]<baq+U>f:\U)#L.`]^0:*\aN#
%,`=3-K5/%A=]Cn:n_3k[YpAECDkf^1NC6FuBLmD<U8<E@C#^]VXh:_X>'Y*7>#CKOBLTVTU(n+oPHALbWQ7J+O(8XKXS(^g<`*=F
%d<g5>CdhohOls]OCdfpF[-T#a/6bIq<kd@AfV4FZ8rOM.emR&K`5:[leck<^B3.d</a]@--fZUt$XF`fV2nn\0fj;RWala4Tu7-?
%a`?/>*T1<W?5sq6p!p79K6Pj1VY%])7s15pfKZ[9TB;Ms&FSgfR1fI.1kdVl8mt[!$-jsZ"]^dA\3l5qN/=cfh["$='6X@830KSN
%TQ.`fE"!6cE&2p$C4Jf8cuU3IFoqQ!&t]W1'B*Y%$%A#P*In9@'EIr$s'u>Q\-GbHa?JsdU$D-rVWGJ9`3Flo:;-#JZ\W13a'[d_
%=:.iZ,/\ru/GosY9]FGu-m>I]MpDct@tgU',%BB'X;Ji/5*-ol7kNS00us@rNWF-]5pG.:s1,Gi5L/W30I+j%1KPR^i)'oEB7;)r
%9^snG=_bU0%?6dN&6;Ym%\iJu,3-Ms&d!J#XcNe$GA5GT`2V`*F-[&8"cFhaMMb7Bej;*i4mVie_%d^!"^l?3bH-fRQPiLo#u2E$
%LAAoDX"'#+)*H9/:o$X8Mshu%3d*&SXQ9C!FLRbK[YI1N(C^PcknFXhI[^)e!N@/.f@-ESUXSHG>WF.KECDG/j:Q/]3JC*m:%2;*
%_q<pF)tFm:b_f.$!&1Jt;BHu\*6&5jNtbu%U%&U`$<LF?8!%3j_FU[Dj-U5j1X'*sk+K43Gii1kBeJo#4Hs7G=QrY.s'#Da\Hi9t
%LP!n)i>i?D%cj5Ni6(sbmpC^"./W!B4@JXFLPr*^lgPK`i#8-XLSl>l!G!0(?,DE<mc^N:/NN7cTRE2XkG8dV%/`io2X<o_OC_'t
%Zt2QAV#FJ$</elZNTT)NjZZ^tHPgl!%-B!#+lb?H)e1/8(98cq^CgS=-M+OMGOLp^`AeZ,SpB$8r_cX]\G*(`?I&fo<K6./2;(4g
%JNIOtBiKJ!"Y*B(`-(93QuX3>;=;JIBN<Wg1/?8:W:sSSZ(g5oG'F58=s$mCWIQuo+LAYt=:4M\-%V)Vimnqo2`GY108g\u/l$&F
%2jmSen%HM=q*:^Td6+`^qr^/)Ym/[UptuKYU83k9d#$1JY!XYlfXq]rc=*e]8OO#[+T`B7BPS&1+/:%o#&d7-_B!E:U(Qa8&XQGe
%SDUR1L2L58GX5;BE=5eP_l$>V0l]h_rUhH+2]sgtL:1O>>mm95n#mK:M5_>=kFloE?V:Ktr_DIc&M,b\Fs?B,/rN2b([&-?XWl7%
%L%u4O9c@!q]/Th$+^35-/!tP%KFVI_cu([GMLsHu\SuNqAcsI'h^CkVQ5%XgX.A\/Y^"-]$!A':'9N$r^j)HA3-IQJDo3krI];j,
%&u6540QME[>ehD@jp:Q;[A;o/ILbR28!Yi9&eC;UTQ/;HQCLe^@sZ3ui@.1+7Ks;*i@ja'APQh?2fqQL.$i9Z6X^SdEeP;oq?=\C
%4VE62&T8_bZVPfqOm6A:8VPt9XsfL*?37sJr]Y'3NbK`/=I"nnj<P""oJRap^`1[rMO<ehc_22Jg8Bg^L!`EPFO:;`;p?8@WS5)i
%JVe>H'J^Dj,3I4s+=Uh6A.\Jt\P3UK!<4PkK4j-_1ObLF6J)M2-M9l^/7,$A-<(!TRIY!An>]+'G*Nutet;c4qoG]>]YVbdP;c#C
%PD8cc/EAGo_Wu@B]p*1Sqbrf&a"aDai-lX$r$&[>r>ITT:i$;@"!fV#_XBDBp9)neBU7Z^pkiPL\4L@]+bmFgFB8QM>r4++ggXTD
%nDSjcGA_@nG6rV-BU/F(?lX5jr9%&c?[^o>QXmV+O:G`i^BZ;UADj%37f.7fFD$79-CAcONcI5hUp4:n%?4SA3ZbJo#Er8Ecnr9;
%SE%&g#T&S2EXnJ,[#PQR%-9F&=@bjB>iSPI+p<H;77=]%4&^,n]b;hK*(*(\9ASd'OC"YJ<(D&jXMS1VrLIp@Dk"`VBHcRTAgTjT
%cbr\*d1BSUKOpCV3/Mi@.?tY%o]@c"G`n<J_Z_JWb(u/Z5C7=tCIsS^M<tP8s)9n!(^";0U^2CeZCU^)L(idjfNgbG$:YNPRnh2M
%p&!"sTd3MJ](p?k4^D(J[i=.g`N-n<*_@&;;']E1g>*1TK48Q"R_SeH0rVIAL&5*M-Ui*[]LUY;ae!Ap&K.ifqBsGN_+bm\HFYNh
%1H`LSc1AX)C0`dPE_!i"i-3ONj7j,J9L?cFJW+IU4nq>W4RE16kBY1_hL<YM]%YU$mJ`r\=:1>$"T"esiO@uuZ:*9M7SDaOH%X-1
%m*%1*m]!al2rpskUIk(<r;F]Ss6]&l8o3qG\b$$;W2,O4Tk/2YPOd.b8KuO\:d#Doc8DIEio5iN8OUK:j#\I'V<0Lg:uV,DU)[mj
%ph!5V6bmWiK)0\>mTqb.0B17bEmY9caFoA]2XZ>0H3#n!*C6BefoM89/,&/H4,#=S'AGW^#h`BNE-BaTVRrq1_OME(ZDO2h`ZLU#
%9('Nj3\7Gs;H/ZdM',_(3C$ZaaV^/9OYJ<dZ&],FFFK)N$Ul.1n!MmrM%XMJO/)!fLQEr;&#=ehl4k@%>hT532WLZq]luGs8n/G&
%P#EI=MT0nX.i.[?=OS$0GN?U7'#:ZJ`C,_m;4nXnehfA`r162!'I'jOp2.U>#`)jtRZS5qKQXoUca]@<3XkZAXJ]h7%sdh:qMo[P
%"BVHbdSe^.L.>p_+5$'q<B=U-&q'n=LFQ#$_:p0j%56;lhstKi>5I#9X)5/r:[\_e*H[T,^4SH$SV`;nSDmKP\A6NL+fI2m46iBm
%ZeB)n*VnRc?#K>#86Ce2f,\Jl9H*p$jKpYKr4.[E3V(tTJ]3h:7kC7#^;%rrf$%CkYSiNcNIoQ5WN8!8XaIOU1"M$Zre1Q$Bc"c4
%iCO`Ih8KB+SeHgEJ;L870Z!W]4U3_8n`V-K&a>Mjc-);SYkcQ``1W*P=]koRme*:aM!=oa(,k!b<$j@*#ab_s-lTZ"@/V*&a]?HM
%$C0r1a*/'G;mIqjQ6%?Q7EFR/Cpf#Zg/c[]LIR^CNTK\N4,^uFclZ8KSVV#@%)Juhe4uXO*`8)[Y/6Z^g;=,/bpn-DZV.Wk2R55_
%2KCUPQ/2u8ApWcoC8Q4>DMt3)IV[Q9U6tAT@_0uq(]&$1O@$LY\&jq@)4_-;Q/9@e2R6*)-MrJTZO'3%&+/f!_`Np[VM)#S.Nk*F
%]&e'/LlYAWGr(fG]M(fr:*cQ?#5);IDn!ReJr;:^+rj!:WA7W`.J!0`W"2^JVu#kF-nB$n-Y1Y;NZQ3kUtT^%;<*^a[=hR#UA=HF
%`U#cOesaC]c`TH+W#VHZWRGp@<^qSeeHNsSR%(RDc;kT0k#YbX+[+4B)T/%/'/]lMc@4Yjh_0*0`LJ!:e[&hj64W:2M1e]f<O[=L
%_MeO4*4]iinZKLL>`In?]H\YjG2Td)j,#6-F:S*VFJ;5,>&UOJ)jdg8J=sFBXu^GP]/-`o\*=]gNc`Vk[OC!24^LXom43TJ)n4G`
%M7OM0S,u@qm2DaMTr.])>TI\RJ.+O\<Q-fGHuR&V'QGgN@1ZE_NW*,ABu$;,$AIp(%-iI76>q:l(1<2(6p#k4d#l1=n#q"<6>n:p
%_Ps5h63om+L394CU]]""jjG"7hmb*T>=\%.:_&MGlj)7sfI"7[@AL[(6RUSVR!.+#q]QKY$QRl(_NZ*Ejd\kqZ8WTL6q?>?L)l(p
%PZ&oK.H&LX^L\k,ZS5i)lrD4a]#Kknn`n?L'3cQ#2*#tJWU06$Z^#Z`P<Vfj(dpNY7Yb8Z5IA7MJ]"sgE4+S4Q*eNG97/4JFKJ#u
%A!Va2+'n^=J!rX+N6r@D"ed5.EJ8KN,Iqnq7d>[jX-/)B,RAGPh$]7mWgO)l`S_ZFF8hMuR"_8=Lc4q,)Wm:$(R79F4s_#5*uWcN
%;96)j50Oq0`EMH,-4c-Ve0=)X?am$+R,2J-n6as.&a6M?o`>WN\S_9g0k]#>DM.opqT*YQ2*mPi_?>J;Emi5X$?`&Nk(!krA^j&C
%SZINU'$?!#'8q[5ZTI9[I;IH?^1e&kDPtS%Vu_Ji?JI@@.53`BK?ftg@;C7*/+M\WW4n/57!^f[kddNa_X]\^`XmhhUbVNB+_i/M
%42en@co<aIcKjFaBj-QW0psZmqWB3"l^Og,5`h4@VcMr7]YN\X<pY0)N"A`_!]O<qe\)(p\(5'oGiR0K'>#!4\[WpeZE<VV'/'N"
%IVQKN,lJ8k85DP?*'o7EMo8Oq+Gk&8Z)#IGjdo9\:R[u:P:k48f!t&pVhZS.-afa8`3q"tm\NpN8UMk+PYP#V&.q72[Yh)2W$!=+
%9n3?:9SpK=(EF(N<3#G80X4`!-gE!,mZ^OtCMJg^@gFY"[^d85RCRA/d9tVt0_.tece@U[W:V8,(A'jpV\'[?FP?pt5Q_To<O6Qs
%R+n@p]V437;7<(i:,FV1_BFX,Y3"r+CeN`ThGE0M=!(ic'h$>EBt)!9LoH^`Bk5p0+nkIR7a<D)`0Dr2JgB0N&U<;01O=3'TdhNU
%%,*Y*$[DPPc`&@`m2O4^)G`k>hcFeRaK4+.[>IOqgR*d;oGtf5DLu`gFZbrlXI91m$7RAfVoXJ0-tA2aCNXrD"WZH>,.ek3;T'oT
%@L``0dlN/V.)1I#-"CVR`UmVt.YfqbJjAQk;tRKH$UW?BK4;j\LmjQInH;$_Uf%f`Qq%F8dBmO6]Y!@^2Y%/9l8%@L_u9^3,VU:m
%8-b7=..f%u#l^#4Z.&Hs?7g\6E_s@2^SrpofEhSpJ!GTH,\do^j?s>,7S(YVgDKJ&K3a>hgOoT^Q-p5i9\NNN,-?YqZZ@m8Xg05\
%(U6dqdY0Ih5rb;+M&WI0m9<!`7KNGD//P]K0Ku4?oSLB1J-q[+@0=@]="1(NM0Z8a^-Hj+!XMY<(Qt8r">i_5\A1!9/`8VQGhLFu
%BQmku4\rZA]^;2UiN]\.7TP.?=)Ypl3'l>'@8OFV6/5XO]qaV,8>-h:F(Bs>Z:YUaV.\1ahFbS)B%k<Rm_=C%@F0)uj/G;,`BVG=
%3Z;do3Y#Xu].Z0JldRI$:lXa.STs6GEpgm>X1>Nh(c^Fc/Y!\9j1.(OY?:&j7sloXi8g"O'G26$A7QioJ-?HPO\dH0<B&0tI57,f
%mA.ASllm:N,>&^T9I$_Z.'@:!TPE2h'b+82`%e;LbKqL!#diUq/lkLL0lut47j_Vsj.]jB8jCm=UYh-B?gntPr1?Kl`p]Fsj"F2u
%Wh%0dkA'1"5?[Y4c^h2rn`8q,(<c;Ls74YGbGRGJS?ZJ+4Cp0qGi5(qLZ_E9E`ep@nC'UKg@?E8PNONC/5P(#QcIEWEd7$%e]1jo
%F*IQDnWUGgGiJ'9Me>dl@eAaWbI.!'$*<I_\MJJ6mJ[g6r8ICr@IE7-8Z\EZM6hGi')j`M+.bKR.G5b,OXXM,3g973Gj\Q1a^sE!
%*Qn("jZG1L;Hh!rWjGO1JlRg8#"e;61Se@F[o4166iR/u4qZq.g=`b?1gGYZO/"(#=cl.52p^*q7AC_`f0O30Da-01l]Jo,Q4`4:
%3A:+%:=GhrY.CKJTS)?Kn37>[pt_1Z=p(0)?o,<Fl<r7AN9:Q9NZ+GrE)CF1?bnmE03._&l_$u13pJt>Y]P\\cd1O0Y55"Rd)#96
%p^[T'bYZ@FA`Xi\?oTs"D]LW?V[2X;hf%F^f,l/B)rmZi:>d&8KBoKW$"I\*g#j`%XfJV()sC[T*W/E[Mm22=0.YYQ%L-H9.T^T^
%?1ArjM#3\m\?+8,!I)m;E#j'D0j$KT`oguR7ot+;)lU$S%0!$@!qHsJ:GfsUo$PY*4*lY'_l.H&c8]0bLdKKT[:ob#'Mm3jMUI[W
%\o_\G<6U0`T%FsdpH^f!HG[R"mDE>$G(<QT5'19"_s"<^p-Tm;(H?e!dST(gJaJ?%d1$`<P*R`Fi1]#u=mei4N*M/TUesOD23TDr
%7\#S6FG%Na3q03]'@O&$^9J.#f\UWCBRq=^8hTuMBh*B*%i+A<8PRBm<_pE4knK9UiR0\+qW)p2CW(Km41_P.A*_^QojM1Uem[Ig
%L2:\p34qM&PXsVH8+$+^2sJ`R#:kSs9mX`K6&a=!qmj2,]5Q(1L\057\2HN8f0X>nZQ7!@LW70o#<XF)D.:-;\mDK[lU*$0l-VP.
%NW"qDgBA'?O<3po+Dl4Q"IlY9(Sn<WCV1lt1Z#?COCegUP8]s$CW$Nn:H(h'XTQoG0HogEll4]@NU7aA(J'T$l4%GtGDf6TitdZu
%11c?ArP#.+gU4smA!G0[F[k'sk;DYj[\f%d>LV/YGthLuI:F5%Z+]2ed;.H0*b:Eno7"+B@\dnK:F9G-WKfg@2HM849YRLr0]X3X
%,PF<+XhMU;'lc//(ap6\gkSY;)Leio)mZ`^j7#+iDarIE%MCRt*-c(Gbt+>/jr0^hkL^\m7bZ6!&nC7CZTcT(>DIW:)mZ`^j7#*&
%E'i:+%2*;^)0jFFRuhfZRr:D_4NH$/'@NI9+E;3,4P,>pC"HeFfF?NdhJme2=Z@XCF9dYj>7NbOc"<crN,t!'hK*Lm3$[hS#)TU-
%i)q.6UohPKYmoBk^#AH93?=4?+&@PCEZ4DW$T%<6YnmscX3\(F7LnEH:/?k]kk/bOf_]WMe$oY)+WQ]9%PeWIl&:!33q4DlI:G3H
%@sc8TATIX![*]m>6gT*fL5`bf4Tqd'4@HAcCW%*)7lNttXTQoG0I(ETp5Nq1`qGG1bN/;S[%eQc-MAF(-6m0!9qY7@]BJp(NAr*K
%klVR=f"c?TR#lJ3G)b=>NU7aAQc\J"dRJGB%'f!3)`$u9oFRt8nIWC*XV#3A*Shhm[LPFc_i1sFfJg5^417'f?KTGci%(lT?@@)"
%(+lR!37h8_qidkfS0)SZ0>9R+Gdup!gHcg-\G5X'1Ehje>N<kL4.5Fe:43ttM_EC6p-Tm;(HB(OQZk`AclFCo)KXi)+)OL$S8Q(2
%E6ig<K/b+Ckm#7;lbONgR$"fe:Q954`qGG1bC"RkdRNthDn*gb1*(hNbF0JI2rAkik<.Kb]W>g;[l$>$qDCG4E*:Yb_c(%aZE_+'
%n1n>l1*EC[-s'asME[r\oL@s]PHu/FXif]p)oRXfDee(`Etd:om!ZD=ncFifaCfp]/`)a]I@kG+kerB4cSbD`*c)WP]Zc^d6/(N,
%M7LVGGihMcOZ',,D`lfrSuiSPUcmNV0t%QSlbeC_l`b;D6T2As*+%dNRuql9\+k\nbV.H(8%YkeiH4[NLO7=Q2<)9G*So;RZ#sj9
%qCo*el`b;D6T2As*+!5%DR(lQ*9n=Z&MY_c.INbK[:SVnA[9VdnR<_<NP!m,fc%-iiF4$L#uuZR7+JP2Z25O3gkSY;fSI8H)mZ`^
%j7"fCnUe-q*@/P`o&'uSm"4j`k'Z2tp3F)9S<7u:K>cD'n>m-VdahjafS43Yml7u(7\#TaFG%M*/dJ!$B/@tJbY=)/g#q$,EC/C.
%#:,>3J`lk`+mh>W)S7.3gH,luZOni])r3e89J-k4Yg4pm%qEmD*bM$WCW%*)7lNttXTQoG0I(ETp5Nq1NpR:2=39]*6s\(s0n!)u
%CRCsj=ck%?(=IgnbNPp>PId?^dG!2b!IY`Jm%3=F==A4dc/O#qB'JZONWD/+\$<\?1ge$UZ6@WWS4B[(`!a(\IeopId!D!IS%p%T
%LW!Tb&0"uK_&XQh:&BG\bM1ZV-&lPV*I/b^7%6P[Lqsta+Yosm9t#A67e>OVfoRnRL7!C;!nTKuRZ7D/QFF-68cW5626nCQV3siT
%9>1eD>tXsj?(?5,7[q16A;A*2kn"e@T>;NgohG=64Nm'C?fdW,)NL3QMd$[;Hp%1!HoSZ37.W2lTfL$qD>)*IVVTGX=W4DjI<N[T
%gjIRU4iWYjTH;S64)O]2\Ya70KB7OJYB%Tf^bt[J@ed>N@`&F/K00!B^1hemH'Uqki&\.e0j$KT`n)SWXeWVp(m)#8NVul6[i&F@
%[Un#q=aiAS\(>3QFr-Qbg3m\,V9u0*CLgY[K;De_j6Q<Z*?FfIa+0-1D<ros\8;iR_m]1%E8+3IK[gm/s([H_^,l/&3pkpEo1ch!
%D;o9Jeq&agD8VA(f"ue>f75Y1e[YpUGk&5Q`bo&$FofJ']PSIP*IU1^c7?fX**j6%jqMl2L\K$aF@6YGUH:SsX$b0Y0Z!+%lPkn)
%3OX,C?KQ!l@J4eIH,F^bQK[gYc)Z,7`*CdM3qGHSEE^UVGH9E,]%(U[QrgWeei+Z1Ebt1e]ZbhgXg]JHb/Jg>::W&AP/;\!8',@.
%2:BHiEt,`Mk4fgrIJREc+Yt(D],=+Tmpe$"[g-b.hL&6@NNp,*r+3n&N3&-NM.%&8@)I;ZO<&M12&tbGj(G_*=X+joSYLt@J,=h6
%n)`&@N5euV#6$C$D*lg9#81V[%D^20o#R8^jVi;HbjdKX8(Ne-%"k=-COCIuG4a3A[F#i7gV@0.[`ul3foR'%O9%9+V?tpa@9LKV
%LcKoRRufM5_9b2g\GEZfaS&q89ugoebNlrN-"eaVU>[]TpBqk\/p$N&[\>rmNRM+]6(91fe?m=ncdHLola*Ol88K:3,\[@P=&/k=
%STL"#eo2&;f\M;\.Of_\e]7s3OC&L!+mNZELK&@i]Cb_HNAf`Va9KT@BQ/rL:UlEk\qYVe`pPbO=39)4=%=;SR.N/<9[HMDRS<?J
%S*]buNTP4<nc6Nd%_1l[*`q[(2&q6'G.1np9#=nR26qceA=!C6Lq+DT+VA#//ic'fUJ86.Z2l[>)I2=W'<\*sY$iE2@s8seX*e@[
%V80P<]_KDP]RsBGBXjK<]SNCZO%opsp5/UBh9k=e)QeF9p5,&TIa7JNhOBg/!7(5lFO4WlQtpF=17%[>^WIpI!S>BpM;`2iL^gQ;
%%.8(Bq52uqj]NMHK55"Q`*hg@)df5Q[>t*\I6`hSD="IsM9Xs>Z7WENC@]QQH_i>F[l^gAe*cGj/<)Qigd-*6GHc0>GC4gF\YGq6
%BciFHGoQX]Ht)StCb]2PP@>+-/VGg*9M"6-cJ4u@oLBAElk,_U2CI+pEmWOlB7F#X'oB2>mgd7H4H;P;,9=/E)<RCAJ;iT<m'#u5
%?,/>g5[nu(*+Hen21mtQ<k`9lD0_F:oACP?+Yd([`5^CVE35nLBciFHGoQX]r*M7iNbln?qigqum(TC@b3aX-hm>JP4A2GD.sI*2
%arN%harOi]=75:NDqYHW=Ph's.Vl-D952.)'J0Q4RH^8U3N1.q:O`Rc[`52Ac,B0(NRkg->@U*<KgTX1(sAK37j`S!ct7pS2miZ(
%bM1ZVAWg?726nCQN?+'^2iB<HFp#lGm<4e.Bs\1O,9%8JV*f'HI0On;e2JBM17#DS^WJ0u_0+gi`3=J+@`(*m_&ZS+e?g)tSu'gs
%\;i\50U@H\I=21K3pN0fJ;iT,m&r1i0&RZ$OQ^;;8$!Y#(N?u8jdUFObHj%Z"KmjrM8@U`2SMA-4$)YrNWD/+f<KfR\Gs4CQArIk
%q*7eWX[*V^FFW%5j<G*u9&sj^:$XeErW<ng_D:jG(<;FBYq.H1,7pXkQm`5nFG^<<FJ7WgVY3H\NYmk#&qUdN$GI".&K0D-F!.mO
%efltk.Do,LdQA`8WR=]X%9>O1l:csiBlk&WA_c^)qO"41:3npGNtX?sjW7Mi6id!%O?Zc]2]tu]?[?'9jTUh8jg2_.b,>QAD3#HG
%J][u6]aA5JTr"mJONnrEW`UUJUoih8\fgZ!5=qQ,S>9Bfp">olkcSQQIp(&+s0A.8VH$mG&-&l(+oZ%58,UPNQC*'ifB9.-lA:qW
%"Id(f=$K<Ypq'JdMQE*#YBl9.]$#QYo,I",*#[/&f[kmZ:IOKiP\YGh[O5_sS'8lt@%@&2o*2mGBOhh$!BG&A9*uT<Eb4<'7]dZ,
%Q-s?IQLV*WSC(I^Ds5l_ULG/`6Y4K[c3IsSZ!&_m0cnP*WoU6T\Vcc,<6,qWemo@8AaspdB.agmU:no]?PK@lQ@D=us.HVmL`!26
%T^%t<n%o)]31#;&O@*`=21K`3B@TaW<6+.I5t:NgG,f.RY`t36$MhdK26sqkG-i<h4NI*D4%iogTG<;i2oS?EnY3*S4d0\?B(*qE
%J."lKdsX_a?G$HpO8rHt@b!hJUJF?Sp%XL7Z;6L.TQ$3/Z-K;A+l>f']E?.G6nsePl@>ukB]p-[DeB:J\Y]Y-$R'h^Nn1t*:)OqI
%=A7GHGbS_2nlh=Wr*8rTl1eB?[t#5kc&MOk;)&?#6n"E8>3WPI>/"_6M?(s9=aXeFaG_E%,Yj.,@=)Us*bgBBB(aY/W[+3AHR&^-
%Y9[1ckCuPo:5H\8G8iL].(u"0Wcsf?M+BgH2"V+9IWdj-F%oM"8<tK&U)4G(/4,![J@ruQU:b<naWn@_\W[P0jWlX6.E+Z-*hL$-
%G+M!67F$:WV4_)451(1.9&5Ot9cMM8PBNVUN/ess,RpeNBLj2I-+S\f.[-6F<6UX#Loeq.JN#]Fas[kCPisZ*Zlu"kZ^@G@6kH8K
%d@[Ai_CB,uJg`e>0urBsXN[l=ORa<4Op\5%SXLWFloXf[K8bu--QZ]j:1/T!,23J\L\]FpNYa6X;5`-7/`[^tbu2/U9G*cc`:NB5
%'5LdY"mNh-,3MB61_FdiFkM(%P3tY'`'R=OW"hGb/D;W=o>XJV7asSYNR&eQK<C\CA/O3Y)@tT4mV<K@F`$"5B8.b#POcu""A1H#
%!ejE>+]YUCA8\T8a$K\Sqr.Sb'rA9tQH1LXe/;Dji+Kh[/ko1G9-r"0HVU$f`Tdbp!&RY`$gJfF+cA2!Gb<<G(BplgO2:gZlkPpT
%^6h>ep'Nsmo%e\,VhY*d&f*8ORiLBM4.ODpOl\j5fDTQ/@XY2@r0*Ab+We^WNK%#8-UEclmh[I6T8Ics6^F^!gHIDK.Dc'mTuTpf
%dRE!W"!om3_kWKupABlH?e-;<'dY5IY'GbRDo<jhT5HLa\TMpLFb:P_Do;QNe6.9-<arYUlDOdhOlg[6"cjGe+]p:EJedOtOo!ro
%KXMgQr/BcGFjttn@lU]5TD#M#:0LR8N3U#*qdX%D+p,6;1>0M/W?$^9LNl.N;F:iBdT$tMYi6[>fdH\"C/NJ9o5ca@ePeO6Smf[^
%J(ha(4)%E+0ZNZEljmF)@E44S'`sCV<`b*OU!>tI+K>95#b\-33=>j98B4.)31='RN]NJl@lTdIqm9_4Y*7Gd"uBB<LAermU/H'n
%&V05F8PsUuN%uHC`(S8g(GRHCoO]g"5&Z.UW0'%p;05-*?"5^E8Dc&tN5cCoD[/"l/3ldFSfaOAC:0AtiC;6;NuhKB0bDCo1?&fK
%<!Fq#fJ*KnL]`1Gm$/V=<*@nRH?hU`W3oGKXW_Mb;J(*4Ap>6A`c(bZ9_MnUkNJSH)oF@QfC=<o1_m-jco<a:*NbAdS1$<(K4095
%qhoSb4d`=0*2^[m6lE(;B%AC5a?^a)G+:TUp-jb2l^>0HrHI&Z@=J,$cOlb9JnRR)P2@p'q%jBRcpHR@&Wq!98l9e:-p01FXm^<k
%ZHp'1$A9$+a3eSfj*dseEX4q9^3Q"g*m_LF?gfiMH1.YH3JQQRhF@M7gRU7o"^4D;5feDs4*QP_QB:EY_Ro:4)IY2.V?]F+p6hbP
%H#/IV8/Ouebe?8LCE7Ola+0-1II&&jq.mOC>>OZX@%/>%a8q%_Gd(BLKIo*"$J2-lB>/=AR`!^=#7upW!6flI@r)$b/]VfMa4n["
%Ghng.;%Y.:dab:rW"<=]af'ft3JB;X2P#"GX'F+^/NK+dCL=gn<ha_;pf]dQp_M:<J%a;`L6XW=!u``Z@t0nX21b)7!su;;$o'PW
%-?.3FE_V>6jB*>FKBpS\$"I\*g".TjXeW%u%EMZ.`r7ajb(K$%*=6Aj%)e[(j2#jROYo#>a]LTm"4r_u&ru'=b^J<"lT4="g45.D
%D<rp^ZDNoQaCCX+"_5a'N1F\ERU'Guc$hF6NojEG,EHDJ/8[E$f;FmL*Hb(n5_J0Hm&uS_'pj/F9;,-ldDIISod7h#=U.I!Q[49B
%b?Wr3$W>=!B^P,lbS>I<s-fH\E#-U2/miP(=m!;mDErj9II+/#\MLaU4HLDSbTSm?h@/f`OM5EFUn4F14LgD6ODl`U@d`P'>h;hg
%C'-5W\$<\?k"ai\E_!u7R3?0?DZ\MnUh`!oWFP1+%U;ft89gF@1&lA$Y4&;H[/h/ggXojZF6AhSaCCVI;<F2)OF$N@*<OYH*J2eG
%F>UaQ*I01la)W_$pN=5k>t;#r%;;uYO8W)X/OWc[3Lglr(P4D03d0uN6C;QFGTmSme"FrL0&O&5Xuo@P[BIno/r&W"3l?S]7Rbue
%J%a<C8!e./"#?1OZ+nH521t59",ZG>Ee"V&du<\`:V!@?O6&>^R`F!A#8"o'!4/k)fT(ElQ8Y8LnNQL[q7S+c*OWdmr[!2432.a-
%c"#j>WaEs@lP'T(&N]uQf`9/YlOe7[F=kNmN8\opYO[6E&S!?qnbkdd+^sgAX..20>UD,RTZoYShm>JR4@c0s;4k^h7?$M#X^`e8
%F>'s*DU9^PQu>!>j#Gmbr[K#B%':`b+GO[R!B.Se1Ub20jdH\"Q=K/m*a9j.'#r?2Z`d0W>";lI0d'tO+8`*d?k^&AglWGf,m2B(
%:_U;"YjtN#A'8pMR`!^=#7upW!6flI@r)$b/]VfMa4n[BAWJ,SHmhVerB_!d\&d9__ot]V@-]^>((Ao5O85[/aRUmAf"O?&@u0ZT
%#6Hk*93AF+c<p%IfcG3/h1,^Qqq,7eO3QTDnj$ZO3=`<&&^B5Dj2j7I7[@\$1_6`6%j[+1+_G)R^pT36VD]Q,GoQX]m'-k%:[Uc@
%R:D&@75TR2`fk1!N%E#td2]ZfglZP,#@d,e*aI;of@1"8/8o$JPs%%/>XojYCm[5#3=^s\?FdsuE_V=Oj]FR4?b)1ZQC5"bj_/"n
%<j$Sp273GoQM7Z!arV3"<$Y;"(OJia9oG`&1FI*&_L&&eL^%_)a*c?RA9jJ1CL<_$Z&At;OK,e11/=WG*cZS@dq3sN2miZ(bM1ZV
%AWP*o3q>P1gGobJ@1gc:Wpqo)*Cc@Tk\)#A7ijo49*<DP5%-PLkuue[#06V^?Xf(%f<$EE+O&au^m\tZ?+4E7q51C([L5a'3G^jh
%,N2`7`8&s-[]ZC.W=?pNhT#O-gC/[-N'@o,akLDQdrBjugFOZIm?>#>#&UfnI+)tPH&b@0+.mDVPXVC6'YJ:K=JIq$?gkAD2Y/N@
%E#cpQaBrMJc-SNB!+M<X%^9@^c.ELnau(1DQXf8n*a9j.'#r?2Z`d0W>";lI0d'tO+8`*TZO'l4mRRbU`rIp]BYr=/.GqKO>b7_<
%*4CkiJ8d%E@.*>%>O/2&3JQQRhF@JogFU6BSbIH8c"%cB/h';/S)mcFq2hqC#&UfnI+)tPH'X*6^HUCa);aYqV[:@`QfT"*r:NgS
%D)9enNH;>:O8W(efaP$G%>eNa35gPo1kRju.GqKO>b:&M:#J)'5f-VA@eTI$>jJ>(C?%.:\$<]j2OhL)jFMuP4GK5+7h`CE8@bV8
%i,UB.k/$`ONeCn&&9D4Qi4=r[VD_1ZGoQX]CpSEK)VLG00R;Go*7iNMEebh"RLXtnYr(1AEZKEV1Lk.BdCqfH>jJ>(C?$9bmpgj8
%b`ubD,?)]Qk2NAs?LoF`9@[[)?Ku[e7HV1Y6]a?p7VcAGaBVl$&MK>1bF1WHD>(sYg-t.-;`CAcnilc6akR2-7ik3g-o8e8l:p3*
%J94M@+E]5pk.u3$JV:9b`9ce'\COO/e-9G7De"9bbk9n?E_"!'Z@SC,H6-<=+K_UL;Ies)%U;ft82un;1&#f$Y3W$%C'-5W\$<\A
%k"[GYOiK45;.e#!Uu&J!9gDl\';WXrdJV.0jKZpfV(G47qQt:FUTUR*BX#.1rDf_5`Zstn*Z*9aM\/l[n>:+n(9X#7DgW&KD#4"*
%h4F9ZNRg9WS%^nf^5KIJZe,Fihrg&Eg1:$UQ8Y2Jn2B]9)87o2N]^\dp8!=VR%?+>_b,&GLGeC"3grRiOZO,odI=H&:WQ^(>uM\<
%kBJ*EX3BE,>#4QG%!0kT1;e0"ene=C[+hmXUX:'eT%n:(*!]a:iuV@hVJBn@)%:HDIT_1LUeN8X2*dD:'%CY:EL.6/R;9W*1ct(;
%+R5DUW)(I^B^P,P!7ArGnbO%W[?Y>/O,nM=,sKhI]('m&pQ<3A4EQ2+OTu@3F_Q)'JE@!:`H&Pe,NdI[1n'3NOZO,odI=H&:XE90
%>uM]gi-64:bCW)E[%?&mE&![]0,L5ETllKff$km-NMWC1BK`m,iA_=[grDRbY+MkrNG!4CNVm@]U!p#ajKZWSimO-e"_UT2f&AZk
%WPs3&91STSerfhJ1QJmXmGlZq[=5]a2P/4a54Vds>,7G$6`f_mC-abG.B*H5c!;<:SMU^Xf<>WYcd-:fkOIc]W++S\SaUrc+gQ-e
%Prue98@+PgL,K\)G8p.SK^=AkUCI]elnYMoPaa?Io$B8\;Ub4nR`!XRL4M'!:t_0uVUe1O3(Dp&?,ujml0:"re;f(dXT=]D2ijpE
%6>JR!V;p`PL8gpX$lm.pQ2@l)e90.WNfc;Mf.k$4XA8*2;9-6dd`Rm5ODE<+*>6^;%QWeK3LX0M7^[AM%*.qF0Dfm,?*o>r,f]:2
%k#V_00TFJG06&"+R!dI6PJiltcaa:jC1'IXbu#La@?8q-r/@L[Smsh,PXcRn0pI.Kq89#PnJp-(L1/</"+F6(`rr?9%KLg6KY]Ks
%.4./I(q_^Gd2@t8UH(FWF[4k%2PAi\%8Z:sDe4P<]PbW88H?eiVBbf^>>W6<BuIE+0J1Se[F6OLc`C%R8>G8YAS\@]+SWj+U@23&
%20s2B/u*fN[u/;I%QX72IL2`52e3G/G.-fC6<^[JCh:n#1ha5)auA]?.*p:SmGkO^$CMfJM<EX3Z3n&'jm.ma\Z:*N)iepNNVlfU
%WYnu1*^C,uO99=/N+Qm]GKD]_:+402d6+jt4HOM5#@d,e*a@5nCMEqi/FR(uQ,dV@f989/_\H^4RF>idf)/1TBm2piN^e*BH?'8-
%Zg<5<Y<-Q+5HUaka#MpFr\?Q-N6*)sE%crF@1q88N[iJBXj#p$Vd1i&f5qj#`mI?EgD<d\'N6?Uoc.cB>XOrEhJ!d9b*q%'N9,KK
%0/KLQBH=Vc@CD'PAQI%YXk>qAl*-A1UQI[G7Q)6FUZ#c+T:iT@\u&ssNob-=0=.Z@[%?''E$icDb8E5[>%\%B;_saE7n7UH3qC)&
%E?'56O*bPG5@)_m*67V.ns:4qe#IQO^;eB;Z))+lcEq?2)R?5P2%>S+jB&IGD2B-#>Di.EC"6BO?.1MJ@sK0lX(6)"`/*0.rL-#=
%kiHknVKEP^>2Qm9.7oLY$f%_$Q_P3u7r3U@Kl5P)?bYY$0t&Lod$"E2+$+D-]=tNhR^$/Vn1)h46/'cm,X\SWn:h(Y+?cO^e@:Fe
%M6/"KU`J86EGQ(Hf7sZHf4!:`L?@.FEHm`oSroW.*>0$+%QkD\1X[U4IH)J^4^1^(8:12``3UKBq*'&!I>;*<)k(8`a5L$Mq6Hk\
%I4W)UoDC?ao's#_LFi+XLX>^14jgHI8%6J#f\/*'I@/Tml`b/@6Sl.Y*+%_7$QFI8Tj4p!0HYLV3D-om8Vl-a/Pc[J#AnX?q52uo
%2=Ye,eq)L'-?NcH:K-B^+m.*`$Oq)=BZ/R_2Do[<1:DB<?KE?B_!L:fP4"!DcjaX<N:QIQ\Yd:Aj]Qo(8(l>r*1lHrcM,,LloJp!
%h5CP0"U$LLS';dsElZ'[<!M.IA5*W)a31qk^Y$JDO;tong0pBDFhmpQ*O\m"XfW&QR,1=3.W8MC;"PC>0u%)[,0KK@P>VZ\,[$XY
%UDe.GW(i8`T5<NPLoh&k;_=Y/:TVU$SlLRpq[ouZBZ/#r2RRZ01Tkp9?KGA&i9]\1Ol<Y;fF@l3"mFnQo8SOSbd6t1&%&5F83GW-
%T'q::g3;0f]:f\B$QNL7B:G$TkT,iF_/e1rZYKd!*+Mq-mQm>P3hc_&U3B!P[N2uZ%h<:1?Yes3AmFdQ]Zq'>XO;)_h^\9j\`Pa1
%D\XH'grq3HNHd;`?":5.**YpLICL2I.,0>_?PD1O6GDR0LJGK#K%AQbD6R=(n2`pU6JBln,gNPJn=1(K+mgg=f@Xn$a4:hcd[iWF
%EGQ(Hf7sZHf4!:`%F*P^EHn#tk`MJ#*>39l%Ih"Bk)o?QRl,AtS[%iUL\+"'OEe294PpC)[-t57m"T+gml7u*&=h=YViSg[lmc5:
%c3Toj['SDdZ*WhVXXEs&mHJ-N3OZ@i>p#q$m5jSP]:f\B$QM>El1`ANme\0J],5$J6.n<I[)sc>/nWK,5ONYY=gr*0=YUF_`_bcZ
%2$=HCc@q<'7'3C9jN*4(W;`X^quiIWQ'c-31_O!!N>!_&>_;kie;6NPUUI1-5SAdP[<4gT<0C%9ARdscoL#H`<lE]Gc$WP;,-%4c
%5a>2l0V]Eq3l:/8XVY-X[R%$s0IRPbZ9f[)$/X6mV9DdqO0l%&+k`NM(034ZgbqcHYFp/LS^2Ll!e4=t"ob`n%?QqJJNk\u"FjP!
%$3%0!(&>a#cV*TM__Zr&s74sXUopWnO-T$!28W675>Y-4T]-itb?e",=GCl>s%UqiWF6V=>FCuaePQFS@ZZ!*T?Ds-GVTFXjLl9=
%gk+lkOX=mmjJZ;N&E/jG8_Q5%,ILF%-tKlp,6H3*lWu[VNJIrNehsN?=M&7DW$M*dD7aJVET_KGFjh=%+D983'u`*">Aq*ZhOi.=
%WhP]cQ`?d"LLn`)M?QF.o@jV?=72CI7,STVW;q?,)>M*i3ogh;$,I^L;h@4b-O#"p`G&b)Ss^ELpr04Xm:Q0b,.QCjXU=EO[Au_+
%TMfp3F\d=RSU5o(7K,$%ZSR>8(+!rbKe.fVK'cK"A27#Ip3S0*Bg\a_8CNZn5%W6Dh[_V7V+]BRF@8N,(&?cHj^<15(DZUc8JGBk
%\OIen3gN7:XNq2^5q2:Vj<3_SU+dV[YFR:4m@9RM;2.p1cT1"72kqH+U.%'J:afTJWJ^&fJUXVXU-PV$l0m^VM6&d!2&-^!E=QFa
%eCa;cl8Vle=,?O65I[o>)QY?CMN%:]G,kh=o;PLc8<4YTi$"CTbdKfV80"(Sp*4?bIL,`\)ro\#If7ofp%^ut2NC>j-Ym9Act1$6
%Hr2,ciKeQeKQooO/c[KWH+4EZWTI6+hUCRsN&A#_WRdl`''QS(YopB\&5i+"CFO`?Kr+*4gj[VbG'YVe:J=#)H^R+]M8!ng0([`>
%M1TK83OKRo&IVQo+\7B8`q@skgOh+N1[C5#`hHcU9dD7-4g@I+$K:>5F*n<Lm93a0T0#m=\!:;aYgdc:,"9tXAXQ!Q/mOD,rumT[
%qOk!OSs:n9[<985rUS6mId!5o`&^>Eb(MYB,IYFKMRtX'ZIhV='$@bY.+hhe<WNdkVBXbLn3(t="_Wp/J&!t;-SD16HY#K[g%1p)
%m/m_=6WZl>4Z%]lkS<&d/H%.98`?HjdC&\3NDF4n&KD:lTVtdYQnDCD3rj.ebuPElaP&uc,"Y`r'PM+A?Ig&r]<L)G.k,ER)9SW#
%qh9VjFVh;Pq^\9ep79Ju%(m3U/:b/cmqZLFVX=ggIp_:ofP8t,(5hY_.?Nl;g.I.e*F;65$D:)dV^.2'VaG7lSV\d=7eCaI(22AD
%L7NcZ,m'0-:I.!QSI!15Mcc8lqm#/eCg/"RMU6b!=c&R=U^D8'FGZZLq/*[hrpk-$m'em*e&gHNf_mJL/8as&DK1<JZceioG]&(r
%`KNq74J#d<jRD4c#ENL63d@`mHN20:Z/[LPZ.si'kPh'jbOjRFe5mEVQIBa++p-pNqi?\t/K>2>#%n?Xdc[XnJY'5qND.rW>B$uV
%0WB)_+"/8(nb+=tjd5R;%$\m\NXIIQ?[pMDZ7mfrAN=t[XWO0kc7MjS@%&mnR]9h+%iguT"!T5-T1>d]Kh=C,+BCdoV/_`pd8$VL
%+RUY(*u*RQ)g^lXUOl5Bfc!^KfbfVJ`k8KAcgX_QHBDo&cK9k;]mI%h_PRXN@"(A1Q$jt4?T:dq)aU5&E^$-t"h";;2`)7Kf)3X0
%aQGmL[B#sp%@sc7+&X_^/unE$EpB:$D?:Gk1j[?;q$FXqOZ+"TU.H>UBr_AuSQ4dXkZM>H\h9Eo;CclT7%,-b6<(ZNZ]c>@;8H^%
%[3OFg3a"Fs5i/fh/!Rq@Q]CN.C`slm.bY/VL;b<d,(C\I7Ma0mm*4Rs_`hnZZRh&'!LpF<;WTGb+f,aX-P\D0d:FX`p*:eOak>f'
%M.dOnPC1;04Xo6LHoORWr'\\9os?&Jb!AZ@8tT\5:"KcY?U\p!XN22\HsS'<;R>k6-WEXi-\$GTGC9A2Yn\Da"K[B=Xn?R2+oBI[
%;4B4^,lb+(P<92<]2J\"e@nltX.?4;ct[Li08nYcoV_D\Z<6M@I\tur.0$U.V>?PAp8RUbm8R(D(40%=RFQ3*^HAu4Q,dX[nh80L
%X++:>>+UmQmTWuG^V"XFfh5\%Hj9W=eobVEeiir)rhK@V;;:HOak@mST[%Qm#-?>B]Ffe*&QoHeZ*D%@n;pmmh=lo]haMOq)g.sc
%mG!Xukb#,*gs9J/:QBr3Fcc>".3@<cFP3s,IWuDW`PRB?otJ[nW-?))%dJK/EMSPdfLHV0p`$(*8fE*Qd8@ZC2]k*1])^6PhF5^d
%"jS$T%2Ma16.s13JP<%s7Enr$Kp_],6Y0^Ub!'jIpZ#;>kkk22'P"CR2L*G3YGXE<77?:TI4",qW&h!R6i"od<9rYVs)B9s>lFr@
%r0;t8dg9*>Hp3e3J)l]9)8%!Q5qeI1TCJgU74:M/b0n4I=+7+UJ7+amg.s'DCT^L/+3`Ha'B&4tlOZ-TC`ci]'bcQQ1l1En&^eWl
%GMcGEr>&f:3i7Nf3m`=ooF8hKeZd>@LM3h\RQ<-Yb$akm2>4p.>Se6)H_nnrNVWL=LJ[/Br"SSAi@3j0i^rKD@_\O>]`qD#]?T+f
%ZA7^:Kg?u.&#k)NK[!69JW_dA\l9hf&^c'e?=$BRd5=8J7WOe/HH_SOn[ZY_Z76mk1cuuh[5=AbUb[?ZY7VVWdX3ITqI)e&<=p2Q
%9nfo5qU\#'<&3\mU.$<d,Z*JdUJ!cNFh74@qf#;!6n=1uLHEs7-i'`)]+=AR8%R<EdH8qi<&WN[^h'n)da#TrY6iTkLeB;eYRTfS
%cJ6-BBua=2c9:t>1/J.adT4'X:sAhDnN/\5s-^pLrsI,l1dRE4,bU7Z&%Kc*/=ZoAs$cU71TR,p];YY;m>,3RaBo4$go>\2hIP)k
%qOfM%Kj:iqjhDft]W88+iWekOW$?59fG%nPpG-VVL2Su_@Irqle?_Nf8^TG9CJ*i2ifoGna3UuhG$JYr\;fMa?ucP[Oc7Y.3'1?[
%koPko*@_F`9(6<npk#4+VKbG:':R.>oPEE)!LrfVC\^YT;7)*."4F-8)nGS^1!3d9q7+n\#l*fMH[36NAD@,uCALL;jF3?UTfSl^
%m]=trPOU7N;V[1"7ec\7(et@::L^]O!f]%,0E<V(Ei8Gd`9Yks!Y3frIcLV*i^2BsXp$YuLiMRMV7$tp/6b`fUJi]SN,WOb%FS=&
%%B?@.&PBH55B'O[J*%m"_lA:H:KJ)W$r+GnZI,C5E(F[]D3\JMT"L(!jNO8@ht6[`Ghi^qh?/9T`c5f#jE<[Ba?^MNd1;_l>OYGl
%K8#:eRSt735j$6$@B.r#Z5OB5e3RT:7,l"e&q&/])qBO"7q6fiC3]^;W@?hZ49N!Lj:bC2Klr1@?QecEim99.8/PL,3:%0cRIGVQ
%#q)7r)#kcA>PhGKlP+LQVecPO,cc@%_-r*RJH.E-cCZi5#X37h\QeU>7F@BVs0fi>KYBp-J3`2$ErlkWZTu`(/E*CQPuFC$<Mr;K
%f*P_qn'kWbG;3P&QUJpU-ub*lLE%-.&gE+V4cu&piem5OLaX>jcCYqR\@N$M+iQV(jE<(K#+-5VT-Ed5G',mfU69pWqM9#C4Q;3-
%./?XLg,JDDl_JIQ#BN:d\)cTm!bmGVRNUUN\*Z"+7!b3/6^BS3>oOYW*D^*jp+%0J<>N+kX6>'pQPj,9Did-8d<)%+f,;]\ReFRq
%!7cr]k=1XAY-%Vl-`9lYBd$6B,n&]eABV\NBSmIV9G%HM22tG$`3p>JS45K('MnP*Hj3^Tp+:E[i)LJ"`65j#].br:N8kQha:#2J
%G!%Ah1&I8*Y=NuMAi(?lWS]WFZL"@4E_=>1m3aOtE=F:)1UhfWTLUh"d=.OF5G#.kj?S-oEj"di[CHrZ%7nndWhIVhH>km$(4p@#
%L`Y8+Y?Qu5X"g5h/EKW]<`E$\aP:S5le<j=ZrZrYjm+9l('lM5#qF!%G"V7eQ%rPI#_tTa)8.N@H;HEu2!n;T"`:c,d+C`=Sr$Y5
%%`__;_o7FKqN7FZ5N]uT3/MYW[TRdoGp2bT20Q?d/tLmom`Ea3TTH7hA$@Qoin3D+Mjt](VjQ&r+R#>.e/a'$>)X4iIICT-BY.8.
%('FsNXtgX9LtG`g1??b:c[Y5>-i25a4;"QHa.laEL#1rW!s5[7+:_5,QTQH9E,[)G:>u'2$:b(,DOJD&(E$\GW*kq1K&@j"AR]-!
%#9YCgJ69AC`5\I[Kke%`Vj>ZFG>`SW7FHR<hcIB+TaN$7MgSr#=>;R?Ih"P]PMj.rkMcN'F(iB/TZS$DD`hL;%:)+s0b=V$_nle^
%mfmbtO&l?9DR\+s/tQllQF],#/.adG"&::"VD:n?>[u.9N,[UEGTE7H'338!O.Ur$p,c(<,Aa&Fd_[jDhebOMI]ufRQ/p;Lj1N2l
%M)%oSV$Ak84--l*$.$ja>ERT!S+)N'%FGRfSWgDD**]p,PTTP=fY]oE&5<mR65&..D;DrQC:#,#p9J`!hCjNm4AIj["tq0p^t*Dq
%LnN62F@`N[3'+LLd]"H>&^%Bl'7sI\'Pk#g+W"-?#f$NQ,9XUV`Y0DD$\u7-ZKWe_6tDQF:m`pW$-n)[MkKYF*6;8)Cg]F/6cD?m
%-ace_%i?TZ'Nhdb$'d4?GWg]+%4j.^F#*_N5gma!q&HC!8A>_XLNgWA)p(o;F:^N-+=mWuYYu)]4<do1W]]3^1&S'$S0C;T&XXUO
%f#pK<Lfi-3H.ki,jP4@bGb008(?hY6T0FLNcRiLM<Dq0l$LO(JJ/][6ANf#Q,#d1/#I^h_7I$I:$`_khReB>6L+Jn52hc7:Z"FCf
%4m>ab1bOR3-"87^X=Kd?I@V[s_PJ6as8&DQAG;,\VL:]8Xf38S5/tmc(Y\$\8]">Me@t;8VI@kD9Z%/%%]_qW&5VtL4,hlGS.ki!
%7@&Jf';&,K'=t\E-erMZZFB?<%ViV3g]YN:d(]0W"Hg+4e5V\#1Vr9,86DSE:9;Yi.m+ts#=iV=K1&WMK]rDAWH&c:=#nBWL\`[%
%#_R(a*mtnD1+gjTeIo]\MA'*8!KIE]M6O%RnfJEZZuSLX)_1F`UT#85n0L*<I8de0NtGlWMT)]MS8Zgdd4[9s]'_^T%D+O?&TH[F
%6f5s0AJ)d&`OM7U/uTq=nt)Yi_;-K52Dtp^04!NsLWtmAF'A-i`c3#X)m,gem$g6C_#d\7Z_S26"D^7e?>3!kU/TR#2h_3DfTu$s
%d)RdFo7;.EFd/cmO3;VflC*/^i@)aA84%'C,&?sj3TW"ihn1,l2<X[QaBlq<gm`C=!&!m(,^kkT7pkCH*1W.LF%=1B);;8;&odOi
%jO`E0Mh$00Y6r4BY65'@/UT#iqQ+Lcmg"2>qCS`$>7F;&q6#nGeBm)=G$>gWGNO8l8`]^`\i"86OXUNRfc8&8D>K=>)CVBOcFIXj
%h)rkHS%`e$d8/e9_mtj+6h(m*$<A]9K<2LdpZ;iA1*fWR"kt19XXK4d/imtM-Aq,*5og6Z:Ks2i_Gp^fiY`50s0hoSOKiYAZ?VZZ
%3^gAJro9QF^[AdW%EDir_qV[c(taMk[4qW(L;o"I^`$?f>HI-YWIMcb:apcee^kHTO'su9NfM\T/-FLG%)oJ.>6"H.Bj(\Lc]pD\
%EQ%66VT!$en$JsuoR=BK@m#D(IH2IYX__1^Eqo\f8"nmhT?)eX?X$/!^&TqbgqDI95bUO5B+G0;!Ji(Ppnika'm40`/-g$>]tL<,
%j@[#bf&pF$>Uf+,Z[68*e2JE.F=_??s'Tfl%JrGOMg=+sfbPIj<QGK1r*gYdpq1JpT#p=hR@6V@-X;k,je,?6f#V?d)+Rnip@2kQ
%>!K-gNG!4CO8MA=rQkN!Sn<fKH:D/j-2Pa1jm=2Lf_9c=(bLJP`Jo.JhM=Z6BE`#?-Uah>jPMWOUA'mE486hCEqk6"@30[ea#NMf
%9D[Xb)cS]P!#4SR9(%/VGK@PW5,Ei<G;e<'e[K5mU-bj!HQVQH0><e"?N0Hki0(nX?I5#=lQ6lRc[TnYC*.@J/,<VH?ZaJ>NiPA-
%lF9@oQaLYZJMp'^_=4(J[b0#;0\:PPb'"Z`=/Y9O"]#NsPs"K@hBDpQ2-3W+(-sQcn$*?(.*(pr1"qtsjqY<\rV+_$moT;,+4^_h
%%kEV%5?q7V&nh0\_aseh/E[@U?S`8'j_WEI3(SnR?3WB&-gu\cj_VDSPH_1YI\q@TfQL^!%f)IZ0l_3X#XSXH"u/BWNV9bW8IK?I
%qX:3&hllP2+'&[5*u5^>J%2T6--l@BLQVR[=O)8MT@4jain9G!jIh>jS3>rCH/1BK8^i:"le?-1_Qf<R<Be#6jEJ\[FKo(YE$Oe7
%LS24FD%u"I]FXe696uH`jU]+e0HV%40]jHX..[s"SEE+Af'X/drPK:^^NNa)=t::]Yc"1!:qE?Lf-'oK"2+,<qH-57h7`"/5L=cV
%Tg&Dc9h00o0onlu-[a,DYnt)1Odo$POE6HIiWQ@tI:(J+;[,s5msrU+ZhUC(@;]3p&%);r441ZerQDP8ooI&bIb4Ps"7Ea-E<6*%
%UV8hh^OLdoTCJ.:/:7_q@olY1o8MIJn4RZOpTM-8ps:m<MoPQVOoLlt3$T@3D_PS`6g*BNX8)X3kZ74lkG%W:0u!m).HZ-;_-%j%
%YP+Yk(:QA\msir5%Stri]]>0DU&DTGMa)J1n=c$)*f8L/aSuhrnQlm,pp$"Yejm^Z2PdOiH.ik]\&kmXM^k,]A=S>bPFa-XELIY5
%hk6h-ep,N^Dh>("iTRXAcT^u$b:9mWqqlU2_/hmW+1nVWZ,kfMnjB\'+!2O%Tr[Dr:%A2N3h#'-.$>+#(V!cGJ,_UFn:*4GiF?p<
%2RcfHs6;+)Uul="D8<3k'9?o#@_*\aA+4Rt*4NlUC!d=_:&"*!NZd>"h9'R+J-Slgc.FA-I0r(KX:Kr^*+0UL(/BjOFYtq%fWd<n
%gkS2i*?K%qd-`l@q-YR*4d,j45Q6H)Oq70#0J@ecP4)6f$1I46#E&Na]uJ@=98ACg(moESg),ttIVV%Y:>5Z6S$T++,,RN`5ofh?
%4R=_G;luXm_)MTdbO^^noj\OpO3qh%g^W'Vhskr^RsDWB_uIdMDV5U%N(7SP7]<e<^Y-1'*-8sD<M)p'JI,37#*OsA`.Ht`8(6rJ
%*Qq5W&370H"-;!)fXoLEhms:6&aAQ77Qu:Y_o1(;V_0s?l`[R9,J0Z=n%)L19-IEf0n=[W^pq.P`XS-O6FF!9>k1BNE<Gl%N?NCI
%>G:>s9'=uUUDkc0Hl]J7U[t_)<4pAqa4nPBo$T3ch<;5nNR;Ilg4nechU-TD7[\JBDd:QbTfN)1&c0-2#lS0m^<C]s_qFah<VqP#
%oeKJ2O&PD+;s]QDm#P)hTY3L<r]]Oq^$!^KH9;h4.N&*h:U^9_g]'7fs8RPV09RiaPNQj8\H;PZW(@D:Ihu,1_KBq:D2&&;a<1`_
%Og`=^:WSJqH>6Tm%aL6;VOc@A!_eGA^IVh4,P0@T#qA-gRGDqNL?%Z.]>OL55^hL;qRlFlH.V<PNmh'VkPfF.rtQR,Jqe>Ss.eHd
%CL?>TT$lg#Uec>/TD+J^IS]n#WW"DnWlL.pSJ7t$n*L;b<Z9*p+E;,7_(-nHJ<5ks1b]4abi"ACqP]_p:_j'\9i!dU=!a"IBEKP%
%W`DIb>aDlh\.>=JOe=*&+2$nJW36mnjQ8ce=C.m@jPL@H\OqLs7L"Vi^fRTBJJSjpR#nSGCbK:k=LRX)d.H8>,j'tPNd<G;H1,k%
%GqXmaW\/!Wf9h\"28#J2)p#miW&omRTll.PbdsJr!kaA-=C@VSM?9?!cU^Gr-DBuc!!g7MOfM,9?][B6CLS;^V*j2NQ).)aJ^MVd
%GD2.u9Rg4,F'3T.'Tkf'?N#ZchhoGfK1^S3PoiDL,\4F'pmCm=!90q0JLjRj8bhN(X/W\sC<D80bbUHiY>..ts6@OtmGh-kP.C>/
%-[@HFNW.9+^i*:IJB0jc#[VRd(>S;_=>"6gR@1n18qd,@U-p\>ng5\[/Nu,!a;)r7^1YspU-t,T,/sYhbiU0<f[$?K"HgfNAPup4
%TY`16=>7$!=BYr&N"pp<$ip[Y-pa5*)Qub.f!&Oo5#I26Xo:_7G1a?aRFq&>i^Ec,'T9jePlLZOYT>]%8NW>C;"Q!B-4hm<^Q&/l
%U/Z>1])&j?<H*f["N;mD2t!'<'VcX'/6noXP8j*(igg\Qi$+jmXSUn+33nK30=KMi\c#-@eIY@sUROiUB?,YD4'B=#>*f?G7fF_6
%LI2P09ED?<]&EG:OV#=A*stii/BObY%WY]^ZW8fJ@,/##"jAk1GQ9;<*k!!0gDr<_=gQ8e3^fZIQ*A?FLbFnP=gd@_22`YocLkM<
%64>4Y69p;Zh(-Q6-<_a^'':a8;8FRN[6W&,1;s\K3<IZ2$S$I77(i<71Uk6r9M,^=ba35*Q-q!`8pbh+O&QC'Eoc1C(VMpB?Q65L
%'#'-T[\'MP.`+FZs/fFj'JMUXjU2^jA`b!C/CkHk:lq]Mq?;K]!hM_f(WV\<]\h=#e`hD$oT/CRB_=/IrX!j"o7!8qh8S@?J,WgS
%qg\XT\,Y]bro*nVhuEV(r*OsQ5QB]7rokO(r8jRNl_"0cpP&QdDh@uXmc9ENh4OK4j#^4hrQH>%a-XE&Iou):!r0u7"bU1=X(_Eh
%]9UFr'Dn'8rA-O$*Vd$*bN&T\?&N&S^2K?"i0SZUO&"S6Cg;0N#BrMX\U:!HQKgG6l-4k]()H9s''B16+p6t`GsF)b`(bZX1>;X.
%1:sJKMtP+a]<EN3BO8asU`*Q5"Z^JLW=S<>k+EJ=<rW2u"VtY,_Zj:?U)=+oh4W7fp^lCX`4PFXQRtP@M^^8F]V7j@s$EEj,7HZ5
%/t"-sih#gc<7jsY_ScP4.-p`*5_<SbCF\_Q:G@7E'QKJO](AMt![)E[HI7aXpcPd<+m)+cONES\Z@M1I`)`PdOibXDc)0)J6=]DY
%.*E6I)`tC^irQIP";FRf$&^_HUoP<]-EBD]-![BRXFeN(4a:UplF+cj%q0a@#5onBg?4%nd`!2dZXa^<X/VuEq8?g-n#oGERf;T*
%F#Q9=jZG_-PMZ:XT6C4mZ&-M8oD$hq_lLlarSd"=5]TaH%[VeA)Xql.aqV]aODpNm_3$Vf]*sJ\?@d^hS#g^`1;9H=%Z4+<Ft-h/
%CP=Y10e*I"]2:r29e%cY-nmB$E^7a:8,4UZd]1h3jE/7cnus&J3rgq*$\[7/oj2mn;r&g=?2:qa!/h=#j@?g55@/LOoLHNAS[eWt
%E]-IWPR`uc3g9P1/FA'YKaMi.i)hsQb=**VU31\>HrspS5S_)%Ogq'W3+C6,EsW%#o"c4Z'f8\"As_=%r,CtXJi(OTq['g'Z6gGZ
%.@dDP(cL%+cu*f(S@!b+L)>pRlPX*-37.l/U)-/4PMq[\H7pkMN#[9oP$\@5$>G9a0*T[]jl<c."rl1J25.[br2*kZG19>+6Wo@N
%f+rGIVTe,Dn5D[8&^FW\$-H!'NVO\Ee37?h.M4=)Mi6p9K8'^h!((ol@Rd=_;::DqaB94HM/W+L6,IR!S(pk'h&:;d4L7e%T55e)
%Zba_B?nkd&!ZhnUnbWIoekiK]$lrl'0k<8!s-V2=T,b-1h"ZlVfp=i1"Y/5\GLP,>(1L^';Ia>bqlCC3J&]dRYo9p"JHUoNAS*BQ
%UG*Ifj&crm(g`=SB1-Qf'[[tiBdVaI5LPs"QJt2Y@0/UVO_F0ZSZOb'SNkX"6>Inj58pSc#%S0':L0i<E['6nWt]7>'++dDPV?qo
%A4jg%K4W"XSUpP%6e+mTB/_Y^9kt@c;KUi-K-JUR5XMOXS\_jm#H(83,K(7,+ZU@#X>0sl<l.Ls"8bab.uF]#)U3q'PT,WgRB.+5
%oabA<WB.T/MHa9pikR?s5.015-+^IF'%o*^7`/+u3a.cH9_uI'`Lh0E)@-IW7`<]2>02n<Oi7`,'28s."J<)PT<hhk6VQi4h\.9J
%EtAU-?c2.b>8Ve8#,&Vj*@e%&I3b[K#oZ-`j[,;JL?2>*jpfGH7:[Q;7H'Pg#R`UL4%NpL)%)=Y1_"JSd&bV%5]iP<Lrs_SER:qf
%'5mNO7SkHS=h_s\dIQgXN7nM8Nf/&'><`l2M#9:8)3-N=_^XC5,@iH9<qS@=ChD2[@ZHnQO)+8@$#,1iCP50Re,Vh`4iW\A[A6N:
%8L'C/cciqDJK-[/NhH3:qW,G%)DtI4Qpg""./K%RcSnH?SU3Bpd_K(e[%H$TTu]jFopD(MKQA'N&cBeQ3;b3>C^Fb(Z=A^-[+mGi
%;i\+?OGZ[($ZZA)n.2Ls:kgLYSgnK8%-VW?mhTM[kE+bHbOA8.8=r895Eo!l'*OS+cP!`!lE4Dg0ME?sK(25;kb.ds_8%!#@3O+L
%U98$0e>SfE.fDY:2(Bm6=.Eb+X<9m?GP3$p/Hdj=cp[:-<5J].hk>T8%e\_8i>fB\AB2cKQd0%b7BP^+r"t-s"`gJX"IlZNfHIUE
%"lr!h`8EmP3gpJ_$<]>?+U(PO)&&/#S.uaWgTrqR'9m\^^*(U$&3hKt[-7_E"8SMu'Yf`t@fDdkA\(jr+C%^98@>;U8)Y::Z5&aU
%6b:Ll':@PcV:K$4na#\rE*m%<#AOIcc]O/N-^B3kP9;mjel4g)lPhWMl-^)]H"fj2Jp`^f0pt,I/^<Idj!@[*!Z6&h,@j.'ni9OI
%jc$l^).#6B.!$2lJcnYL&o^KI5>7hIOU6s*$IlS$oINBD:.3H:+Hcqg2CNE@i""7s5u[nd+!mRT&E7:[O_EN%#7LDO7u>HIL_5ct
%jl!#^)a$l!&J05Q%P@R.]#tDX)5F!0\21@D[ReM!>cI(Y2CL@9B0B7,5e:oeUV_CE7fo=C;rV>`Q\%5UH^2[=PT[4lH/#_^k=S3D
%ElM[pqHIbV+rgXJQO_;O5%F^l<ejH7e;'Wh58;bn#;XP<H#VOQiCKhKELrW,lpUPOFbt`U>#WLoNOb&NC)ph;g5P3n]Y$STBdlQI
%aZh"aa2)UbRbk?&ReF)fRYMp]E)f[se?]sRKeVA>Uh6Fm6='7,3JBZ_G<jD.9@=I7P8H7bg.hZtinZ\WChRI/HA]g<a>$8CQglgA
%D?I-n[9U/#1?/^)mFYiE-aQ,jZgS4RY_Z0k&7r#L6/2!Ue:FaCJs6fM>u\!uQ)Rj"W%&`d\Oed6K'_cEd_Dm,.%rRJ9l\&Ca0gK0
%:Un`&eqm[2[:%se[5h)>I*Y+EOdnC0&";`6f,6u9'8@FTMg=0Rekh;s<BAn<b07-W%dKkqk`_.,%8/RqA^WneA3*OjPu45'Hm30]
%f_ojQ;DkDY;.Z453=asVi?TUm):\bd$RD'6N_p1Gj4Z;#Sk%4MR@o@O>85q'QVc9NF\=3%FS400!h\ePJf*X>bR^*c2t%&IkC=Ob
%3Y@<k8*NboG71MnlD%EL;Zn+CBi>dDQ,2L"=4r3m`uEg`-ld\(DVbGS2)c0K&hjoZ_A(L&*@FN4bmfKGX.%[5;fNp.EC5=or*%2)
%cCeZ%$rQ(_AqLFeeUni3j%7[*FhpHo3#Wio*">IQIjOB@!?Pd6E!NdefqOQ@d)]<6QQ's8TQehpA>Ll4Og;ngnnB;CC/.C%cp;2k
%.g!`L:rc%^\40KRiHEeUK=ms3'2m*B-VZACAA<XA4jm;]TUdL'%#l(/BA9gCUc(W-/0d0FWU?EP<UWT_LYQRBL1WB;``2#f7kOJR
%l=L&UnO4`2%M0=%QBo%4k3EF\:t/2I_l2CQ<HN-bXZ?/6*7M8O'-)W1.i%p]6;bc'mH;t%/F)3CPV]!$N%Wps.p";l#,5^=Jb=?O
%:-4ZjK4[=0Xj%84BnE>oWMZC&ZET#m+L]"g>EJKUHi-p,e>6%pAjStsg^</A8fWKlm<[$2I2`:9QC1-o*U_&_[M[PF#d56AZE1oQ
%j!fPcoRmGaMUKVXD0eJ=8<S6]9!<f!Eu_`ih^XNJ0_+FMj<N.tSL&XMi0:Qif,bAQil$7Bj[0lgE!Vb+:30eB<),ib.AEK9G1*c8
%RV,&h<j2%d2DtE@Vq6rrNCOJai705._*+Zbaq\kVG@8%/L?bs.-)^!I6BH%%_c>k5*EQ=Af+%nYFA`ijW0)$G+.AF6;E<_#9mXBj
%aRBi4"u<NZ35H1U!3[Cu.oRH]gSPhml+i(2=/kL>_qG.i2Fcc5dp/uK/+(ts97+GL%\2\lM:hGLEl"S&ijhrIe9/6#f)?_oPkSJn
%gsonAR?cZ@]eFdR78#lq93;M!:>?=Mm(*XXbL8l(cF`r.4;eaed%sKBn"$BQFEUc0n+tfThRSmfmi@2@au?j$+YK=F4)TT[ol=JZ
%6aMNL^=/.J7EA&OaOAqS4W0+^%M;)/SXT+L<1;-!+*k!5l%S64ZI%J`k#Za+b!5BU.q,q<+mh(^;F"P58?2+p1.j_d`NAJIXaMaF
%M3`U^Ur`rhKFm$4o7tG;^lJM0@-NP"fsUAe$?c`8(3B"5lQi"K'uBb].\2IdX1e"q)uL$OoXs;/Vr<iY<PIoJB`$(2IZ.m5[=NhV
%T6G=qc$"IbaB+if6<enEE1ZkskqkG*;8FALA.N83\,tK3$5%hi=[cY?,*#p`fI#sINFtA%oV(Fo#dE2WOUWY0`^X;Eme__)E4Fr9
%L3>9ZMof/Kl=0UVX5ofTp!28qXjI<XX#X9UeN:+K=obUGZ<gBE)8:rjHF=b,]Xk,*o6T]_krmb;Kg#7W#Beu;s,#po\ZcmQpifuq
%95jRI/,j&Q\[gB0cM46f^.YI!=7&6=Eig+4XD9]B]f!lUi?a@)`XapE(D`$!Vg)$dgo._V7QcLsK7c/#Ej[P2&qqud/TLLo=hFms
%gt3LdJ(LWoK7f^6a(!+3.jOI,Rio,$/V*[8U17`7)-W);$,QbET7K'"\<s&QA3R4`(KYJ&*M6WF/T1!*I)G,"gf@L2lO12`h;%r5
%n,7#cleUR3E-\Xs]'j`F1F7]3S.cc(h?<S;c))_rflY_-S&TA?Sa2W3c%Ll,E%\\UL"YdEB4iLi?)*Di%X)_0M]mT6em+/MK%*8u
%!:"3QNfgGUBK`XI#Rd__#3tF4@ZHb<q4m0*7?iFT=OU,C`\cb8[!]*;:-KF.n252!9%otF/`Tp"`<i0<G`8leVA(a<hi/Nn<R3!/
%_2.DI'Ycg6Jr'N7+,P0YenQ:s>A`h0;%JX4QJkUicj:ofd>J0[$Hj/Z7mpQLeCUY'9MqlYC^IcIN\F)N[m^O%L"@T+U?KY1EPZ)J
%[6Pa<:5D"n@;Y"4.o!oM2*Y>=-!\.C)2;7]*53"nU*K7$'9YCU\1;`9E3u!82?R#E\Gr<7&Aq!EMuu;\rTFH-533fPbM4'gs1kX:
%\@]WFK%TUcO&c5]7+i0H2b/O]6"^3I_7YNO/hmBZO^L!=([X]2K+ZZhb.-.m!G(7sO"=@_bCE^*?BJ__?f/]O[GcEEcE3%7%\H,u
%KnBtD)E@5+_hBVs'9:F*_Ja!Pi:*kOiE-i-'A.$\FjecNUEY]%hLY0>)q>Y\E5\k*Uj>nqaH;S\jCn?'8;@.uj9)k+-`g%tD]VGl
%=80:04m_iiR4T37IF[>d'm3k#.UAb3+s*FC^P;n@Y\jW/keb1u]ThGEl\JCZ+RSY>V=qk('+,$[<+l8giPGYFe^3WT70YS5#BK)V
%80;*56j3=7JcR'&$bV9%]ReD=UdV:>mV=^?a>q.GPdi"MoTZB^jU$g-Wg;p2&l_dls+>6tlJkWE(M#Z'$,"[:&mEB)!"i.67;GRu
%`e>g-&fJ*uXWZgSjI-:M>@du5^9aPi`luX.[iP6\&ZrLsV\Am8G:J(?n6VA%5I"GIY92N&q!mB+<dt"cT#E5--[%(krqO2rh]Lad
%o'7[sY5J-Qh2>W)^4.ltO7-JXo8!&oIf/[fSqAsjYAm@mIk0%p/c[A9W?>B@e<\*A</]'MDMo.1,iAn,9!&/=9et:fHK4L;-"WAa
%_W7g_L%_R./bse-_i^M\[SpNFXU9A^TZ49K"sBfbCqM]JX?gn(ndcl-]g:.6lrd&KI:#7FqTt9G=afXbW+JTKJ>D?2.<o)#5\-;!
%:VYl:OEcR=&\1^Fau/c4)GGqum^+K<Ld/*4,VqPgbA%P+XoNb!=`?A.%s^Y:r5h"!E\pbNRg]o?@HbFE-Fnl@BnXEHlisG;Ps6;-
%4Z&e@ESGiETRF84ptO1\CY/l#gb(s"*hs**4S?/q_2f\XKWF<F<7pZ[E4JH'Rp`O5RW8:]#KGXK.UQ<<lJ^Mp<tI$IANcC&]:H`>
%]#.'<2BtB-d5T"-lEknUS^P9QC2,!eQe@DN&N#roIC,45e'YeTd)Iclh$:Ps1eULhqJW-\U\mtoW!5AA%"A+62X`2eD$[1`j!0//
%-ni6]XLL+EE&-F*nD<3ILq,VZmf:7N;=&>%+eK;VJl9fB]V%FG">BNi64+9Z_].]5$&(@3F^i7YN.gC?'g]?F6U]45=:l`RGi+M?
%*&u%jhWOA8>Tc2@/oSGf<1G,QoTf,lUG`j#9c]*'W='/MV.X(6Z7ek(oE6s%$@bTHo-7k[Zpc5bPcb^&BjDJU/uB'ge0q<+7\>4S
%Q1pQX*@&7la/q%C%hmrBZ`\O(1("riAoab,okdDD8tAlKg>>4e]W%*%<q%MRO1LDaD4F%(1Fi2gKH]8;TO;Xc,:En-`8s->bZ\2`
%_#g+a4WhhhKNf:>GEm6KRbee3[Clp*,U;1LhXDNk%RIeC%2WnZ[,_m3i"i*ddM<iM%<ltDk>r3c^f?.,8\CFIG_KD]J59:uI*1%W
%o3^3PatO*0ZY]7Fp61C\Pm$ru/ALao+.8,U2j<UtA]H7N1Tq*Qn\X%[2r60qa0klV/Q-f8q7Q44+d/nAeDiWs=>o!<n2D+bh<iV/
%VR70iPDW=/8te"RW/\G7r<T-t2@*BcXX]4HJ\YDP`]0?*e'Z)TgVe&2ViHo0^_80qKI3T!hKI)NgLt(MHMZ`WeZ%09d"#IhK3p1G
%i?+YBLC>4/kXB3Z[Ym!\2a5M\+tc8EkQ<%lceN5;g%,#nHH$\:Jd_q,(MZ#R"rR^_OJdgiZ'u>o&&fZr<&U<XSWJjN*%Y;1oSBL+
%$[pNPX+a8NIjVH:)IC]5A/>dF_+iti1=H-jk>6ijXC`"f,Is&Y'GDWDnheZL[t#JZ,.ngk$2@CZOL$jdJ7:]5j3q0a*@--]r"*ml
%+iYL79YfCeC)$sn,:<Q"7,ip;-]Q3#TW*f09jOIs$,rWWMSuJ<!jE@gj+ci>H0FD&XeXumqq98;X*D&+Dd.iY0.6;sZ)et_J2(gJ
%(e/2;cku+D>(M;;Z\oeEZ.0=3)3N$5hDUCaoiZGi',Xh;(N5p$Z<_9.E`$L"LeebH3$:<I'Is`dT9qtK;28W4+@64O!7E,:0.h3t
%aSFV-6D,Z(HK+$\`48cB>Z"ZN*1k%_K`]+=TBko^Y4;:bL.(=HVe?>sM[48a'<\<Rmg=Og'AnBUOZHHk]5&8-R@$nR?c?"s@L5=u
%LFI,:%lmW]$FSDK7`(B'qXKE<(('74U7W+#G`Xc;&ERdsgpL-5h>*&bCM4gZ?(QFP`@,H5636?'TUde]=gX>j`f2NnD.i>=9Hob<
%4rO$gi$n^QD-;&i<Du^dXF3kJc0KtaCaU@NXOMT1Iq*@[4@FX>XBTN&&i2=L"VQ%?g\QR?kC&DK8`i*hN-rNf2[G4N#p81c"rm2F
%;#T7@^k"/m)1%8OJoKOto"ug^Y/<lrpIA?+D^QUtB&)*#Tn^(ID4>6Frr(olnYp#7/T0`94<SUZi$jcr##>Q]cJW-9$P165JsRPG
%B1+B`p;_mUX;<uAI];Bj,Cmno#n`-R59Y^ErH_-Gj/7qG@fH44;2ejH/r]>dLW)"Bb_#tb^O9',j2VZ<j`]bZQrn6mI1H_J(TG_N
%F'X3ue#KT1]\,=7RYaciA/%NZLfj\_[$X_mf:I55#0A.G+o&9VnMYHM^,796`=#2f0]SF\X=QKdgA.NV!N8#ac389XW?8s&e#@FL
%0l>4MTQ70<WFH/]Fg4s7)sXm+^+9lmfO><aec4H(n^UqAVbSN4&DF4=[dA6TeZm,P4VmFU-Y:3=+jRljP^o7`')eWA]`aDK1b$uj
%%s19@JJ/pmAnp([C[0QI8mQ8qqi8FcoArE_m%:o"](ef'*0>_IIW3CL>I@'n7^@hDM%>jS2&?=3Q/eQn(JZ*CLP&(n").hFWF^c:
%rnp_`_9p[,a7\%R/pPcJhAf&=U>(FT0DFj/)qSNP9l'#`ff:ZSr^paE%J9RR#G?gCnI4(Jr=a/ES$n(QIo/C8*tb1#7LjgY6Z'l$
%.!kA*icH*4Hq_H.4?5L0\F>@3VCL*i$Q1TfiQ9?5`>B+2na:nE,;dd@SN:1IY!t!Crs=bPF$,'.,pcKViG63Xm#jNKo7+)>RWEmg
%_=1jY=%fI=oWUPaW7E)\?9n0ldN2B8-l;bV7XH8^kH(/MIetCj0-6F::o&+?)3<r-J.gX8f\2_O<gGP0)D>kV3tRPSN=Q71Ge_aK
%>YabL&&1?FAFRMO2q.Hi8N,>tO_Mh=+.d0Fq!k>4OY.PXfE]T-6(;I#b`Qs>gj*uf1brnF<s=*`kW\A+:-`t9jOl[l,cAI(io*f>
%[!4Et?tgck6:&%dKWZ=l1%_@]f2aRO75.diN5.q-Mfp92@T"u_+&3c%NJIG>.7Q(HVl"NGI\b+m1Ou4bWijP[n?1DID1L/+q4$-W
%^H5$^ou#7s+$VPY@.;ZFEU_:Jer-u1c^jr;kAVn4iq9VN4Gk2`@J$:Ca',Kd^-\PK$V@5R"c;XgjHqBYq$cEQJEhI!dj>2(8Id)`
%*YZ$>Mb!r`_/[9bc0<$_IhK@:0EcH,l30Qk/@ti'42!LLpqnmiECE'B(.1K^_<XMtEqae&N8?_]7$W0C7T4$+=\-J^]Q-,m"1.\U
%cO5=-:)WK9/5?qJ*Dl@pKE[<)3P</\!fGu+ArGK-;2t94YX+-rVI2W@;X7B6kWL`mB/O$]AO[#;R/kmDKTRf1U!W+^`$1/H?sXhk
%)^#qcgmb;LPoNOBA3#NOqm;aOH]i)sT5iadMq-Ukc`)TA4Lb2/RMu;s1QMqTe>=N[f^f6Lj-c!cNtggp@Z+$X"mR``&A=JN0qaOR
%*LtC#=G-jQDBOUpF6$"#-]60"JMKL_187+Vem_=8%:hh4O0c'r@\^fn$VfnSDDF5q`u).=)kg^M,9']M-o>C^@+&-;p153dA%,mH
%QQ03L'!b"Bp^/eio2Mhi=&;cun#DfA"$l0rU*eWi?a48Y0&9253U%AK(?foN0Y]qbV3HQ?_t89uLCG8Q>AR>U7U-[;FeO'1b&jTg
%QU3mTYgJ_r'J56.qT:%+]eL@^qtSa8agp%D1aNsmKC'HoK_.dD8@)MRRtTr!@[ljcMiC%UO)C3ulMT:H@8@]oL%N?=iPu^<VN(Ae
%9nQfV[LMJZNPhqO[LV1[4M5ra@J@_6H-I4*cgD%)'n`ko86B$Q*S*a-)_:Zq0l`h?Oqc)>HZ=MlpC#<Fg[:e(LV"6,1\!4W(1+Ws
%M(;J5@mu2n8T_*slH9]uVo<QP5f`G<,B@V09rgECl:pL)GgC\T^I*p7DN=5:MKeXcSbhI(j)6(C5&t&?*NDmaY5;@K_Wn+ge.(lb
%fK!K8_-5HL8,"V5jo#j5,p#6jE4:h1NoR1-d(\EF>'*"ja-e%ah)g^,:@CD&7EeagI!P_p?AY3`NE.%^huf+"#E")Z,;0Fe8Z?]n
%b*5aY6c7fSDYf&g5/8\4c^*5K5_'_&E[Kqs.p<1\m`]m/>YV,^hn_`:PEMXM,ArBlL+Ks*!"Cqtn5Po(BF6ACR@FUNJe_CL$oiT+
%`<d5_/^I2J26IlOnK=EIKMJ<99.l[l"j\5m3<kdUYM6-=^!IB`8s7b@7s,juVF/KRBur2;,1(#'+LBR;C5,sR@:R/f;Kn?UB)Q,U
%fX"1J7U;##WX9-?I'U*`lc(Xi/lE30",OA/pgaL]+H9_n\EgTj]mP%I*>jmA1GVrZb#mTq-SX@?Z<]nrKOWoN7`'(@fB5O+3GZ-C
%N3hVrGa8YP.$D+c"XIkh*[o-_61TB(*n2Bh)8hEeo`ou<1c+R7+I]h27Zakun2A-2a/VbQTZ25=#]Cr>H?Y\;N\-3Cl'>20BVXN^
%'&M(F%7/bX(=?aZ1<*QHUfL<h)_S$c'RaK!.+2Ku7]J`Pe"Z/I5[7-R"U.a>.H4VWdR0WgK12.Wo$GbDGU+7_NLY/S,escE,#\Ia
%<#YSG5+s6`#dR`MWO=jo8-!gH=NJ5N8W--<Rp5$nb1)K7*ZkjsnI2C"C,+Y<T7^e@!=$jpaXZUgZc7l74hP^UDlZA[lck>P4LKUR
%i:.9#?U)8Y[5@FfRhuQ7gR.WP7ODBdCh5;FHo&sLTA%T]qd87-deMG'1cR_+WVQG3[l&^3jc,8>:Mjr&G\V;P_,K+cqCX9Y:Ss'o
%Yb[2U`-;a2LC0q/q!bI%QL(]!pHI."=fcn?n&WrnOMUTLO>`b$4k&g,SE/4,=RDO2\%XE4euD@W)ll`m&'JkL&'o@a$@$\H.$6%s
%1Q2_LB5!UJ6J`9EQ"X?XYe.RFZM`;M%J-Sm%Es0s=:4qnDCrVJHgU/c6VY3i=F5@HHab\&V!P5S<)m9eBcB]Gn*W?V@MBjQ)NbUP
%jODW/ZOgN6bbVd(=7c:kD=.ndHBm@!eGerVVg`YIX_)SXr&$3I-<5%WI%5&m[iud',C_#MMpRlNF<_>m=#(DF+9CtT+QGI-.'b>i
%/a3#G].fASLpU\=R8-\?$\_`.94^hA<ma3\1e^,7G]@$+j8IK_dgKTf"'D*%X7P@pfR-hseR!+H8NPf9o!*m!13RQ\J0BV#$IW5%
%#YJU+*9,%J,8KZBf9=%'HEE<S:Iq(%q<8hbaY4\PjR%93RLAL(CN7.*s&ZeI6=m[+(LP`qII1aR?4qgD8fmkina8rlT0luHK+)")
%rM^/-M$-u4PYq6YFTp`NK@JN9Og("MTe$qS:7q;!XaceSG%<-QI;_5-G.HSHh.bdC1=fc8;`De6nilPEqXW5tc[Y_,UoC"MJMhoV
%'\_pR1O-Yurp1LcEC\4mZuLNaO>Z.hVZUkT2:[28=s2eQNpD-X3Pe)FZ;W2A<Z\u6O*DQ_>@+a7Oh`"k)c4_G0mTCASQ>Yt\L\#\
%qmV'`5!L3OTdY:!/^X/m@2qEf>&('uO7t":LOX6P9,5]\'HcibIY&VdDPo]mH+5/RMU8"`_@jeto=,D]i+ddBMO[67fuQ_BJBG&H
%Srh\uEbG@Dk:7[MKLC3$"Y>GG5HG'A]tYNss0*?eq@d4c3m#,qU8>9m#mgj^K*=Sb\0/']>,,\S7<T93ZDG1BTkl!-\d-a'WhERI
%&bTne*jcihX9p7,Ge\EnQ=Jkq<hlA7?o9!O=]QbNJ)fF#U(W[fCG[iRp2Za$#5DS3ilpb2:";;0@md;aN7([4S(EoOjFtf5&#F-@
%/*@`;VStec?O_^,U"*P>^ZdqPjVM5f7G#])0Nebj3&;.c5"8-*(/:*a!no,UWa-R=jtC6sC_U/mmM@uhg!r64-5P,tn8!_qJJ91t
%P7kTN]<_"gXusEk5L\%,[<,]VS_0VY=(0/gE5-$;<.d,a<;J*PIBcDgIHYHbck7P6K:W("%Zk=2K#Dm@./N,!Ja."GkJo1]5>-5"
%okNsuOmPQX39h/H>iL8-<(*'FcRDinbP222%2G+FAS\(Sh;GF'7(C';ZQ5=Q@.5(k/@@2,+L\K&dpZ5NI1puFp5,_6)r]&Q1.X0)
%&b4uu`FB-q&+G8tY'dH0deN5H<+tXJhSlZ3Yn+gfdDpThAZThPrSRV7J&mfVq+$p8MV#*aaQ7'MW0\B@J$9fhTbg,_`,]b/=mrdD
%faJ_Fc[\jtAG1i\XEDM.!+&OkGS4dkPi'0Y1Qn@2UUh=^`'+n47N_(>Q=$6bg4OFc^eqC+Pb[M]?G*&j;*Ght&"=>[_\(HuZ0+'q
%9u.e*OBFM%*0n?'E4?r$O"XX./MKQXL<s]u:p2kIijQ7XJ$n3^6>o._YUVn*^/q+Da2@)_cmW%8TU[P`>S(2:<Cmd%NF8?!K8#/A
%Of8T-mkBZ?UnT!2=K;ZgKF5-^)'Ab!aX)m1=+kB[(7di.^b$[SB6o2%ZQ1Dc'r!&E_:oe>;83OX,H4]I+Y9j/&m5MR'Gg?FAOEk'
%X9QV4+^Cd6`e`fS&@8%O0e+C^b#-5cK_[55#SbofUhj1,S&+R%mGnaS+nc_5#'d*Yj:TdRGl4T>i!hC^.;1WB(gGcf.0p!0pdSDM
%'+'=H0O14.'Te$eRZ4i5`/GH@?=l@1*SK\ENjqQEfL]=laM!N&.-P:r/Ti6%Pem'C6f:puA=#Ymf2C0jm$mg4'3/QNlGT5iHgkQ2
%h-qe?WpeBrM%^A&;20[[=I]KP;7pkg"+LTKP8T;/HZq59;-tR+n\80RW8U<L/+-\Akn+&t)(-g@[q559i'G`@iq.F_e?$+"QQJZ2
%Ls7FWFT,i-("ous&J_L/[RC.<hGKT&T"M_b[@Oo/)D?)u+_a/LTk^iTg_Cto!q9s.[7/U'AaC?C9;D,+bLVOPJL\f&#?4=R,7Tl9
%AlUW&.IshZeMP"7I&K^h+tQU92ScMWnf%UTD/nZj!&7X@GXdDUZd?&:bD.,ic,VDfn?u5fS040QNiQ;rM"k@dF`\mm$V?'29\g6P
%[I-T$OS$R.(LX2&Qa)`=791:k=hb%.Xeis/,-f'MqH(]V6S&LnqL0Sg%G!r"^$H(-<ftCkUFqsjmRVcrrijp=&l<Y;ULo?@%N97Z
%#0Ju?K[P25FjR*._T85If*Qq5P$[e&Y[c'h1L'WhgfshM%?:@YZGhq"4<^s[7W`6Q6GHt!`OsMVTMbNhi\^aOT@]fDb_g3T,1aWI
%_KU6MIe''Pm8spfn'(;u#!;(226s!13_i5A_V6lF-Ua/g'SnY9EE\Z@(833B`?d`J<B5aW2D^,@(s9($m:J1a]/"2b<BO,Wq8?K>
%`%83qWV#u(OK'ApW(hnV8A_X46;VWd_-`N"<-_)g#3Buh(-i7V=/85S<!*?J$I=MK/BBLth*^0o$t<`>4*3kAlu]2)7\SHJ3@3c?
%=Ip+cl='!E9h]$O7GP8BGl3JH?<1<$YoYMBpgaod609,7*6#FML[C,JDQjK;;m@K+rG^_13Z"<71%Wi\7.T+rnL]74/G37eY_u4)
%4&_b)U]-lVAW98men:jWh[=5_b#+$YkBnM^UVJT3BL`U=o_0@fT[i'iAsS#NN&T66/,*W+;+7*9>jPJ?L:o1<Dkdl"XC3h/+mqbt
%"ZgSrS=i]WB+?)sDs@NhMRhs=pDf+Af,!dsRGQQdZ@f3?/B5:+-75$9_1Y@gA2gi0Y%S"N=;q;s_`J6M\\dh4@(fta46sWZQJ;%D
%Ts!o"qW!CSO.X3eIf27+o&D*:Q!Zb9m)>XRRR+P>:D&GF+^DP7F4NaTU@0:T(JJfZK-[?CVQC_Hc_BZ,&?j)g566mA/aaZPBKeF2
%ZB(u"JQ-hg5[qtc1$:rR;>I#hU^E1?()D9DN(j(PBaFtX=QJO3k['B);&J26ia'XNR>ME\N]Np]ChcB/p6?4?)>1<\<EH!?fpS0U
%F.V=1N:"(l`J>#$F?T0n3hT#*>o&PXX&99OohV@+88sjQ7Q^AP"K!YL+*%dp<q(Zq+o(G"$&ZVTB?d=hOUVI/MZZS^=&FD'i+q-\
%\1^```cEE-21kZ8/9`&.Y%maWF5c).T_S^2.5A@g+AL3!:h(5AB:AH/f5\Btn^Fl89L=lI!;deiJPQR9"5,#_H3i,O=i[pK0;75L
%VO@K+%pchq'#11ir->`3'H,q?7D1tY/lp>C?%(>$[TJX7KmR1bpKb!EgBrQp:hrHrc>I8;(9YJMl>`^ZNZ0X-QQ7"34%k%-2\nJg
%\^bSlGE&NI+%K:Zr&CSRl-E.u.R/@`=7lB0AD\!4UN#3Z#!4oBU)o_/Oj-i@i.eE>Df_VD$Pheb`"pS="6UST.)jbRf`X*'ks::n
%;"sbnMhU1^3?_H7Ug<+Eq204T@]BHZlmN%,oGH]pM$8a\&mhr\ps2G<9F>ai)+cAeO`r:TN%0.P87,oBKCQ%0&r>[=jP*!sr:Yf8
%q!E'DkhF"$4FW,d)]N>f_5pQ_ap-d$)FBB\5ZH.1L06j"oKeV3MY.9s1HXlQl`qPQFUjje.uF8m$&SZK$2O2[nK[dt3j^EcQit>h
%0bmo#6E\#X-5I;!0Tod>7chc[3=r:^#`45r\SEa>UL4h35dIs14-:Et%okW_"]oLF]Q]-V_lQAdN:m1H7I]`d1ro!k@gMj"@^8er
%_B"ZI`?tRn`BW7&SNL:?s,ZA4BI,tCRFIeJ.%"$kZ]5Bs8(Cfo4:WqOgIGK\T1!;4lA>jf'Vq(DGJ\]N*)*p^"9;T94>R?$l5e)8
%>2b$C]>\F^m2@4)B6mBW6i`g+gps&2eIH+)PX@7Z[j%Yqf3k>e"MJS):tT;J\[iB2Y:$JM2u!Mp5/QAHGquXOA?C\TqM&Vg,r,>(
%P9<.62_+E`FR"Em2H2aWgl+#&MOteEd]=8D1Uq.X^5U2u4%Ko+UOUkAL=Y$07_;Pcet@9aDo;.<rqlmQo&D*jOa]Lqc;g'!;u)eP
%K0UcRE%i4G.bil!"ni5n`%e$B/FJ>k>*K"\49@HDQUjOK$!A*R/,Kp@r:i1.bqZ#B'.rBtSsJp+3\r.%7JaP_9#9'k&qU>[2+crb
%:?LROV%5jd'N"(Xg@aX*ji5fYaqR2B3!Y`;$:$`c\;HnK<)]#1KQNJsB/lE.4Do$?GV_[;(tPqMJp8r671'\J">XN#c`&>@K4C>^
%cuO@Q<@c!=5lBU<dndL<d!Sg-SF=i3'Br5&F?\]1@s7l[8W8k\L%BfNKnp]bU7so>Llh's?)N^OZ$LELak36g"_dAhs6K&WHL/^i
%.(gX0r^1UMH&X;e8m3RX":/BX=X<<f0kiTJ!`*2/%eB)+mni[jh\o:l8e8S>kpkL%,uG@FT#4Qa3SJDq\OZs&='uZ"bl2"dkD=u6
%2So6Z]XS=-+/rN:lqQ0Z]YT$MIr^hDiq@)eE<#j<Xcn4*R?)E3]T@WD66;bR<FW.l.`G^7=3DCBH-;n%A4uWf4LrI:h&>sQM%XoN
%Cs9"d/^$3kKdu6K]GUcQ(hHjo!k.A$kY_DgW\TZfeuETV#EaM,O7t8D\0AAG\(:$Q\ObM*Fd;HjdKJmp.9kK8Q%tZKamg0kl1Sh,
%>Pn0PGP!GC``Fh2P@!sbca9I;=O%',R@QPVa.nC)>#,%:jQs#n+*=j<%D7MWUM]>Fg>G9h@^b[p7S,fBg`$CI*ce'oDm,m!iO7(f
%*o/oa20e$IP8X*=;gQ[5_$CcD.s4h\6/#B]1eapqfiKOe@^qG)XCHUC(u'&HB2=I7HXd<&Tm++j>BkL1lg!8SoWX5IDqgl;^41(d
%^8#><m9C_djPQmJHZr^BAlD4-@_Y"-QiEt#j04cFI'd?V0e>0W)S8sm%+'%^#36mf=IOlL>GSs?eS=KdHE_7CC^CFUp;\XsG?ecs
%:$n,(:[ZZugU>,q*o(u4CY"IVE_u2[(R+5/n&?be1/-HMPk?+[=tq,m65Y*Ma%+5p:;1_N%3@pXEBhNG@ruC'2-G^lIUV%BT=I+r
%G@kX[^>D.nh-M(%=$Yc/n/a-CPuBDgW+tL4F9u1+'$Mu*\3Oc%4/nYG#j]g+g)tng4UF_c!D?256(o6%OspbT5EkmJ:#*tTrdlpJ
%'Sq[cA!B\$2m=8<g><KSC3,INTV7GumJ-/2V0kN(CG)D(Qn/M_<rh\[_OBjMpuKq*:oCj\Lpg!Wng9]=Ium;9_?NEXC(u1@&6kA4
%"5TTZgEKINe=?5<pi[JMULZE.M0d>7Jk2S'7$s=23IKGl^$&b&?H'DP6L&hg8'0K`K5g6U0mtatmVqY!#SAAOWVD%BTQ-FMDe@GU
%D*/SS.s5VdM0.M_J[g8P<igli'M5^Zb:@8"^l0;K#aH#8d_X3(4<c;1U-`H^-IuYtBD)rf@\0;&Z(k;E\5%6b(0>`W+@].br<g@;
%fi4iLVO"8)fsjf:r(0@W!+66Sa]9Pp>U?$4qI"h,@2D6FhBpu8,,%ooICfW9btb.M$ah"Bs#^O?J0KiKj<EE`OY'#_(k:MG(d%hh
%gBPK03FcHRZLqWXH(I+tp!6PC(,FE"5a';*PLkld@=iH!_56@-M)/_@O;DsHTse&LTsVj+RL>pSA6/rKT3>bc8i\dm(?)mge<u.O
%U:sP%km,e3'MLBAi!!5@ab@0S+gT\[!g:Ka,SA,8i\(WAIM'OFl-KsXJ$'j-ji6f(K0T?%B`dO"F%XV@A\tE)E@T$$BlB#He6X0G
%.Ba4qokX44hl>0n`$]EINOF@L(+'5A.]W@'*7]kC;Do>b*!QI&&s'l0Jhg;mYZ/)Y/t8cnKB[,'&OKs?I7t9.N5s'B6T2V*bRa]p
%1je(6#DWYcOk<aANbK30gJNPa]En++$".sJ,'G-%j!L94$&&mZqi*<hJ\Xal_jC=Kc'`m]8nQhF1'oN@Wfo:rW)-e@;<dCB;cD^M
%oaj%_TfKJnVB!>(RZ"0uBr4M;lf+LNJq"5H'6?Z2&Rr!2k:R*'MhGo%eXfsW4GB\L2mh++dV*)_9"N-FCIH9J2I3PF'rf3S!4sB,
%5/iTDO[[SKPpa=:@s]^p65ub4`o<AP_W#2]UD3"-J$1k0c]lP))cS2gN[`JQ;$/<0`A+4'qGbE]=Xo`O.-K=uFNs9C^kVt!.`+$5
%/!UFkFB^(>$j,U<W^q)@M`WmF>DcsAf3/t-'<[2a<3[79CGCZEX4J+?FYAsHiD$N2>]NVsHH=8f8b;7!)"/Cj.5$g&J9k'OfEeI1
%Qn^[5!CT*$i,$!ni@@[S;g"OR:nbN^W)=DVTMg&X9WbK[?2nqHCN^Ar3M-b5a..5<Q,bRbf]'2rb+t^IeMh.r+?GlfQAF6YdpE2+
%20XEW[YZ7pfqq/cDR+nX*4#!-Yq%;X=;D5h5Z\,N8$>6s50#-Td`Q9)Pn\C0F"H%"Rrfm\do(<"gY!@S^J!R+-lqe833Yts:`emR
%k"N>)?#P4,.`4]c,SW47A:(3.?G8P#?+iD$?[^A,L/mS%WoL;-lYfenW>QHq?%?;rMLe5GM8T*bf!BHNK%<'1T[l]!"/_h?]E])+
%abhd?3DQ]Ch3)7`>maer(\X6`:ge/RP-?GJpbG[[D=$gc:Mh&4#SiRCYmBHe@@t?`-Kg0VNuJ+p.R[MGY0O`iJ-.9chI6$leO)6h
%;5S9o65.],I=GUF.\CHW1LaV(RZ?DHelRjr===`U>5f6`1S?!f_'I@amC5YGBM*N=3'/D9H]^nMg3VGB,q:$<B4oE/'XRUojC0J"
%?@'W3,%%5s:I)m2)*16mPH'MG7GqTa0mer,NPK;S_Y&LE32fkp&Z&25XFCNpJHbP.grHT"QDV,-5cI1&_LYu@;aKUs9:lt$C-LtZ
%X3U$07JGIiXD1JS/'?EJ>Yqn+26JA*=.&!DFqSR]MX3ai]IJ<;,.gIHaONM;OBl-Xf;`STaVfpF77Oe5RC>cAMW<Jh%aNq29*0lt
%,>Z;o8O-Ko+Q/^iQEI]jMHIgTbTU6TBL.?iUgasFNIo.Z"EPq")?[NDI>)2PIe5Z$"Y+eQp+VcW>a$=J53r'GcLFh-pF.l#lTRgo
%[B2*oU2Ls[V"*'-jBo^@%me3RfMD?"l]4k7(*Q'!SqRQ?_R_r3/VjL!P[ENC@'Yl(GS;M+8GW^N8r4@jZ>NAI'Kf),,Ku%ESl/!P
%,\AdDLj5e757.\EGO"<Za^d`$P'h?2<@MMB/Ai"PL^:1@5&f9a_*nKF]m^)*CTa4GU>#su=WBuo$j,7hm?^rTKD6%J9;"E*!g@Y@
%W(_ns3;9ILRt69HDNj@:86n>G1k:BU7(l"Y7_4?N&V*IBH\ECI"JTQ!)62T38I*Aa+&,nWjCF]7adg[?Xp*`C0A`]W*`o9^Y,ek>
%BPT%LNi<&/<aND_!VVhi`(\T;i/gU041<UP'sYDBl4l\!ET(305*WQ$SL"0A9PSU>"=W1iDBcJji5L4nUNJcAq6XaSO[Tb."-m7#
%%Ll/orTq1GEUMc2&r3j2E)ttU&dKPbPg)l[*+dQKVa466'P:UPdUf80%\\ra[CA3#i.V_0?@1m1WZ^@l"a?O8UD<o!Sn,"WXWO"B
%T/V7]Mp5C^#EZNcLu@RbP=&Q!oh&O5h_]5$Bp0urDb?,,7J,"r-,dnoB'5&(@bW$Z%$Sh*aA*6XEZ#s".^+@:jOQQrSL,PphcUsU
%PI%Df0%l)4AqA=m$Z/,2YeKTLHl)\bjgl,"glqkW?"9&p;FN<7,Dajn?[Z=BVmM<o$5-lgX'LsR)f/B&VUC_e9qHYN@Zu`jk+]*]
%(d;MjbR=Wak6Ke`g0Q.!G/2HD&FiEDfZAXOh1l?VH'P4&3dq*P$j,l`SAC;s&UZ4=O)h"5*YXjQC"!>Gc@LN['l\Je!s]_:2m-_u
%5',_6>_SlC]tV?b;Fs$SOL7D#[RCphej=gaHk6rA5[Y"WXF.!0;,:4RGSB[uo$n2,.9d_6Y`s#EQ3Ck^+9llR[O+Ba0=)u=-]4D%
%fS6OQ&D-nh_KRf$-CL=RD-ZT[bPI3V)b?*(7;SYZE[FtGC1Td5XnJnt:a1BZ>!4>"HB:K)GpD,AQF7:H6ts0/H"iorjbFmm%D!Yt
%r]dN`]S8I9iAM#2G^0ke]'SP&76'6W9p$<THbF2Q/Q,6Y(oJ;7<Ar<I125o#p=EO7+e6IPGE]hm\PRmg#hM-b$]a.iK-t:)f`4r'
%27XW:#hV5Q'U8^COdW_M57-a33bE0ODQY*qkGZNOQXVO\N_ifmNS_pGEl_FLo6SUS\^R+6ii=Sm_P"?9lu>Z4n2:!$qb?pRgcWZ&
%RVaQB,iWGhJPICV:;Pu>YZpVlFN#sW6g)ZN+R`sq3I#q_i#VkSHHAGaYhke+^jfU0'#`aS`D*"D<u_AIER%em*=o;4$US@8i\&lN
%O#mb.LW<[)><B_t"!`-W2EX0/E?$$lY.+t&:Y2*A`q#;i+=u^a%Kt8YM@78!>]Ct+3&Btl4?d%i,cEjEG9q(b>];%V_h[%S!D6[<
%-lDSL/d8#!`MnB8npbd43XO9FA+=]Gno++M%SW/(*K7JB[K$'I+7dkk+9)-1h1)"\hJOZbr6r:Pc[YrhmdL1#rqQG9mm"M_r;?'P
%_["nCrho_H_u#M@TDnN4a6/4RJ,AKf89eiqiUQGn5Q:ZZn,<\BNVmu~>
%AI9_PrivateDataEnd
